// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p4/v1/p4data.proto

#include "p4/v1/p4data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_p4_2fv1_2fp4data_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4data_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_P4Header;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4data_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_P4Varbit;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4data_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_P4HeaderStack;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4data_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_P4HeaderUnion;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4data_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_P4HeaderUnionStack;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4data_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_P4Data;
}  // namespace protobuf_p4_2fv1_2fp4data_2eproto
namespace p4 {
namespace v1 {
class P4DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<P4Data>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr bitstring_;
  const ::p4::v1::P4Varbit* varbit_;
  bool bool__;
  const ::p4::v1::P4StructLike* tuple_;
  const ::p4::v1::P4StructLike* struct__;
  const ::p4::v1::P4Header* header_;
  const ::p4::v1::P4HeaderUnion* header_union_;
  const ::p4::v1::P4HeaderStack* header_stack_;
  const ::p4::v1::P4HeaderUnionStack* header_union_stack_;
  ::google::protobuf::internal::ArenaStringPtr enum__;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::google::protobuf::internal::ArenaStringPtr enum_value_;
} _P4Data_default_instance_;
class P4VarbitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<P4Varbit>
      _instance;
} _P4Varbit_default_instance_;
class P4StructLikeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<P4StructLike>
      _instance;
} _P4StructLike_default_instance_;
class P4HeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<P4Header>
      _instance;
} _P4Header_default_instance_;
class P4HeaderUnionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<P4HeaderUnion>
      _instance;
} _P4HeaderUnion_default_instance_;
class P4HeaderStackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<P4HeaderStack>
      _instance;
} _P4HeaderStack_default_instance_;
class P4HeaderUnionStackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<P4HeaderUnionStack>
      _instance;
} _P4HeaderUnionStack_default_instance_;
}  // namespace v1
}  // namespace p4
namespace protobuf_p4_2fv1_2fp4data_2eproto {
static void InitDefaultsP4Data() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_P4Data_default_instance_;
    new (ptr) ::p4::v1::P4Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::p4::v1::_P4StructLike_default_instance_;
    new (ptr) ::p4::v1::P4StructLike();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::P4Data::InitAsDefaultInstance();
  ::p4::v1::P4StructLike::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_P4Data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsP4Data}, {
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Varbit.base,
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Header.base,
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4HeaderUnion.base,
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4HeaderStack.base,
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4HeaderUnionStack.base,}};

static void InitDefaultsP4Varbit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_P4Varbit_default_instance_;
    new (ptr) ::p4::v1::P4Varbit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::P4Varbit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_P4Varbit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsP4Varbit}, {}};

static void InitDefaultsP4Header() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_P4Header_default_instance_;
    new (ptr) ::p4::v1::P4Header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::P4Header::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_P4Header =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsP4Header}, {}};

static void InitDefaultsP4HeaderUnion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_P4HeaderUnion_default_instance_;
    new (ptr) ::p4::v1::P4HeaderUnion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::P4HeaderUnion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_P4HeaderUnion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsP4HeaderUnion}, {
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Header.base,}};

static void InitDefaultsP4HeaderStack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_P4HeaderStack_default_instance_;
    new (ptr) ::p4::v1::P4HeaderStack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::P4HeaderStack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_P4HeaderStack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsP4HeaderStack}, {
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Header.base,}};

static void InitDefaultsP4HeaderUnionStack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_P4HeaderUnionStack_default_instance_;
    new (ptr) ::p4::v1::P4HeaderUnionStack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::P4HeaderUnionStack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_P4HeaderUnionStack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsP4HeaderUnionStack}, {
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4HeaderUnion.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_P4Data.base);
  ::google::protobuf::internal::InitSCC(&scc_info_P4Varbit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_P4Header.base);
  ::google::protobuf::internal::InitSCC(&scc_info_P4HeaderUnion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_P4HeaderStack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_P4HeaderUnionStack.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4Data, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4Data, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::p4::v1::P4DataDefaultTypeInternal, bitstring_),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, varbit_),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, bool__),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, tuple_),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, struct__),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, header_),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, header_union_),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, header_stack_),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, header_union_stack_),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, enum__),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, error_),
  offsetof(::p4::v1::P4DataDefaultTypeInternal, enum_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4Data, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4Varbit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4Varbit, bitstring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4Varbit, bitwidth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4StructLike, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4StructLike, members_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4Header, is_valid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4Header, bitstrings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4HeaderUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4HeaderUnion, valid_header_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4HeaderUnion, valid_header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4HeaderStack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4HeaderStack, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4HeaderUnionStack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::P4HeaderUnionStack, entries_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::p4::v1::P4Data)},
  { 18, -1, sizeof(::p4::v1::P4Varbit)},
  { 25, -1, sizeof(::p4::v1::P4StructLike)},
  { 31, -1, sizeof(::p4::v1::P4Header)},
  { 38, -1, sizeof(::p4::v1::P4HeaderUnion)},
  { 45, -1, sizeof(::p4::v1::P4HeaderStack)},
  { 51, -1, sizeof(::p4::v1::P4HeaderUnionStack)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_P4Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_P4Varbit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_P4StructLike_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_P4Header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_P4HeaderUnion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_P4HeaderStack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_P4HeaderUnionStack_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "p4/v1/p4data.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022p4/v1/p4data.proto\022\005p4.v1\"\224\003\n\006P4Data\022\023"
      "\n\tbitstring\030\001 \001(\014H\000\022!\n\006varbit\030\002 \001(\0132\017.p4"
      ".v1.P4VarbitH\000\022\016\n\004bool\030\003 \001(\010H\000\022$\n\005tuple\030"
      "\004 \001(\0132\023.p4.v1.P4StructLikeH\000\022%\n\006struct\030\005"
      " \001(\0132\023.p4.v1.P4StructLikeH\000\022!\n\006header\030\006 "
      "\001(\0132\017.p4.v1.P4HeaderH\000\022,\n\014header_union\030\007"
      " \001(\0132\024.p4.v1.P4HeaderUnionH\000\022,\n\014header_s"
      "tack\030\010 \001(\0132\024.p4.v1.P4HeaderStackH\000\0227\n\022he"
      "ader_union_stack\030\t \001(\0132\031.p4.v1.P4HeaderU"
      "nionStackH\000\022\016\n\004enum\030\n \001(\tH\000\022\017\n\005error\030\013 \001"
      "(\tH\000\022\024\n\nenum_value\030\014 \001(\014H\000B\006\n\004data\"/\n\010P4"
      "Varbit\022\021\n\tbitstring\030\001 \001(\014\022\020\n\010bitwidth\030\002 "
      "\001(\005\".\n\014P4StructLike\022\036\n\007members\030\001 \003(\0132\r.p"
      "4.v1.P4Data\"0\n\010P4Header\022\020\n\010is_valid\030\001 \001("
      "\010\022\022\n\nbitstrings\030\002 \003(\014\"Q\n\rP4HeaderUnion\022\031"
      "\n\021valid_header_name\030\001 \001(\t\022%\n\014valid_heade"
      "r\030\002 \001(\0132\017.p4.v1.P4Header\"1\n\rP4HeaderStac"
      "k\022 \n\007entries\030\001 \003(\0132\017.p4.v1.P4Header\";\n\022P"
      "4HeaderUnionStack\022%\n\007entries\030\001 \003(\0132\024.p4."
      "v1.P4HeaderUnionB&Z$github.com/p4lang/p4"
      "runtime/go/p4/v1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 824);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "p4/v1/p4data.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_p4_2fv1_2fp4data_2eproto
namespace p4 {
namespace v1 {

// ===================================================================

void P4Data::InitAsDefaultInstance() {
  ::p4::v1::_P4Data_default_instance_.bitstring_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::p4::v1::_P4Data_default_instance_.varbit_ = const_cast< ::p4::v1::P4Varbit*>(
      ::p4::v1::P4Varbit::internal_default_instance());
  ::p4::v1::_P4Data_default_instance_.bool__ = false;
  ::p4::v1::_P4Data_default_instance_.tuple_ = const_cast< ::p4::v1::P4StructLike*>(
      ::p4::v1::P4StructLike::internal_default_instance());
  ::p4::v1::_P4Data_default_instance_.struct__ = const_cast< ::p4::v1::P4StructLike*>(
      ::p4::v1::P4StructLike::internal_default_instance());
  ::p4::v1::_P4Data_default_instance_.header_ = const_cast< ::p4::v1::P4Header*>(
      ::p4::v1::P4Header::internal_default_instance());
  ::p4::v1::_P4Data_default_instance_.header_union_ = const_cast< ::p4::v1::P4HeaderUnion*>(
      ::p4::v1::P4HeaderUnion::internal_default_instance());
  ::p4::v1::_P4Data_default_instance_.header_stack_ = const_cast< ::p4::v1::P4HeaderStack*>(
      ::p4::v1::P4HeaderStack::internal_default_instance());
  ::p4::v1::_P4Data_default_instance_.header_union_stack_ = const_cast< ::p4::v1::P4HeaderUnionStack*>(
      ::p4::v1::P4HeaderUnionStack::internal_default_instance());
  ::p4::v1::_P4Data_default_instance_.enum__.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::p4::v1::_P4Data_default_instance_.error_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::p4::v1::_P4Data_default_instance_.enum_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P4Data::set_allocated_varbit(::p4::v1::P4Varbit* varbit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (varbit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      varbit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, varbit, submessage_arena);
    }
    set_has_varbit();
    data_.varbit_ = varbit;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.P4Data.varbit)
}
void P4Data::set_allocated_tuple(::p4::v1::P4StructLike* tuple) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (tuple) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tuple = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tuple, submessage_arena);
    }
    set_has_tuple();
    data_.tuple_ = tuple;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.P4Data.tuple)
}
void P4Data::set_allocated_struct_(::p4::v1::P4StructLike* struct_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (struct_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      struct_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, struct_, submessage_arena);
    }
    set_has_struct_();
    data_.struct__ = struct_;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.P4Data.struct)
}
void P4Data::set_allocated_header(::p4::v1::P4Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    set_has_header();
    data_.header_ = header;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.P4Data.header)
}
void P4Data::set_allocated_header_union(::p4::v1::P4HeaderUnion* header_union) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (header_union) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header_union = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header_union, submessage_arena);
    }
    set_has_header_union();
    data_.header_union_ = header_union;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.P4Data.header_union)
}
void P4Data::set_allocated_header_stack(::p4::v1::P4HeaderStack* header_stack) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (header_stack) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header_stack = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header_stack, submessage_arena);
    }
    set_has_header_stack();
    data_.header_stack_ = header_stack;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.P4Data.header_stack)
}
void P4Data::set_allocated_header_union_stack(::p4::v1::P4HeaderUnionStack* header_union_stack) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (header_union_stack) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header_union_stack = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header_union_stack, submessage_arena);
    }
    set_has_header_union_stack();
    data_.header_union_stack_ = header_union_stack;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.P4Data.header_union_stack)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4Data::kBitstringFieldNumber;
const int P4Data::kVarbitFieldNumber;
const int P4Data::kBoolFieldNumber;
const int P4Data::kTupleFieldNumber;
const int P4Data::kStructFieldNumber;
const int P4Data::kHeaderFieldNumber;
const int P4Data::kHeaderUnionFieldNumber;
const int P4Data::kHeaderStackFieldNumber;
const int P4Data::kHeaderUnionStackFieldNumber;
const int P4Data::kEnumFieldNumber;
const int P4Data::kErrorFieldNumber;
const int P4Data::kEnumValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4Data::P4Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.P4Data)
}
P4Data::P4Data(const P4Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kBitstring: {
      set_bitstring(from.bitstring());
      break;
    }
    case kVarbit: {
      mutable_varbit()->::p4::v1::P4Varbit::MergeFrom(from.varbit());
      break;
    }
    case kBool: {
      set_bool_(from.bool_());
      break;
    }
    case kTuple: {
      mutable_tuple()->::p4::v1::P4StructLike::MergeFrom(from.tuple());
      break;
    }
    case kStruct: {
      mutable_struct_()->::p4::v1::P4StructLike::MergeFrom(from.struct_());
      break;
    }
    case kHeader: {
      mutable_header()->::p4::v1::P4Header::MergeFrom(from.header());
      break;
    }
    case kHeaderUnion: {
      mutable_header_union()->::p4::v1::P4HeaderUnion::MergeFrom(from.header_union());
      break;
    }
    case kHeaderStack: {
      mutable_header_stack()->::p4::v1::P4HeaderStack::MergeFrom(from.header_stack());
      break;
    }
    case kHeaderUnionStack: {
      mutable_header_union_stack()->::p4::v1::P4HeaderUnionStack::MergeFrom(from.header_union_stack());
      break;
    }
    case kEnum: {
      set_enum_(from.enum_());
      break;
    }
    case kError: {
      set_error(from.error());
      break;
    }
    case kEnumValue: {
      set_enum_value(from.enum_value());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.P4Data)
}

void P4Data::SharedCtor() {
  clear_has_data();
}

P4Data::~P4Data() {
  // @@protoc_insertion_point(destructor:p4.v1.P4Data)
  SharedDtor();
}

void P4Data::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void P4Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* P4Data::descriptor() {
  ::protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const P4Data& P4Data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Data.base);
  return *internal_default_instance();
}


void P4Data::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:p4.v1.P4Data)
  switch (data_case()) {
    case kBitstring: {
      data_.bitstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kVarbit: {
      delete data_.varbit_;
      break;
    }
    case kBool: {
      // No need to clear
      break;
    }
    case kTuple: {
      delete data_.tuple_;
      break;
    }
    case kStruct: {
      delete data_.struct__;
      break;
    }
    case kHeader: {
      delete data_.header_;
      break;
    }
    case kHeaderUnion: {
      delete data_.header_union_;
      break;
    }
    case kHeaderStack: {
      delete data_.header_stack_;
      break;
    }
    case kHeaderUnionStack: {
      delete data_.header_union_stack_;
      break;
    }
    case kEnum: {
      data_.enum__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kError: {
      data_.error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kEnumValue: {
      data_.enum_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void P4Data::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.P4Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool P4Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.P4Data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes bitstring = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bitstring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.P4Varbit varbit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_varbit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &data_.bool__)));
          set_has_bool_();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.P4StructLike tuple = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tuple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.P4StructLike struct = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.P4Header header = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.P4HeaderUnion header_union = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header_union()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.P4HeaderStack header_stack = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header_stack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.P4HeaderUnionStack header_union_stack = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header_union_stack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string enum = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enum_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enum_().data(), static_cast<int>(this->enum_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.v1.P4Data.enum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.v1.P4Data.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes enum_value = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_enum_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.P4Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.P4Data)
  return false;
#undef DO_
}

void P4Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.P4Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bitstring = 1;
  if (has_bitstring()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->bitstring(), output);
  }

  // .p4.v1.P4Varbit varbit = 2;
  if (has_varbit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_varbit(), output);
  }

  // bool bool = 3;
  if (has_bool_()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bool_(), output);
  }

  // .p4.v1.P4StructLike tuple = 4;
  if (has_tuple()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_tuple(), output);
  }

  // .p4.v1.P4StructLike struct = 5;
  if (has_struct_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_struct_(), output);
  }

  // .p4.v1.P4Header header = 6;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_header(), output);
  }

  // .p4.v1.P4HeaderUnion header_union = 7;
  if (has_header_union()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_header_union(), output);
  }

  // .p4.v1.P4HeaderStack header_stack = 8;
  if (has_header_stack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_header_stack(), output);
  }

  // .p4.v1.P4HeaderUnionStack header_union_stack = 9;
  if (has_header_union_stack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_header_union_stack(), output);
  }

  // string enum = 10;
  if (has_enum_()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enum_().data(), static_cast<int>(this->enum_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.P4Data.enum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->enum_(), output);
  }

  // string error = 11;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.P4Data.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->error(), output);
  }

  // bytes enum_value = 12;
  if (has_enum_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->enum_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.P4Data)
}

::google::protobuf::uint8* P4Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.P4Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bitstring = 1;
  if (has_bitstring()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->bitstring(), target);
  }

  // .p4.v1.P4Varbit varbit = 2;
  if (has_varbit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_varbit(), deterministic, target);
  }

  // bool bool = 3;
  if (has_bool_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bool_(), target);
  }

  // .p4.v1.P4StructLike tuple = 4;
  if (has_tuple()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_tuple(), deterministic, target);
  }

  // .p4.v1.P4StructLike struct = 5;
  if (has_struct_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_struct_(), deterministic, target);
  }

  // .p4.v1.P4Header header = 6;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_header(), deterministic, target);
  }

  // .p4.v1.P4HeaderUnion header_union = 7;
  if (has_header_union()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_header_union(), deterministic, target);
  }

  // .p4.v1.P4HeaderStack header_stack = 8;
  if (has_header_stack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_header_stack(), deterministic, target);
  }

  // .p4.v1.P4HeaderUnionStack header_union_stack = 9;
  if (has_header_union_stack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_header_union_stack(), deterministic, target);
  }

  // string enum = 10;
  if (has_enum_()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enum_().data(), static_cast<int>(this->enum_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.P4Data.enum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->enum_(), target);
  }

  // string error = 11;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.P4Data.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->error(), target);
  }

  // bytes enum_value = 12;
  if (has_enum_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->enum_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.P4Data)
  return target;
}

size_t P4Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.P4Data)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // bytes bitstring = 1;
    case kBitstring: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bitstring());
      break;
    }
    // .p4.v1.P4Varbit varbit = 2;
    case kVarbit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.varbit_);
      break;
    }
    // bool bool = 3;
    case kBool: {
      total_size += 1 + 1;
      break;
    }
    // .p4.v1.P4StructLike tuple = 4;
    case kTuple: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.tuple_);
      break;
    }
    // .p4.v1.P4StructLike struct = 5;
    case kStruct: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.struct__);
      break;
    }
    // .p4.v1.P4Header header = 6;
    case kHeader: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.header_);
      break;
    }
    // .p4.v1.P4HeaderUnion header_union = 7;
    case kHeaderUnion: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.header_union_);
      break;
    }
    // .p4.v1.P4HeaderStack header_stack = 8;
    case kHeaderStack: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.header_stack_);
      break;
    }
    // .p4.v1.P4HeaderUnionStack header_union_stack = 9;
    case kHeaderUnionStack: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.header_union_stack_);
      break;
    }
    // string enum = 10;
    case kEnum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enum_());
      break;
    }
    // string error = 11;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
      break;
    }
    // bytes enum_value = 12;
    case kEnumValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->enum_value());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void P4Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.P4Data)
  GOOGLE_DCHECK_NE(&from, this);
  const P4Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.P4Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.P4Data)
    MergeFrom(*source);
  }
}

void P4Data::MergeFrom(const P4Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.P4Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kBitstring: {
      set_bitstring(from.bitstring());
      break;
    }
    case kVarbit: {
      mutable_varbit()->::p4::v1::P4Varbit::MergeFrom(from.varbit());
      break;
    }
    case kBool: {
      set_bool_(from.bool_());
      break;
    }
    case kTuple: {
      mutable_tuple()->::p4::v1::P4StructLike::MergeFrom(from.tuple());
      break;
    }
    case kStruct: {
      mutable_struct_()->::p4::v1::P4StructLike::MergeFrom(from.struct_());
      break;
    }
    case kHeader: {
      mutable_header()->::p4::v1::P4Header::MergeFrom(from.header());
      break;
    }
    case kHeaderUnion: {
      mutable_header_union()->::p4::v1::P4HeaderUnion::MergeFrom(from.header_union());
      break;
    }
    case kHeaderStack: {
      mutable_header_stack()->::p4::v1::P4HeaderStack::MergeFrom(from.header_stack());
      break;
    }
    case kHeaderUnionStack: {
      mutable_header_union_stack()->::p4::v1::P4HeaderUnionStack::MergeFrom(from.header_union_stack());
      break;
    }
    case kEnum: {
      set_enum_(from.enum_());
      break;
    }
    case kError: {
      set_error(from.error());
      break;
    }
    case kEnumValue: {
      set_enum_value(from.enum_value());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void P4Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.P4Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4Data::CopyFrom(const P4Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.P4Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4Data::IsInitialized() const {
  return true;
}

void P4Data::Swap(P4Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4Data::InternalSwap(P4Data* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata P4Data::GetMetadata() const {
  protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void P4Varbit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4Varbit::kBitstringFieldNumber;
const int P4Varbit::kBitwidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4Varbit::P4Varbit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Varbit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.P4Varbit)
}
P4Varbit::P4Varbit(const P4Varbit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bitstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bitstring().size() > 0) {
    bitstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitstring_);
  }
  bitwidth_ = from.bitwidth_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.P4Varbit)
}

void P4Varbit::SharedCtor() {
  bitstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bitwidth_ = 0;
}

P4Varbit::~P4Varbit() {
  // @@protoc_insertion_point(destructor:p4.v1.P4Varbit)
  SharedDtor();
}

void P4Varbit::SharedDtor() {
  bitstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P4Varbit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* P4Varbit::descriptor() {
  ::protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const P4Varbit& P4Varbit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Varbit.base);
  return *internal_default_instance();
}


void P4Varbit::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.P4Varbit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bitstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bitwidth_ = 0;
  _internal_metadata_.Clear();
}

bool P4Varbit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.P4Varbit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes bitstring = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bitstring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bitwidth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bitwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.P4Varbit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.P4Varbit)
  return false;
#undef DO_
}

void P4Varbit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.P4Varbit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bitstring = 1;
  if (this->bitstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->bitstring(), output);
  }

  // int32 bitwidth = 2;
  if (this->bitwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bitwidth(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.P4Varbit)
}

::google::protobuf::uint8* P4Varbit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.P4Varbit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bitstring = 1;
  if (this->bitstring().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->bitstring(), target);
  }

  // int32 bitwidth = 2;
  if (this->bitwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bitwidth(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.P4Varbit)
  return target;
}

size_t P4Varbit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.P4Varbit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes bitstring = 1;
  if (this->bitstring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bitstring());
  }

  // int32 bitwidth = 2;
  if (this->bitwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bitwidth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void P4Varbit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.P4Varbit)
  GOOGLE_DCHECK_NE(&from, this);
  const P4Varbit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4Varbit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.P4Varbit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.P4Varbit)
    MergeFrom(*source);
  }
}

void P4Varbit::MergeFrom(const P4Varbit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.P4Varbit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bitstring().size() > 0) {

    bitstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitstring_);
  }
  if (from.bitwidth() != 0) {
    set_bitwidth(from.bitwidth());
  }
}

void P4Varbit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.P4Varbit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4Varbit::CopyFrom(const P4Varbit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.P4Varbit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4Varbit::IsInitialized() const {
  return true;
}

void P4Varbit::Swap(P4Varbit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4Varbit::InternalSwap(P4Varbit* other) {
  using std::swap;
  bitstring_.Swap(&other->bitstring_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bitwidth_, other->bitwidth_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata P4Varbit::GetMetadata() const {
  protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void P4StructLike::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4StructLike::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4StructLike::P4StructLike()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.P4StructLike)
}
P4StructLike::P4StructLike(const P4StructLike& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.v1.P4StructLike)
}

void P4StructLike::SharedCtor() {
}

P4StructLike::~P4StructLike() {
  // @@protoc_insertion_point(destructor:p4.v1.P4StructLike)
  SharedDtor();
}

void P4StructLike::SharedDtor() {
}

void P4StructLike::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* P4StructLike::descriptor() {
  ::protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const P4StructLike& P4StructLike::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Data.base);
  return *internal_default_instance();
}


void P4StructLike::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.P4StructLike)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  _internal_metadata_.Clear();
}

bool P4StructLike::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.P4StructLike)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.v1.P4Data members = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.P4StructLike)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.P4StructLike)
  return false;
#undef DO_
}

void P4StructLike::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.P4StructLike)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.P4Data members = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->members(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.P4StructLike)
}

::google::protobuf::uint8* P4StructLike::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.P4StructLike)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.P4Data members = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->members(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.P4StructLike)
  return target;
}

size_t P4StructLike::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.P4StructLike)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.P4Data members = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void P4StructLike::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.P4StructLike)
  GOOGLE_DCHECK_NE(&from, this);
  const P4StructLike* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4StructLike>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.P4StructLike)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.P4StructLike)
    MergeFrom(*source);
  }
}

void P4StructLike::MergeFrom(const P4StructLike& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.P4StructLike)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
}

void P4StructLike::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.P4StructLike)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4StructLike::CopyFrom(const P4StructLike& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.P4StructLike)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4StructLike::IsInitialized() const {
  return true;
}

void P4StructLike::Swap(P4StructLike* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4StructLike::InternalSwap(P4StructLike* other) {
  using std::swap;
  CastToBase(&members_)->InternalSwap(CastToBase(&other->members_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata P4StructLike::GetMetadata() const {
  protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void P4Header::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4Header::kIsValidFieldNumber;
const int P4Header::kBitstringsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4Header::P4Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Header.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.P4Header)
}
P4Header::P4Header(const P4Header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bitstrings_(from.bitstrings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_valid_ = from.is_valid_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.P4Header)
}

void P4Header::SharedCtor() {
  is_valid_ = false;
}

P4Header::~P4Header() {
  // @@protoc_insertion_point(destructor:p4.v1.P4Header)
  SharedDtor();
}

void P4Header::SharedDtor() {
}

void P4Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* P4Header::descriptor() {
  ::protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const P4Header& P4Header::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Header.base);
  return *internal_default_instance();
}


void P4Header::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.P4Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bitstrings_.Clear();
  is_valid_ = false;
  _internal_metadata_.Clear();
}

bool P4Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.P4Header)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_valid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_valid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes bitstrings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_bitstrings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.P4Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.P4Header)
  return false;
#undef DO_
}

void P4Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.P4Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_valid = 1;
  if (this->is_valid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_valid(), output);
  }

  // repeated bytes bitstrings = 2;
  for (int i = 0, n = this->bitstrings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->bitstrings(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.P4Header)
}

::google::protobuf::uint8* P4Header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.P4Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_valid = 1;
  if (this->is_valid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_valid(), target);
  }

  // repeated bytes bitstrings = 2;
  for (int i = 0, n = this->bitstrings_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->bitstrings(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.P4Header)
  return target;
}

size_t P4Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.P4Header)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes bitstrings = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bitstrings_size());
  for (int i = 0, n = this->bitstrings_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->bitstrings(i));
  }

  // bool is_valid = 1;
  if (this->is_valid() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void P4Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.P4Header)
  GOOGLE_DCHECK_NE(&from, this);
  const P4Header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4Header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.P4Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.P4Header)
    MergeFrom(*source);
  }
}

void P4Header::MergeFrom(const P4Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.P4Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bitstrings_.MergeFrom(from.bitstrings_);
  if (from.is_valid() != 0) {
    set_is_valid(from.is_valid());
  }
}

void P4Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.P4Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4Header::CopyFrom(const P4Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.P4Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4Header::IsInitialized() const {
  return true;
}

void P4Header::Swap(P4Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4Header::InternalSwap(P4Header* other) {
  using std::swap;
  bitstrings_.InternalSwap(CastToBase(&other->bitstrings_));
  swap(is_valid_, other->is_valid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata P4Header::GetMetadata() const {
  protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void P4HeaderUnion::InitAsDefaultInstance() {
  ::p4::v1::_P4HeaderUnion_default_instance_._instance.get_mutable()->valid_header_ = const_cast< ::p4::v1::P4Header*>(
      ::p4::v1::P4Header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4HeaderUnion::kValidHeaderNameFieldNumber;
const int P4HeaderUnion::kValidHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4HeaderUnion::P4HeaderUnion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4HeaderUnion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.P4HeaderUnion)
}
P4HeaderUnion::P4HeaderUnion(const P4HeaderUnion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  valid_header_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.valid_header_name().size() > 0) {
    valid_header_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_header_name_);
  }
  if (from.has_valid_header()) {
    valid_header_ = new ::p4::v1::P4Header(*from.valid_header_);
  } else {
    valid_header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.P4HeaderUnion)
}

void P4HeaderUnion::SharedCtor() {
  valid_header_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_header_ = NULL;
}

P4HeaderUnion::~P4HeaderUnion() {
  // @@protoc_insertion_point(destructor:p4.v1.P4HeaderUnion)
  SharedDtor();
}

void P4HeaderUnion::SharedDtor() {
  valid_header_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete valid_header_;
}

void P4HeaderUnion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* P4HeaderUnion::descriptor() {
  ::protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const P4HeaderUnion& P4HeaderUnion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4HeaderUnion.base);
  return *internal_default_instance();
}


void P4HeaderUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.P4HeaderUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  valid_header_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && valid_header_ != NULL) {
    delete valid_header_;
  }
  valid_header_ = NULL;
  _internal_metadata_.Clear();
}

bool P4HeaderUnion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.P4HeaderUnion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string valid_header_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valid_header_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valid_header_name().data(), static_cast<int>(this->valid_header_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.v1.P4HeaderUnion.valid_header_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.P4Header valid_header = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_valid_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.P4HeaderUnion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.P4HeaderUnion)
  return false;
#undef DO_
}

void P4HeaderUnion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.P4HeaderUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string valid_header_name = 1;
  if (this->valid_header_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_header_name().data(), static_cast<int>(this->valid_header_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.P4HeaderUnion.valid_header_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->valid_header_name(), output);
  }

  // .p4.v1.P4Header valid_header = 2;
  if (this->has_valid_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_valid_header(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.P4HeaderUnion)
}

::google::protobuf::uint8* P4HeaderUnion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.P4HeaderUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string valid_header_name = 1;
  if (this->valid_header_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valid_header_name().data(), static_cast<int>(this->valid_header_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.P4HeaderUnion.valid_header_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->valid_header_name(), target);
  }

  // .p4.v1.P4Header valid_header = 2;
  if (this->has_valid_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_valid_header(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.P4HeaderUnion)
  return target;
}

size_t P4HeaderUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.P4HeaderUnion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string valid_header_name = 1;
  if (this->valid_header_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->valid_header_name());
  }

  // .p4.v1.P4Header valid_header = 2;
  if (this->has_valid_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *valid_header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void P4HeaderUnion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.P4HeaderUnion)
  GOOGLE_DCHECK_NE(&from, this);
  const P4HeaderUnion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4HeaderUnion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.P4HeaderUnion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.P4HeaderUnion)
    MergeFrom(*source);
  }
}

void P4HeaderUnion::MergeFrom(const P4HeaderUnion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.P4HeaderUnion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.valid_header_name().size() > 0) {

    valid_header_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_header_name_);
  }
  if (from.has_valid_header()) {
    mutable_valid_header()->::p4::v1::P4Header::MergeFrom(from.valid_header());
  }
}

void P4HeaderUnion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.P4HeaderUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4HeaderUnion::CopyFrom(const P4HeaderUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.P4HeaderUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4HeaderUnion::IsInitialized() const {
  return true;
}

void P4HeaderUnion::Swap(P4HeaderUnion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4HeaderUnion::InternalSwap(P4HeaderUnion* other) {
  using std::swap;
  valid_header_name_.Swap(&other->valid_header_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(valid_header_, other->valid_header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata P4HeaderUnion::GetMetadata() const {
  protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void P4HeaderStack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4HeaderStack::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4HeaderStack::P4HeaderStack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4HeaderStack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.P4HeaderStack)
}
P4HeaderStack::P4HeaderStack(const P4HeaderStack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.v1.P4HeaderStack)
}

void P4HeaderStack::SharedCtor() {
}

P4HeaderStack::~P4HeaderStack() {
  // @@protoc_insertion_point(destructor:p4.v1.P4HeaderStack)
  SharedDtor();
}

void P4HeaderStack::SharedDtor() {
}

void P4HeaderStack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* P4HeaderStack::descriptor() {
  ::protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const P4HeaderStack& P4HeaderStack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4HeaderStack.base);
  return *internal_default_instance();
}


void P4HeaderStack::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.P4HeaderStack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool P4HeaderStack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.P4HeaderStack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.v1.P4Header entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.P4HeaderStack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.P4HeaderStack)
  return false;
#undef DO_
}

void P4HeaderStack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.P4HeaderStack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.P4Header entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.P4HeaderStack)
}

::google::protobuf::uint8* P4HeaderStack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.P4HeaderStack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.P4Header entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.P4HeaderStack)
  return target;
}

size_t P4HeaderStack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.P4HeaderStack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.P4Header entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void P4HeaderStack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.P4HeaderStack)
  GOOGLE_DCHECK_NE(&from, this);
  const P4HeaderStack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4HeaderStack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.P4HeaderStack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.P4HeaderStack)
    MergeFrom(*source);
  }
}

void P4HeaderStack::MergeFrom(const P4HeaderStack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.P4HeaderStack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void P4HeaderStack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.P4HeaderStack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4HeaderStack::CopyFrom(const P4HeaderStack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.P4HeaderStack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4HeaderStack::IsInitialized() const {
  return true;
}

void P4HeaderStack::Swap(P4HeaderStack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4HeaderStack::InternalSwap(P4HeaderStack* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata P4HeaderStack::GetMetadata() const {
  protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void P4HeaderUnionStack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4HeaderUnionStack::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4HeaderUnionStack::P4HeaderUnionStack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4HeaderUnionStack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.P4HeaderUnionStack)
}
P4HeaderUnionStack::P4HeaderUnionStack(const P4HeaderUnionStack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.v1.P4HeaderUnionStack)
}

void P4HeaderUnionStack::SharedCtor() {
}

P4HeaderUnionStack::~P4HeaderUnionStack() {
  // @@protoc_insertion_point(destructor:p4.v1.P4HeaderUnionStack)
  SharedDtor();
}

void P4HeaderUnionStack::SharedDtor() {
}

void P4HeaderUnionStack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* P4HeaderUnionStack::descriptor() {
  ::protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const P4HeaderUnionStack& P4HeaderUnionStack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4HeaderUnionStack.base);
  return *internal_default_instance();
}


void P4HeaderUnionStack::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.P4HeaderUnionStack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool P4HeaderUnionStack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.P4HeaderUnionStack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.v1.P4HeaderUnion entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.P4HeaderUnionStack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.P4HeaderUnionStack)
  return false;
#undef DO_
}

void P4HeaderUnionStack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.P4HeaderUnionStack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.P4HeaderUnion entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.P4HeaderUnionStack)
}

::google::protobuf::uint8* P4HeaderUnionStack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.P4HeaderUnionStack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.P4HeaderUnion entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.P4HeaderUnionStack)
  return target;
}

size_t P4HeaderUnionStack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.P4HeaderUnionStack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.P4HeaderUnion entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void P4HeaderUnionStack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.P4HeaderUnionStack)
  GOOGLE_DCHECK_NE(&from, this);
  const P4HeaderUnionStack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4HeaderUnionStack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.P4HeaderUnionStack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.P4HeaderUnionStack)
    MergeFrom(*source);
  }
}

void P4HeaderUnionStack::MergeFrom(const P4HeaderUnionStack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.P4HeaderUnionStack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void P4HeaderUnionStack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.P4HeaderUnionStack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4HeaderUnionStack::CopyFrom(const P4HeaderUnionStack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.P4HeaderUnionStack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4HeaderUnionStack::IsInitialized() const {
  return true;
}

void P4HeaderUnionStack::Swap(P4HeaderUnionStack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4HeaderUnionStack::InternalSwap(P4HeaderUnionStack* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata P4HeaderUnionStack::GetMetadata() const {
  protobuf_p4_2fv1_2fp4data_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4data_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace p4
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::P4Data* Arena::CreateMaybeMessage< ::p4::v1::P4Data >(Arena* arena) {
  return Arena::CreateInternal< ::p4::v1::P4Data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::P4Varbit* Arena::CreateMaybeMessage< ::p4::v1::P4Varbit >(Arena* arena) {
  return Arena::CreateInternal< ::p4::v1::P4Varbit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::P4StructLike* Arena::CreateMaybeMessage< ::p4::v1::P4StructLike >(Arena* arena) {
  return Arena::CreateInternal< ::p4::v1::P4StructLike >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::P4Header* Arena::CreateMaybeMessage< ::p4::v1::P4Header >(Arena* arena) {
  return Arena::CreateInternal< ::p4::v1::P4Header >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::P4HeaderUnion* Arena::CreateMaybeMessage< ::p4::v1::P4HeaderUnion >(Arena* arena) {
  return Arena::CreateInternal< ::p4::v1::P4HeaderUnion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::P4HeaderStack* Arena::CreateMaybeMessage< ::p4::v1::P4HeaderStack >(Arena* arena) {
  return Arena::CreateInternal< ::p4::v1::P4HeaderStack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::P4HeaderUnionStack* Arena::CreateMaybeMessage< ::p4::v1::P4HeaderUnionStack >(Arena* arena) {
  return Arena::CreateInternal< ::p4::v1::P4HeaderUnionStack >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
