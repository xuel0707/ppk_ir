// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p4/v1/p4runtime.proto

#include "p4/v1/p4runtime.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace protobuf_p4_2fconfig_2fv1_2fp4info_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fconfig_2fv1_2fp4info_2eproto ::google::protobuf::internal::SCCInfo<14> scc_info_P4Info;
}  // namespace protobuf_p4_2fconfig_2fv1_2fp4info_2eproto
namespace protobuf_p4_2fv1_2fp4data_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4data_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_P4Data;
}  // namespace protobuf_p4_2fv1_2fp4data_2eproto
namespace protobuf_p4_2fv1_2fp4runtime_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ActionProfileGroup_Member;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Action_Param;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CounterData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DigestEntry_Config;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DigestListAck;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMatch_Exact;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMatch_LPM;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMatch_Optional;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMatch_Range;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FieldMatch_Ternary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ForwardingPipelineConfig_Cookie;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Index;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MeterConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PacketMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Replica;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TableEntry_IdleTimeout;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Uint128;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<12> scc_info_Entity;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Action;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ActionProfileAction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ActionProfileActionSet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ActionProfileGroup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ActionProfileMember;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CloneSessionEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DigestEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DigestList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DigestListAckError;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExternEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IdleTimeoutNotification;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MulticastGroupEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PacketIn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PacketOut;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PacketOutError;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Role;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StreamOtherError;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Update;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ValueSetEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ValueSetMember;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CounterEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DirectCounterEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DirectMeterEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ForwardingPipelineConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MeterEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PacketReplicationEngineEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RegisterEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TableAction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_MasterArbitrationUpdate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_StreamError;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_TableEntry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2fv1_2fp4runtime_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_FieldMatch;
}  // namespace protobuf_p4_2fv1_2fp4runtime_2eproto
namespace p4 {
namespace v1 {
class WriteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteRequest>
      _instance;
} _WriteRequest_default_instance_;
class WriteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteResponse>
      _instance;
} _WriteResponse_default_instance_;
class ReadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRequest>
      _instance;
} _ReadRequest_default_instance_;
class ReadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadResponse>
      _instance;
} _ReadResponse_default_instance_;
class UpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Update>
      _instance;
} _Update_default_instance_;
class EntityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Entity>
      _instance;
  const ::p4::v1::ExternEntry* extern_entry_;
  const ::p4::v1::TableEntry* table_entry_;
  const ::p4::v1::ActionProfileMember* action_profile_member_;
  const ::p4::v1::ActionProfileGroup* action_profile_group_;
  const ::p4::v1::MeterEntry* meter_entry_;
  const ::p4::v1::DirectMeterEntry* direct_meter_entry_;
  const ::p4::v1::CounterEntry* counter_entry_;
  const ::p4::v1::DirectCounterEntry* direct_counter_entry_;
  const ::p4::v1::PacketReplicationEngineEntry* packet_replication_engine_entry_;
  const ::p4::v1::ValueSetEntry* value_set_entry_;
  const ::p4::v1::RegisterEntry* register_entry_;
  const ::p4::v1::DigestEntry* digest_entry_;
} _Entity_default_instance_;
class ExternEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExternEntry>
      _instance;
} _ExternEntry_default_instance_;
class TableEntry_IdleTimeoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableEntry_IdleTimeout>
      _instance;
} _TableEntry_IdleTimeout_default_instance_;
class TableEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableEntry>
      _instance;
} _TableEntry_default_instance_;
class FieldMatch_ExactDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldMatch_Exact>
      _instance;
} _FieldMatch_Exact_default_instance_;
class FieldMatch_TernaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldMatch_Ternary>
      _instance;
} _FieldMatch_Ternary_default_instance_;
class FieldMatch_LPMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldMatch_LPM>
      _instance;
} _FieldMatch_LPM_default_instance_;
class FieldMatch_RangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldMatch_Range>
      _instance;
} _FieldMatch_Range_default_instance_;
class FieldMatch_OptionalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldMatch_Optional>
      _instance;
} _FieldMatch_Optional_default_instance_;
class FieldMatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldMatch>
      _instance;
  const ::p4::v1::FieldMatch_Exact* exact_;
  const ::p4::v1::FieldMatch_Ternary* ternary_;
  const ::p4::v1::FieldMatch_LPM* lpm_;
  const ::p4::v1::FieldMatch_Range* range_;
  const ::p4::v1::FieldMatch_Optional* optional_;
  const ::google::protobuf::Any* other_;
} _FieldMatch_default_instance_;
class TableActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableAction>
      _instance;
  const ::p4::v1::Action* action_;
  ::google::protobuf::uint32 action_profile_member_id_;
  ::google::protobuf::uint32 action_profile_group_id_;
  const ::p4::v1::ActionProfileActionSet* action_profile_action_set_;
} _TableAction_default_instance_;
class Action_ParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Action_Param>
      _instance;
} _Action_Param_default_instance_;
class ActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Action>
      _instance;
} _Action_default_instance_;
class ActionProfileActionSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionProfileActionSet>
      _instance;
} _ActionProfileActionSet_default_instance_;
class ActionProfileActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionProfileAction>
      _instance;
  ::google::protobuf::int32 watch_;
  ::google::protobuf::internal::ArenaStringPtr watch_port_;
} _ActionProfileAction_default_instance_;
class ActionProfileMemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionProfileMember>
      _instance;
} _ActionProfileMember_default_instance_;
class ActionProfileGroup_MemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionProfileGroup_Member>
      _instance;
  ::google::protobuf::int32 watch_;
  ::google::protobuf::internal::ArenaStringPtr watch_port_;
} _ActionProfileGroup_Member_default_instance_;
class ActionProfileGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionProfileGroup>
      _instance;
} _ActionProfileGroup_default_instance_;
class IndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Index>
      _instance;
} _Index_default_instance_;
class MeterEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeterEntry>
      _instance;
} _MeterEntry_default_instance_;
class DirectMeterEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DirectMeterEntry>
      _instance;
} _DirectMeterEntry_default_instance_;
class MeterConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeterConfig>
      _instance;
} _MeterConfig_default_instance_;
class CounterEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CounterEntry>
      _instance;
} _CounterEntry_default_instance_;
class DirectCounterEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DirectCounterEntry>
      _instance;
} _DirectCounterEntry_default_instance_;
class CounterDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CounterData>
      _instance;
} _CounterData_default_instance_;
class PacketReplicationEngineEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PacketReplicationEngineEntry>
      _instance;
  const ::p4::v1::MulticastGroupEntry* multicast_group_entry_;
  const ::p4::v1::CloneSessionEntry* clone_session_entry_;
} _PacketReplicationEngineEntry_default_instance_;
class ReplicaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Replica>
      _instance;
} _Replica_default_instance_;
class MulticastGroupEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MulticastGroupEntry>
      _instance;
} _MulticastGroupEntry_default_instance_;
class CloneSessionEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloneSessionEntry>
      _instance;
} _CloneSessionEntry_default_instance_;
class ValueSetMemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueSetMember>
      _instance;
} _ValueSetMember_default_instance_;
class ValueSetEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueSetEntry>
      _instance;
} _ValueSetEntry_default_instance_;
class RegisterEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterEntry>
      _instance;
} _RegisterEntry_default_instance_;
class DigestEntry_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestEntry_Config>
      _instance;
} _DigestEntry_Config_default_instance_;
class DigestEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestEntry>
      _instance;
} _DigestEntry_default_instance_;
class StreamMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamMessageRequest>
      _instance;
  const ::p4::v1::MasterArbitrationUpdate* arbitration_;
  const ::p4::v1::PacketOut* packet_;
  const ::p4::v1::DigestListAck* digest_ack_;
  const ::google::protobuf::Any* other_;
} _StreamMessageRequest_default_instance_;
class PacketOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PacketOut>
      _instance;
} _PacketOut_default_instance_;
class DigestListAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestListAck>
      _instance;
} _DigestListAck_default_instance_;
class StreamMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamMessageResponse>
      _instance;
  const ::p4::v1::MasterArbitrationUpdate* arbitration_;
  const ::p4::v1::PacketIn* packet_;
  const ::p4::v1::DigestList* digest_;
  const ::p4::v1::IdleTimeoutNotification* idle_timeout_notification_;
  const ::google::protobuf::Any* other_;
  const ::p4::v1::StreamError* error_;
} _StreamMessageResponse_default_instance_;
class PacketInDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PacketIn>
      _instance;
} _PacketIn_default_instance_;
class DigestListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestList>
      _instance;
} _DigestList_default_instance_;
class PacketMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PacketMetadata>
      _instance;
} _PacketMetadata_default_instance_;
class MasterArbitrationUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterArbitrationUpdate>
      _instance;
} _MasterArbitrationUpdate_default_instance_;
class RoleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Role>
      _instance;
} _Role_default_instance_;
class IdleTimeoutNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdleTimeoutNotification>
      _instance;
} _IdleTimeoutNotification_default_instance_;
class StreamErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamError>
      _instance;
  const ::p4::v1::PacketOutError* packet_out_;
  const ::p4::v1::DigestListAckError* digest_list_ack_;
  const ::p4::v1::StreamOtherError* other_;
} _StreamError_default_instance_;
class PacketOutErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PacketOutError>
      _instance;
} _PacketOutError_default_instance_;
class DigestListAckErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigestListAckError>
      _instance;
} _DigestListAckError_default_instance_;
class StreamOtherErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamOtherError>
      _instance;
} _StreamOtherError_default_instance_;
class Uint128DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uint128>
      _instance;
} _Uint128_default_instance_;
class SetForwardingPipelineConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetForwardingPipelineConfigRequest>
      _instance;
} _SetForwardingPipelineConfigRequest_default_instance_;
class SetForwardingPipelineConfigResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetForwardingPipelineConfigResponse>
      _instance;
} _SetForwardingPipelineConfigResponse_default_instance_;
class ForwardingPipelineConfig_CookieDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardingPipelineConfig_Cookie>
      _instance;
} _ForwardingPipelineConfig_Cookie_default_instance_;
class ForwardingPipelineConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardingPipelineConfig>
      _instance;
} _ForwardingPipelineConfig_default_instance_;
class GetForwardingPipelineConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetForwardingPipelineConfigRequest>
      _instance;
} _GetForwardingPipelineConfigRequest_default_instance_;
class GetForwardingPipelineConfigResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetForwardingPipelineConfigResponse>
      _instance;
} _GetForwardingPipelineConfigResponse_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error>
      _instance;
} _Error_default_instance_;
class CapabilitiesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CapabilitiesRequest>
      _instance;
} _CapabilitiesRequest_default_instance_;
class CapabilitiesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CapabilitiesResponse>
      _instance;
} _CapabilitiesResponse_default_instance_;
}  // namespace v1
}  // namespace p4
namespace protobuf_p4_2fv1_2fp4runtime_2eproto {
static void InitDefaultsWriteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_WriteRequest_default_instance_;
    new (ptr) ::p4::v1::WriteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::WriteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_WriteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsWriteRequest}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Uint128.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Update.base,}};

static void InitDefaultsWriteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_WriteResponse_default_instance_;
    new (ptr) ::p4::v1::WriteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::WriteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteResponse}, {}};

static void InitDefaultsReadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ReadRequest_default_instance_;
    new (ptr) ::p4::v1::ReadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ReadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadRequest}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Entity.base,}};

static void InitDefaultsReadResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ReadResponse_default_instance_;
    new (ptr) ::p4::v1::ReadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ReadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadResponse}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Entity.base,}};

static void InitDefaultsUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_Update_default_instance_;
    new (ptr) ::p4::v1::Update();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::Update::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Update =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdate}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Entity.base,}};

static void InitDefaultsEntity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_Entity_default_instance_;
    new (ptr) ::p4::v1::Entity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::Entity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<12> scc_info_Entity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 12, InitDefaultsEntity}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ExternEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileMember.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileGroup.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MeterEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DirectMeterEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CounterEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DirectCounterEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketReplicationEngineEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ValueSetEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_RegisterEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestEntry.base,}};

static void InitDefaultsExternEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ExternEntry_default_instance_;
    new (ptr) ::p4::v1::ExternEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ExternEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExternEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExternEntry}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsTableEntry_IdleTimeout() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_TableEntry_IdleTimeout_default_instance_;
    new (ptr) ::p4::v1::TableEntry_IdleTimeout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::TableEntry_IdleTimeout::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TableEntry_IdleTimeout =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTableEntry_IdleTimeout}, {}};

static void InitDefaultsTableEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_TableEntry_default_instance_;
    new (ptr) ::p4::v1::TableEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::TableEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_TableEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsTableEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableAction.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MeterConfig.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CounterData.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry_IdleTimeout.base,}};

static void InitDefaultsFieldMatch_Exact() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_FieldMatch_Exact_default_instance_;
    new (ptr) ::p4::v1::FieldMatch_Exact();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::FieldMatch_Exact::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FieldMatch_Exact =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFieldMatch_Exact}, {}};

static void InitDefaultsFieldMatch_Ternary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_FieldMatch_Ternary_default_instance_;
    new (ptr) ::p4::v1::FieldMatch_Ternary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::FieldMatch_Ternary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FieldMatch_Ternary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFieldMatch_Ternary}, {}};

static void InitDefaultsFieldMatch_LPM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_FieldMatch_LPM_default_instance_;
    new (ptr) ::p4::v1::FieldMatch_LPM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::FieldMatch_LPM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FieldMatch_LPM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFieldMatch_LPM}, {}};

static void InitDefaultsFieldMatch_Range() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_FieldMatch_Range_default_instance_;
    new (ptr) ::p4::v1::FieldMatch_Range();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::FieldMatch_Range::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FieldMatch_Range =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFieldMatch_Range}, {}};

static void InitDefaultsFieldMatch_Optional() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_FieldMatch_Optional_default_instance_;
    new (ptr) ::p4::v1::FieldMatch_Optional();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::FieldMatch_Optional::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FieldMatch_Optional =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFieldMatch_Optional}, {}};

static void InitDefaultsFieldMatch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_FieldMatch_default_instance_;
    new (ptr) ::p4::v1::FieldMatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::FieldMatch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_FieldMatch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsFieldMatch}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Exact.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Ternary.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_LPM.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Range.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Optional.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsTableAction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_TableAction_default_instance_;
    new (ptr) ::p4::v1::TableAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::TableAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TableAction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTableAction}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Action.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileActionSet.base,}};

static void InitDefaultsAction_Param() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_Action_Param_default_instance_;
    new (ptr) ::p4::v1::Action_Param();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::Action_Param::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Action_Param =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAction_Param}, {}};

static void InitDefaultsAction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_Action_default_instance_;
    new (ptr) ::p4::v1::Action();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::Action::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Action =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAction}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Action_Param.base,}};

static void InitDefaultsActionProfileActionSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ActionProfileActionSet_default_instance_;
    new (ptr) ::p4::v1::ActionProfileActionSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ActionProfileActionSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ActionProfileActionSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActionProfileActionSet}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileAction.base,}};

static void InitDefaultsActionProfileAction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ActionProfileAction_default_instance_;
    new (ptr) ::p4::v1::ActionProfileAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ActionProfileAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ActionProfileAction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActionProfileAction}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Action.base,}};

static void InitDefaultsActionProfileMember() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ActionProfileMember_default_instance_;
    new (ptr) ::p4::v1::ActionProfileMember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ActionProfileMember::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ActionProfileMember =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActionProfileMember}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Action.base,}};

static void InitDefaultsActionProfileGroup_Member() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ActionProfileGroup_Member_default_instance_;
    new (ptr) ::p4::v1::ActionProfileGroup_Member();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ActionProfileGroup_Member::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ActionProfileGroup_Member =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActionProfileGroup_Member}, {}};

static void InitDefaultsActionProfileGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ActionProfileGroup_default_instance_;
    new (ptr) ::p4::v1::ActionProfileGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ActionProfileGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ActionProfileGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActionProfileGroup}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileGroup_Member.base,}};

static void InitDefaultsIndex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_Index_default_instance_;
    new (ptr) ::p4::v1::Index();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::Index::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Index =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIndex}, {}};

static void InitDefaultsMeterEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_MeterEntry_default_instance_;
    new (ptr) ::p4::v1::MeterEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::MeterEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MeterEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMeterEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Index.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MeterConfig.base,}};

static void InitDefaultsDirectMeterEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_DirectMeterEntry_default_instance_;
    new (ptr) ::p4::v1::DirectMeterEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::DirectMeterEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DirectMeterEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDirectMeterEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MeterConfig.base,}};

static void InitDefaultsMeterConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_MeterConfig_default_instance_;
    new (ptr) ::p4::v1::MeterConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::MeterConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MeterConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMeterConfig}, {}};

static void InitDefaultsCounterEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_CounterEntry_default_instance_;
    new (ptr) ::p4::v1::CounterEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::CounterEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CounterEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCounterEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Index.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CounterData.base,}};

static void InitDefaultsDirectCounterEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_DirectCounterEntry_default_instance_;
    new (ptr) ::p4::v1::DirectCounterEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::DirectCounterEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DirectCounterEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDirectCounterEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CounterData.base,}};

static void InitDefaultsCounterData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_CounterData_default_instance_;
    new (ptr) ::p4::v1::CounterData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::CounterData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CounterData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCounterData}, {}};

static void InitDefaultsPacketReplicationEngineEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_PacketReplicationEngineEntry_default_instance_;
    new (ptr) ::p4::v1::PacketReplicationEngineEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::PacketReplicationEngineEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PacketReplicationEngineEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPacketReplicationEngineEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MulticastGroupEntry.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CloneSessionEntry.base,}};

static void InitDefaultsReplica() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_Replica_default_instance_;
    new (ptr) ::p4::v1::Replica();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::Replica::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Replica =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReplica}, {}};

static void InitDefaultsMulticastGroupEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_MulticastGroupEntry_default_instance_;
    new (ptr) ::p4::v1::MulticastGroupEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::MulticastGroupEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MulticastGroupEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMulticastGroupEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Replica.base,}};

static void InitDefaultsCloneSessionEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_CloneSessionEntry_default_instance_;
    new (ptr) ::p4::v1::CloneSessionEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::CloneSessionEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CloneSessionEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCloneSessionEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Replica.base,}};

static void InitDefaultsValueSetMember() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ValueSetMember_default_instance_;
    new (ptr) ::p4::v1::ValueSetMember();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ValueSetMember::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ValueSetMember =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValueSetMember}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch.base,}};

static void InitDefaultsValueSetEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ValueSetEntry_default_instance_;
    new (ptr) ::p4::v1::ValueSetEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ValueSetEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ValueSetEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValueSetEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ValueSetMember.base,}};

static void InitDefaultsRegisterEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_RegisterEntry_default_instance_;
    new (ptr) ::p4::v1::RegisterEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::RegisterEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RegisterEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRegisterEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Index.base,
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Data.base,}};

static void InitDefaultsDigestEntry_Config() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_DigestEntry_Config_default_instance_;
    new (ptr) ::p4::v1::DigestEntry_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::DigestEntry_Config::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestEntry_Config =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestEntry_Config}, {}};

static void InitDefaultsDigestEntry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_DigestEntry_default_instance_;
    new (ptr) ::p4::v1::DigestEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::DigestEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DigestEntry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDigestEntry}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestEntry_Config.base,}};

static void InitDefaultsStreamMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_StreamMessageRequest_default_instance_;
    new (ptr) ::p4::v1::StreamMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::StreamMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_StreamMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsStreamMessageRequest}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MasterArbitrationUpdate.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketOut.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestListAck.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsPacketOut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_PacketOut_default_instance_;
    new (ptr) ::p4::v1::PacketOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::PacketOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PacketOut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPacketOut}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketMetadata.base,}};

static void InitDefaultsDigestListAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_DigestListAck_default_instance_;
    new (ptr) ::p4::v1::DigestListAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::DigestListAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigestListAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigestListAck}, {}};

static void InitDefaultsStreamMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_StreamMessageResponse_default_instance_;
    new (ptr) ::p4::v1::StreamMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::StreamMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_StreamMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsStreamMessageResponse}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MasterArbitrationUpdate.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketIn.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestList.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_IdleTimeoutNotification.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamError.base,}};

static void InitDefaultsPacketIn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_PacketIn_default_instance_;
    new (ptr) ::p4::v1::PacketIn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::PacketIn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PacketIn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPacketIn}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketMetadata.base,}};

static void InitDefaultsDigestList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_DigestList_default_instance_;
    new (ptr) ::p4::v1::DigestList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::DigestList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DigestList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDigestList}, {
      &protobuf_p4_2fv1_2fp4data_2eproto::scc_info_P4Data.base,}};

static void InitDefaultsPacketMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_PacketMetadata_default_instance_;
    new (ptr) ::p4::v1::PacketMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::PacketMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PacketMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPacketMetadata}, {}};

static void InitDefaultsMasterArbitrationUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_MasterArbitrationUpdate_default_instance_;
    new (ptr) ::p4::v1::MasterArbitrationUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::MasterArbitrationUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MasterArbitrationUpdate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMasterArbitrationUpdate}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Role.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Uint128.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

static void InitDefaultsRole() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_Role_default_instance_;
    new (ptr) ::p4::v1::Role();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::Role::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Role =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRole}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsIdleTimeoutNotification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_IdleTimeoutNotification_default_instance_;
    new (ptr) ::p4::v1::IdleTimeoutNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::IdleTimeoutNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IdleTimeoutNotification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIdleTimeoutNotification}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry.base,}};

static void InitDefaultsStreamError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_StreamError_default_instance_;
    new (ptr) ::p4::v1::StreamError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::StreamError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_StreamError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsStreamError}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketOutError.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestListAckError.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamOtherError.base,}};

static void InitDefaultsPacketOutError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_PacketOutError_default_instance_;
    new (ptr) ::p4::v1::PacketOutError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::PacketOutError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PacketOutError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPacketOutError}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketOut.base,}};

static void InitDefaultsDigestListAckError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_DigestListAckError_default_instance_;
    new (ptr) ::p4::v1::DigestListAckError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::DigestListAckError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DigestListAckError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDigestListAckError}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestListAck.base,}};

static void InitDefaultsStreamOtherError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_StreamOtherError_default_instance_;
    new (ptr) ::p4::v1::StreamOtherError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::StreamOtherError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StreamOtherError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStreamOtherError}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsUint128() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_Uint128_default_instance_;
    new (ptr) ::p4::v1::Uint128();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::Uint128::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Uint128 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUint128}, {}};

static void InitDefaultsSetForwardingPipelineConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_SetForwardingPipelineConfigRequest_default_instance_;
    new (ptr) ::p4::v1::SetForwardingPipelineConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::SetForwardingPipelineConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SetForwardingPipelineConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSetForwardingPipelineConfigRequest}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Uint128.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ForwardingPipelineConfig.base,}};

static void InitDefaultsSetForwardingPipelineConfigResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_SetForwardingPipelineConfigResponse_default_instance_;
    new (ptr) ::p4::v1::SetForwardingPipelineConfigResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::SetForwardingPipelineConfigResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetForwardingPipelineConfigResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetForwardingPipelineConfigResponse}, {}};

static void InitDefaultsForwardingPipelineConfig_Cookie() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ForwardingPipelineConfig_Cookie_default_instance_;
    new (ptr) ::p4::v1::ForwardingPipelineConfig_Cookie();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ForwardingPipelineConfig_Cookie::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ForwardingPipelineConfig_Cookie =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsForwardingPipelineConfig_Cookie}, {}};

static void InitDefaultsForwardingPipelineConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_ForwardingPipelineConfig_default_instance_;
    new (ptr) ::p4::v1::ForwardingPipelineConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::ForwardingPipelineConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ForwardingPipelineConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsForwardingPipelineConfig}, {
      &protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::scc_info_P4Info.base,
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ForwardingPipelineConfig_Cookie.base,}};

static void InitDefaultsGetForwardingPipelineConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_GetForwardingPipelineConfigRequest_default_instance_;
    new (ptr) ::p4::v1::GetForwardingPipelineConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::GetForwardingPipelineConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetForwardingPipelineConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetForwardingPipelineConfigRequest}, {}};

static void InitDefaultsGetForwardingPipelineConfigResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_GetForwardingPipelineConfigResponse_default_instance_;
    new (ptr) ::p4::v1::GetForwardingPipelineConfigResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::GetForwardingPipelineConfigResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetForwardingPipelineConfigResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetForwardingPipelineConfigResponse}, {
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ForwardingPipelineConfig.base,}};

static void InitDefaultsError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_Error_default_instance_;
    new (ptr) ::p4::v1::Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::Error::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Error =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsError}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsCapabilitiesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_CapabilitiesRequest_default_instance_;
    new (ptr) ::p4::v1::CapabilitiesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::CapabilitiesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CapabilitiesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCapabilitiesRequest}, {}};

static void InitDefaultsCapabilitiesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::v1::_CapabilitiesResponse_default_instance_;
    new (ptr) ::p4::v1::CapabilitiesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::v1::CapabilitiesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CapabilitiesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCapabilitiesResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_WriteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Update.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Entity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExternEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableEntry_IdleTimeout.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FieldMatch_Exact.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FieldMatch_Ternary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FieldMatch_LPM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FieldMatch_Range.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FieldMatch_Optional.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FieldMatch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableAction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Action_Param.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Action.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionProfileActionSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionProfileAction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionProfileMember.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionProfileGroup_Member.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionProfileGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Index.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MeterEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DirectMeterEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MeterConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CounterEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DirectCounterEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CounterData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PacketReplicationEngineEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Replica.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MulticastGroupEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloneSessionEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValueSetMember.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValueSetEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestEntry_Config.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestEntry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PacketOut.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestListAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamMessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PacketIn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PacketMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterArbitrationUpdate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Role.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IdleTimeoutNotification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PacketOutError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigestListAckError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamOtherError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Uint128.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetForwardingPipelineConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetForwardingPipelineConfigResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardingPipelineConfig_Cookie.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardingPipelineConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetForwardingPipelineConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetForwardingPipelineConfigResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Error.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CapabilitiesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CapabilitiesResponse.base);
}

::google::protobuf::Metadata file_level_metadata[63];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::WriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::WriteRequest, device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::WriteRequest, role_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::WriteRequest, election_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::WriteRequest, updates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::WriteRequest, atomicity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::WriteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ReadRequest, device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ReadRequest, entities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ReadResponse, entities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Update, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Update, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Update, entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Entity, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Entity, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::p4::v1::EntityDefaultTypeInternal, extern_entry_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, table_entry_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, action_profile_member_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, action_profile_group_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, meter_entry_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, direct_meter_entry_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, counter_entry_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, direct_counter_entry_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, packet_replication_engine_entry_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, value_set_entry_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, register_entry_),
  offsetof(::p4::v1::EntityDefaultTypeInternal, digest_entry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Entity, entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ExternEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ExternEntry, extern_type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ExternEntry, extern_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ExternEntry, entry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry_IdleTimeout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry_IdleTimeout, elapsed_ns_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, table_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, match_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, controller_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, meter_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, counter_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, is_default_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, idle_timeout_ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, time_since_last_hit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableEntry, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_Exact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_Exact, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_Ternary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_Ternary, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_Ternary, mask_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_LPM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_LPM, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_LPM, prefix_len_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_Range, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_Range, high_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_Optional, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch_Optional, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch, field_id_),
  offsetof(::p4::v1::FieldMatchDefaultTypeInternal, exact_),
  offsetof(::p4::v1::FieldMatchDefaultTypeInternal, ternary_),
  offsetof(::p4::v1::FieldMatchDefaultTypeInternal, lpm_),
  offsetof(::p4::v1::FieldMatchDefaultTypeInternal, range_),
  offsetof(::p4::v1::FieldMatchDefaultTypeInternal, optional_),
  offsetof(::p4::v1::FieldMatchDefaultTypeInternal, other_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::FieldMatch, field_match_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableAction, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableAction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::p4::v1::TableActionDefaultTypeInternal, action_),
  offsetof(::p4::v1::TableActionDefaultTypeInternal, action_profile_member_id_),
  offsetof(::p4::v1::TableActionDefaultTypeInternal, action_profile_group_id_),
  offsetof(::p4::v1::TableActionDefaultTypeInternal, action_profile_action_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::TableAction, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Action_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Action_Param, param_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Action_Param, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Action, action_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Action, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileActionSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileActionSet, action_profile_actions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileAction, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileAction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileAction, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileAction, weight_),
  offsetof(::p4::v1::ActionProfileActionDefaultTypeInternal, watch_),
  offsetof(::p4::v1::ActionProfileActionDefaultTypeInternal, watch_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileAction, watch_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileMember, action_profile_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileMember, member_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileMember, action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileGroup_Member, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileGroup_Member, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileGroup_Member, member_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileGroup_Member, weight_),
  offsetof(::p4::v1::ActionProfileGroup_MemberDefaultTypeInternal, watch_),
  offsetof(::p4::v1::ActionProfileGroup_MemberDefaultTypeInternal, watch_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileGroup_Member, watch_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileGroup, action_profile_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileGroup, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileGroup, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ActionProfileGroup, max_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Index, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Index, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MeterEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MeterEntry, meter_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MeterEntry, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MeterEntry, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DirectMeterEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DirectMeterEntry, table_entry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DirectMeterEntry, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MeterConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MeterConfig, cir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MeterConfig, cburst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MeterConfig, pir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MeterConfig, pburst_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CounterEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CounterEntry, counter_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CounterEntry, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CounterEntry, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DirectCounterEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DirectCounterEntry, table_entry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DirectCounterEntry, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CounterData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CounterData, byte_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CounterData, packet_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketReplicationEngineEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketReplicationEngineEntry, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::p4::v1::PacketReplicationEngineEntryDefaultTypeInternal, multicast_group_entry_),
  offsetof(::p4::v1::PacketReplicationEngineEntryDefaultTypeInternal, clone_session_entry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketReplicationEngineEntry, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Replica, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Replica, egress_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Replica, instance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MulticastGroupEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MulticastGroupEntry, multicast_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MulticastGroupEntry, replicas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CloneSessionEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CloneSessionEntry, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CloneSessionEntry, replicas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CloneSessionEntry, class_of_service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CloneSessionEntry, packet_length_bytes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ValueSetMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ValueSetMember, match_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ValueSetEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ValueSetEntry, value_set_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ValueSetEntry, members_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::RegisterEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::RegisterEntry, register_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::RegisterEntry, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::RegisterEntry, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestEntry_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestEntry_Config, max_timeout_ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestEntry_Config, max_list_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestEntry_Config, ack_timeout_ns_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestEntry, digest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestEntry, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamMessageRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::p4::v1::StreamMessageRequestDefaultTypeInternal, arbitration_),
  offsetof(::p4::v1::StreamMessageRequestDefaultTypeInternal, packet_),
  offsetof(::p4::v1::StreamMessageRequestDefaultTypeInternal, digest_ack_),
  offsetof(::p4::v1::StreamMessageRequestDefaultTypeInternal, other_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamMessageRequest, update_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketOut, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketOut, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestListAck, digest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestListAck, list_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamMessageResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::p4::v1::StreamMessageResponseDefaultTypeInternal, arbitration_),
  offsetof(::p4::v1::StreamMessageResponseDefaultTypeInternal, packet_),
  offsetof(::p4::v1::StreamMessageResponseDefaultTypeInternal, digest_),
  offsetof(::p4::v1::StreamMessageResponseDefaultTypeInternal, idle_timeout_notification_),
  offsetof(::p4::v1::StreamMessageResponseDefaultTypeInternal, other_),
  offsetof(::p4::v1::StreamMessageResponseDefaultTypeInternal, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamMessageResponse, update_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketIn, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketIn, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestList, digest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestList, list_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestList, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestList, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketMetadata, metadata_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketMetadata, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MasterArbitrationUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MasterArbitrationUpdate, device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MasterArbitrationUpdate, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MasterArbitrationUpdate, election_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::MasterArbitrationUpdate, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Role, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Role, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Role, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::IdleTimeoutNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::IdleTimeoutNotification, table_entry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::IdleTimeoutNotification, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamError, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamError, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamError, canonical_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamError, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamError, space_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamError, code_),
  offsetof(::p4::v1::StreamErrorDefaultTypeInternal, packet_out_),
  offsetof(::p4::v1::StreamErrorDefaultTypeInternal, digest_list_ack_),
  offsetof(::p4::v1::StreamErrorDefaultTypeInternal, other_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamError, details_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketOutError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::PacketOutError, packet_out_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestListAckError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::DigestListAckError, digest_list_ack_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamOtherError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::StreamOtherError, other_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Uint128, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Uint128, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Uint128, low_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::SetForwardingPipelineConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::SetForwardingPipelineConfigRequest, device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::SetForwardingPipelineConfigRequest, role_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::SetForwardingPipelineConfigRequest, election_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::SetForwardingPipelineConfigRequest, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::SetForwardingPipelineConfigRequest, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::SetForwardingPipelineConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ForwardingPipelineConfig_Cookie, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ForwardingPipelineConfig_Cookie, cookie_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ForwardingPipelineConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ForwardingPipelineConfig, p4info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ForwardingPipelineConfig, p4_device_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::ForwardingPipelineConfig, cookie_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::GetForwardingPipelineConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::GetForwardingPipelineConfigRequest, device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::GetForwardingPipelineConfigRequest, response_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::GetForwardingPipelineConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::GetForwardingPipelineConfigResponse, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Error, canonical_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Error, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Error, space_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Error, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::Error, details_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CapabilitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CapabilitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::v1::CapabilitiesResponse, p4runtime_api_version_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::p4::v1::WriteRequest)},
  { 10, -1, sizeof(::p4::v1::WriteResponse)},
  { 15, -1, sizeof(::p4::v1::ReadRequest)},
  { 22, -1, sizeof(::p4::v1::ReadResponse)},
  { 28, -1, sizeof(::p4::v1::Update)},
  { 35, -1, sizeof(::p4::v1::Entity)},
  { 53, -1, sizeof(::p4::v1::ExternEntry)},
  { 61, -1, sizeof(::p4::v1::TableEntry_IdleTimeout)},
  { 67, -1, sizeof(::p4::v1::TableEntry)},
  { 83, -1, sizeof(::p4::v1::FieldMatch_Exact)},
  { 89, -1, sizeof(::p4::v1::FieldMatch_Ternary)},
  { 96, -1, sizeof(::p4::v1::FieldMatch_LPM)},
  { 103, -1, sizeof(::p4::v1::FieldMatch_Range)},
  { 110, -1, sizeof(::p4::v1::FieldMatch_Optional)},
  { 116, -1, sizeof(::p4::v1::FieldMatch)},
  { 129, -1, sizeof(::p4::v1::TableAction)},
  { 139, -1, sizeof(::p4::v1::Action_Param)},
  { 146, -1, sizeof(::p4::v1::Action)},
  { 153, -1, sizeof(::p4::v1::ActionProfileActionSet)},
  { 159, -1, sizeof(::p4::v1::ActionProfileAction)},
  { 169, -1, sizeof(::p4::v1::ActionProfileMember)},
  { 177, -1, sizeof(::p4::v1::ActionProfileGroup_Member)},
  { 187, -1, sizeof(::p4::v1::ActionProfileGroup)},
  { 196, -1, sizeof(::p4::v1::Index)},
  { 202, -1, sizeof(::p4::v1::MeterEntry)},
  { 210, -1, sizeof(::p4::v1::DirectMeterEntry)},
  { 217, -1, sizeof(::p4::v1::MeterConfig)},
  { 226, -1, sizeof(::p4::v1::CounterEntry)},
  { 234, -1, sizeof(::p4::v1::DirectCounterEntry)},
  { 241, -1, sizeof(::p4::v1::CounterData)},
  { 248, -1, sizeof(::p4::v1::PacketReplicationEngineEntry)},
  { 256, -1, sizeof(::p4::v1::Replica)},
  { 263, -1, sizeof(::p4::v1::MulticastGroupEntry)},
  { 270, -1, sizeof(::p4::v1::CloneSessionEntry)},
  { 279, -1, sizeof(::p4::v1::ValueSetMember)},
  { 285, -1, sizeof(::p4::v1::ValueSetEntry)},
  { 292, -1, sizeof(::p4::v1::RegisterEntry)},
  { 300, -1, sizeof(::p4::v1::DigestEntry_Config)},
  { 308, -1, sizeof(::p4::v1::DigestEntry)},
  { 315, -1, sizeof(::p4::v1::StreamMessageRequest)},
  { 325, -1, sizeof(::p4::v1::PacketOut)},
  { 332, -1, sizeof(::p4::v1::DigestListAck)},
  { 339, -1, sizeof(::p4::v1::StreamMessageResponse)},
  { 351, -1, sizeof(::p4::v1::PacketIn)},
  { 358, -1, sizeof(::p4::v1::DigestList)},
  { 367, -1, sizeof(::p4::v1::PacketMetadata)},
  { 374, -1, sizeof(::p4::v1::MasterArbitrationUpdate)},
  { 383, -1, sizeof(::p4::v1::Role)},
  { 390, -1, sizeof(::p4::v1::IdleTimeoutNotification)},
  { 397, -1, sizeof(::p4::v1::StreamError)},
  { 410, -1, sizeof(::p4::v1::PacketOutError)},
  { 416, -1, sizeof(::p4::v1::DigestListAckError)},
  { 422, -1, sizeof(::p4::v1::StreamOtherError)},
  { 428, -1, sizeof(::p4::v1::Uint128)},
  { 435, -1, sizeof(::p4::v1::SetForwardingPipelineConfigRequest)},
  { 445, -1, sizeof(::p4::v1::SetForwardingPipelineConfigResponse)},
  { 450, -1, sizeof(::p4::v1::ForwardingPipelineConfig_Cookie)},
  { 456, -1, sizeof(::p4::v1::ForwardingPipelineConfig)},
  { 464, -1, sizeof(::p4::v1::GetForwardingPipelineConfigRequest)},
  { 471, -1, sizeof(::p4::v1::GetForwardingPipelineConfigResponse)},
  { 477, -1, sizeof(::p4::v1::Error)},
  { 487, -1, sizeof(::p4::v1::CapabilitiesRequest)},
  { 492, -1, sizeof(::p4::v1::CapabilitiesResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_WriteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_WriteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ReadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_Update_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_Entity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ExternEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_TableEntry_IdleTimeout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_TableEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_FieldMatch_Exact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_FieldMatch_Ternary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_FieldMatch_LPM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_FieldMatch_Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_FieldMatch_Optional_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_FieldMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_TableAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_Action_Param_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ActionProfileActionSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ActionProfileAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ActionProfileMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ActionProfileGroup_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ActionProfileGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_Index_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_MeterEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_DirectMeterEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_MeterConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_CounterEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_DirectCounterEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_CounterData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_PacketReplicationEngineEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_Replica_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_MulticastGroupEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_CloneSessionEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ValueSetMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ValueSetEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_RegisterEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_DigestEntry_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_DigestEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_StreamMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_PacketOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_DigestListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_StreamMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_PacketIn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_DigestList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_PacketMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_MasterArbitrationUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_Role_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_IdleTimeoutNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_StreamError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_PacketOutError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_DigestListAckError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_StreamOtherError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_Uint128_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_SetForwardingPipelineConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_SetForwardingPipelineConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ForwardingPipelineConfig_Cookie_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_ForwardingPipelineConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_GetForwardingPipelineConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_GetForwardingPipelineConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_CapabilitiesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::v1::_CapabilitiesResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "p4/v1/p4runtime.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 63);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025p4/v1/p4runtime.proto\022\005p4.v1\032\031google/p"
      "rotobuf/any.proto\032\027google/rpc/status.pro"
      "to\032\031p4/config/v1/p4info.proto\032\022p4/v1/p4d"
      "ata.proto\"\372\001\n\014WriteRequest\022\021\n\tdevice_id\030"
      "\001 \001(\004\022\017\n\007role_id\030\002 \001(\004\022#\n\013election_id\030\003 "
      "\001(\0132\016.p4.v1.Uint128\022\036\n\007updates\030\004 \003(\0132\r.p"
      "4.v1.Update\0220\n\tatomicity\030\005 \001(\0162\035.p4.v1.W"
      "riteRequest.Atomicity\"O\n\tAtomicity\022\025\n\021CO"
      "NTINUE_ON_ERROR\020\000\022\025\n\021ROLLBACK_ON_ERROR\020\001"
      "\022\024\n\020DATAPLANE_ATOMIC\020\002\"\017\n\rWriteResponse\""
      "A\n\013ReadRequest\022\021\n\tdevice_id\030\001 \001(\004\022\037\n\010ent"
      "ities\030\002 \003(\0132\r.p4.v1.Entity\"/\n\014ReadRespon"
      "se\022\037\n\010entities\030\001 \003(\0132\r.p4.v1.Entity\"\206\001\n\006"
      "Update\022 \n\004type\030\001 \001(\0162\022.p4.v1.Update.Type"
      "\022\035\n\006entity\030\002 \001(\0132\r.p4.v1.Entity\";\n\004Type\022"
      "\017\n\013UNSPECIFIED\020\000\022\n\n\006INSERT\020\001\022\n\n\006MODIFY\020\002"
      "\022\n\n\006DELETE\020\003\"\207\005\n\006Entity\022*\n\014extern_entry\030"
      "\001 \001(\0132\022.p4.v1.ExternEntryH\000\022(\n\013table_ent"
      "ry\030\002 \001(\0132\021.p4.v1.TableEntryH\000\022;\n\025action_"
      "profile_member\030\003 \001(\0132\032.p4.v1.ActionProfi"
      "leMemberH\000\0229\n\024action_profile_group\030\004 \001(\013"
      "2\031.p4.v1.ActionProfileGroupH\000\022(\n\013meter_e"
      "ntry\030\005 \001(\0132\021.p4.v1.MeterEntryH\000\0225\n\022direc"
      "t_meter_entry\030\006 \001(\0132\027.p4.v1.DirectMeterE"
      "ntryH\000\022,\n\rcounter_entry\030\007 \001(\0132\023.p4.v1.Co"
      "unterEntryH\000\0229\n\024direct_counter_entry\030\010 \001"
      "(\0132\031.p4.v1.DirectCounterEntryH\000\022N\n\037packe"
      "t_replication_engine_entry\030\t \001(\0132#.p4.v1"
      ".PacketReplicationEngineEntryH\000\022/\n\017value"
      "_set_entry\030\n \001(\0132\024.p4.v1.ValueSetEntryH\000"
      "\022.\n\016register_entry\030\013 \001(\0132\024.p4.v1.Registe"
      "rEntryH\000\022*\n\014digest_entry\030\014 \001(\0132\022.p4.v1.D"
      "igestEntryH\000B\010\n\006entity\"]\n\013ExternEntry\022\026\n"
      "\016extern_type_id\030\001 \001(\r\022\021\n\textern_id\030\002 \001(\r"
      "\022#\n\005entry\030\003 \001(\0132\024.google.protobuf.Any\"\220\003"
      "\n\nTableEntry\022\020\n\010table_id\030\001 \001(\r\022 \n\005match\030"
      "\002 \003(\0132\021.p4.v1.FieldMatch\022\"\n\006action\030\003 \001(\013"
      "2\022.p4.v1.TableAction\022\020\n\010priority\030\004 \001(\005\022\037"
      "\n\023controller_metadata\030\005 \001(\004B\002\030\001\022(\n\014meter"
      "_config\030\006 \001(\0132\022.p4.v1.MeterConfig\022(\n\014cou"
      "nter_data\030\007 \001(\0132\022.p4.v1.CounterData\022\031\n\021i"
      "s_default_action\030\010 \001(\010\022\027\n\017idle_timeout_n"
      "s\030\t \001(\003\022:\n\023time_since_last_hit\030\n \001(\0132\035.p"
      "4.v1.TableEntry.IdleTimeout\022\020\n\010metadata\030"
      "\013 \001(\014\032!\n\013IdleTimeout\022\022\n\nelapsed_ns\030\001 \001(\003"
      "\"\332\003\n\nFieldMatch\022\020\n\010field_id\030\001 \001(\r\022(\n\005exa"
      "ct\030\002 \001(\0132\027.p4.v1.FieldMatch.ExactH\000\022,\n\007t"
      "ernary\030\003 \001(\0132\031.p4.v1.FieldMatch.TernaryH"
      "\000\022$\n\003lpm\030\004 \001(\0132\025.p4.v1.FieldMatch.LPMH\000\022"
      "(\n\005range\030\006 \001(\0132\027.p4.v1.FieldMatch.RangeH"
      "\000\022.\n\010optional\030\007 \001(\0132\032.p4.v1.FieldMatch.O"
      "ptionalH\000\022%\n\005other\030d \001(\0132\024.google.protob"
      "uf.AnyH\000\032\026\n\005Exact\022\r\n\005value\030\001 \001(\014\032&\n\007Tern"
      "ary\022\r\n\005value\030\001 \001(\014\022\014\n\004mask\030\002 \001(\014\032(\n\003LPM\022"
      "\r\n\005value\030\001 \001(\014\022\022\n\nprefix_len\030\002 \001(\005\032\"\n\005Ra"
      "nge\022\013\n\003low\030\001 \001(\014\022\014\n\004high\030\002 \001(\014\032\031\n\010Option"
      "al\022\r\n\005value\030\001 \001(\014B\022\n\020field_match_type\"\301\001"
      "\n\013TableAction\022\037\n\006action\030\001 \001(\0132\r.p4.v1.Ac"
      "tionH\000\022\"\n\030action_profile_member_id\030\002 \001(\r"
      "H\000\022!\n\027action_profile_group_id\030\003 \001(\rH\000\022B\n"
      "\031action_profile_action_set\030\004 \001(\0132\035.p4.v1"
      ".ActionProfileActionSetH\000B\006\n\004type\"j\n\006Act"
      "ion\022\021\n\taction_id\030\001 \001(\r\022#\n\006params\030\004 \003(\0132\023"
      ".p4.v1.Action.Param\032(\n\005Param\022\020\n\010param_id"
      "\030\002 \001(\r\022\r\n\005value\030\003 \001(\014\"T\n\026ActionProfileAc"
      "tionSet\022:\n\026action_profile_actions\030\001 \003(\0132"
      "\032.p4.v1.ActionProfileAction\"}\n\023ActionPro"
      "fileAction\022\035\n\006action\030\001 \001(\0132\r.p4.v1.Actio"
      "n\022\016\n\006weight\030\002 \001(\005\022\023\n\005watch\030\003 \001(\005B\002\030\001H\000\022\024"
      "\n\nwatch_port\030\004 \001(\014H\000B\014\n\nwatch_kind\"b\n\023Ac"
      "tionProfileMember\022\031\n\021action_profile_id\030\001"
      " \001(\r\022\021\n\tmember_id\030\002 \001(\r\022\035\n\006action\030\003 \001(\0132"
      "\r.p4.v1.Action\"\354\001\n\022ActionProfileGroup\022\031\n"
      "\021action_profile_id\030\001 \001(\r\022\020\n\010group_id\030\002 \001"
      "(\r\0221\n\007members\030\003 \003(\0132 .p4.v1.ActionProfil"
      "eGroup.Member\022\020\n\010max_size\030\004 \001(\005\032d\n\006Membe"
      "r\022\021\n\tmember_id\030\001 \001(\r\022\016\n\006weight\030\002 \001(\005\022\023\n\005"
      "watch\030\003 \001(\005B\002\030\001H\000\022\024\n\nwatch_port\030\004 \001(\014H\000B"
      "\014\n\nwatch_kind\"\026\n\005Index\022\r\n\005index\030\001 \001(\003\"_\n"
      "\nMeterEntry\022\020\n\010meter_id\030\001 \001(\r\022\033\n\005index\030\002"
      " \001(\0132\014.p4.v1.Index\022\"\n\006config\030\003 \001(\0132\022.p4."
      "v1.MeterConfig\"^\n\020DirectMeterEntry\022&\n\013ta"
      "ble_entry\030\001 \001(\0132\021.p4.v1.TableEntry\022\"\n\006co"
      "nfig\030\002 \001(\0132\022.p4.v1.MeterConfig\"G\n\013MeterC"
      "onfig\022\013\n\003cir\030\001 \001(\003\022\016\n\006cburst\030\002 \001(\003\022\013\n\003pi"
      "r\030\003 \001(\003\022\016\n\006pburst\030\004 \001(\003\"a\n\014CounterEntry\022"
      "\022\n\ncounter_id\030\001 \001(\r\022\033\n\005index\030\002 \001(\0132\014.p4."
      "v1.Index\022 \n\004data\030\003 \001(\0132\022.p4.v1.CounterDa"
      "ta\"^\n\022DirectCounterEntry\022&\n\013table_entry\030"
      "\001 \001(\0132\021.p4.v1.TableEntry\022 \n\004data\030\002 \001(\0132\022"
      ".p4.v1.CounterData\"7\n\013CounterData\022\022\n\nbyt"
      "e_count\030\001 \001(\003\022\024\n\014packet_count\030\002 \001(\003\"\234\001\n\034"
      "PacketReplicationEngineEntry\022;\n\025multicas"
      "t_group_entry\030\001 \001(\0132\032.p4.v1.MulticastGro"
      "upEntryH\000\0227\n\023clone_session_entry\030\002 \001(\0132\030"
      ".p4.v1.CloneSessionEntryH\000B\006\n\004type\"0\n\007Re"
      "plica\022\023\n\013egress_port\030\001 \001(\r\022\020\n\010instance\030\002"
      " \001(\r\"S\n\023MulticastGroupEntry\022\032\n\022multicast"
      "_group_id\030\001 \001(\r\022 \n\010replicas\030\002 \003(\0132\016.p4.v"
      "1.Replica\"\200\001\n\021CloneSessionEntry\022\022\n\nsessi"
      "on_id\030\001 \001(\r\022 \n\010replicas\030\002 \003(\0132\016.p4.v1.Re"
      "plica\022\030\n\020class_of_service\030\003 \001(\r\022\033\n\023packe"
      "t_length_bytes\030\004 \001(\005\"2\n\016ValueSetMember\022 "
      "\n\005match\030\001 \003(\0132\021.p4.v1.FieldMatch\"M\n\rValu"
      "eSetEntry\022\024\n\014value_set_id\030\001 \001(\r\022&\n\007membe"
      "rs\030\002 \003(\0132\025.p4.v1.ValueSetMember\"^\n\rRegis"
      "terEntry\022\023\n\013register_id\030\001 \001(\r\022\033\n\005index\030\002"
      " \001(\0132\014.p4.v1.Index\022\033\n\004data\030\003 \001(\0132\r.p4.v1"
      ".P4Data\"\234\001\n\013DigestEntry\022\021\n\tdigest_id\030\001 \001"
      "(\r\022)\n\006config\030\002 \001(\0132\031.p4.v1.DigestEntry.C"
      "onfig\032O\n\006Config\022\026\n\016max_timeout_ns\030\001 \001(\003\022"
      "\025\n\rmax_list_size\030\002 \001(\005\022\026\n\016ack_timeout_ns"
      "\030\003 \001(\003\"\316\001\n\024StreamMessageRequest\0225\n\013arbit"
      "ration\030\001 \001(\0132\036.p4.v1.MasterArbitrationUp"
      "dateH\000\022\"\n\006packet\030\002 \001(\0132\020.p4.v1.PacketOut"
      "H\000\022*\n\ndigest_ack\030\003 \001(\0132\024.p4.v1.DigestLis"
      "tAckH\000\022%\n\005other\030\004 \001(\0132\024.google.protobuf."
      "AnyH\000B\010\n\006update\"E\n\tPacketOut\022\017\n\007payload\030"
      "\001 \001(\014\022\'\n\010metadata\030\002 \003(\0132\025.p4.v1.PacketMe"
      "tadata\"3\n\rDigestListAck\022\021\n\tdigest_id\030\001 \001"
      "(\r\022\017\n\007list_id\030\002 \001(\004\"\261\002\n\025StreamMessageRes"
      "ponse\0225\n\013arbitration\030\001 \001(\0132\036.p4.v1.Maste"
      "rArbitrationUpdateH\000\022!\n\006packet\030\002 \001(\0132\017.p"
      "4.v1.PacketInH\000\022#\n\006digest\030\003 \001(\0132\021.p4.v1."
      "DigestListH\000\022C\n\031idle_timeout_notificatio"
      "n\030\004 \001(\0132\036.p4.v1.IdleTimeoutNotificationH"
      "\000\022%\n\005other\030\005 \001(\0132\024.google.protobuf.AnyH\000"
      "\022#\n\005error\030\006 \001(\0132\022.p4.v1.StreamErrorH\000B\010\n"
      "\006update\"D\n\010PacketIn\022\017\n\007payload\030\001 \001(\014\022\'\n\010"
      "metadata\030\002 \003(\0132\025.p4.v1.PacketMetadata\"`\n"
      "\nDigestList\022\021\n\tdigest_id\030\001 \001(\r\022\017\n\007list_i"
      "d\030\002 \001(\004\022\033\n\004data\030\003 \003(\0132\r.p4.v1.P4Data\022\021\n\t"
      "timestamp\030\004 \001(\003\"4\n\016PacketMetadata\022\023\n\013met"
      "adata_id\030\001 \001(\r\022\r\n\005value\030\002 \001(\014\"\220\001\n\027Master"
      "ArbitrationUpdate\022\021\n\tdevice_id\030\001 \001(\004\022\031\n\004"
      "role\030\002 \001(\0132\013.p4.v1.Role\022#\n\013election_id\030\003"
      " \001(\0132\016.p4.v1.Uint128\022\"\n\006status\030\004 \001(\0132\022.g"
      "oogle.rpc.Status\"8\n\004Role\022\n\n\002id\030\001 \001(\004\022$\n\006"
      "config\030\002 \001(\0132\024.google.protobuf.Any\"T\n\027Id"
      "leTimeoutNotification\022&\n\013table_entry\030\001 \003"
      "(\0132\021.p4.v1.TableEntry\022\021\n\ttimestamp\030\002 \001(\003"
      "\"\353\001\n\013StreamError\022\026\n\016canonical_code\030\001 \001(\005"
      "\022\017\n\007message\030\002 \001(\t\022\r\n\005space\030\003 \001(\t\022\014\n\004code"
      "\030\004 \001(\005\022+\n\npacket_out\030\005 \001(\0132\025.p4.v1.Packe"
      "tOutErrorH\000\0224\n\017digest_list_ack\030\006 \001(\0132\031.p"
      "4.v1.DigestListAckErrorH\000\022(\n\005other\030\007 \001(\013"
      "2\027.p4.v1.StreamOtherErrorH\000B\t\n\007details\"6"
      "\n\016PacketOutError\022$\n\npacket_out\030\001 \001(\0132\020.p"
      "4.v1.PacketOut\"C\n\022DigestListAckError\022-\n\017"
      "digest_list_ack\030\001 \001(\0132\024.p4.v1.DigestList"
      "Ack\"7\n\020StreamOtherError\022#\n\005other\030\001 \001(\0132\024"
      ".google.protobuf.Any\"$\n\007Uint128\022\014\n\004high\030"
      "\001 \001(\004\022\013\n\003low\030\002 \001(\004\"\331\002\n\"SetForwardingPipe"
      "lineConfigRequest\022\021\n\tdevice_id\030\001 \001(\004\022\017\n\007"
      "role_id\030\002 \001(\004\022#\n\013election_id\030\003 \001(\0132\016.p4."
      "v1.Uint128\022@\n\006action\030\004 \001(\01620.p4.v1.SetFo"
      "rwardingPipelineConfigRequest.Action\022/\n\006"
      "config\030\005 \001(\0132\037.p4.v1.ForwardingPipelineC"
      "onfig\"w\n\006Action\022\017\n\013UNSPECIFIED\020\000\022\n\n\006VERI"
      "FY\020\001\022\023\n\017VERIFY_AND_SAVE\020\002\022\025\n\021VERIFY_AND_"
      "COMMIT\020\003\022\n\n\006COMMIT\020\004\022\030\n\024RECONCILE_AND_CO"
      "MMIT\020\005\"%\n#SetForwardingPipelineConfigRes"
      "ponse\"\254\001\n\030ForwardingPipelineConfig\022$\n\006p4"
      "info\030\001 \001(\0132\024.p4.config.v1.P4Info\022\030\n\020p4_d"
      "evice_config\030\002 \001(\014\0226\n\006cookie\030\003 \001(\0132&.p4."
      "v1.ForwardingPipelineConfig.Cookie\032\030\n\006Co"
      "okie\022\016\n\006cookie\030\001 \001(\004\"\345\001\n\"GetForwardingPi"
      "pelineConfigRequest\022\021\n\tdevice_id\030\001 \001(\004\022M"
      "\n\rresponse_type\030\002 \001(\01626.p4.v1.GetForward"
      "ingPipelineConfigRequest.ResponseType\"]\n"
      "\014ResponseType\022\007\n\003ALL\020\000\022\017\n\013COOKIE_ONLY\020\001\022"
      "\025\n\021P4INFO_AND_COOKIE\020\002\022\034\n\030DEVICE_CONFIG_"
      "AND_COOKIE\020\003\"V\n#GetForwardingPipelineCon"
      "figResponse\022/\n\006config\030\001 \001(\0132\037.p4.v1.Forw"
      "ardingPipelineConfig\"t\n\005Error\022\026\n\016canonic"
      "al_code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022\r\n\005space\030"
      "\003 \001(\t\022\014\n\004code\030\004 \001(\005\022%\n\007details\030\005 \001(\0132\024.g"
      "oogle.protobuf.Any\"\025\n\023CapabilitiesReques"
      "t\"5\n\024CapabilitiesResponse\022\035\n\025p4runtime_a"
      "pi_version\030\001 \001(\t*\212\001\n\007SdnPort\022\024\n\020SDN_PORT"
      "_UNKNOWN\020\000\022\020\n\014SDN_PORT_MIN\020\001\022\031\n\014SDN_PORT"
      "_MAX\020\377\375\377\377\377\377\377\377\377\001\022!\n\024SDN_PORT_RECIRCULATE\020"
      "\372\377\377\377\377\377\377\377\377\001\022\031\n\014SDN_PORT_CPU\020\375\377\377\377\377\377\377\377\377\0012\203\004"
      "\n\tP4Runtime\0224\n\005Write\022\023.p4.v1.WriteReques"
      "t\032\024.p4.v1.WriteResponse\"\000\0223\n\004Read\022\022.p4.v"
      "1.ReadRequest\032\023.p4.v1.ReadResponse\"\0000\001\022v"
      "\n\033SetForwardingPipelineConfig\022).p4.v1.Se"
      "tForwardingPipelineConfigRequest\032*.p4.v1"
      ".SetForwardingPipelineConfigResponse\"\000\022v"
      "\n\033GetForwardingPipelineConfig\022).p4.v1.Ge"
      "tForwardingPipelineConfigRequest\032*.p4.v1"
      ".GetForwardingPipelineConfigResponse\"\000\022P"
      "\n\rStreamChannel\022\033.p4.v1.StreamMessageReq"
      "uest\032\034.p4.v1.StreamMessageResponse\"\000(\0010\001"
      "\022I\n\014Capabilities\022\032.p4.v1.CapabilitiesReq"
      "uest\032\033.p4.v1.CapabilitiesResponse\"\000B)Z$g"
      "ithub.com/p4lang/p4runtime/go/p4/v1\370\001\001b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7886);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "p4/v1/p4runtime.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
  ::protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::AddDescriptors();
  ::protobuf_p4_2fv1_2fp4data_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_p4_2fv1_2fp4runtime_2eproto
namespace p4 {
namespace v1 {
const ::google::protobuf::EnumDescriptor* WriteRequest_Atomicity_descriptor() {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_enum_descriptors[0];
}
bool WriteRequest_Atomicity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WriteRequest_Atomicity WriteRequest::CONTINUE_ON_ERROR;
const WriteRequest_Atomicity WriteRequest::ROLLBACK_ON_ERROR;
const WriteRequest_Atomicity WriteRequest::DATAPLANE_ATOMIC;
const WriteRequest_Atomicity WriteRequest::Atomicity_MIN;
const WriteRequest_Atomicity WriteRequest::Atomicity_MAX;
const int WriteRequest::Atomicity_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Update_Type_descriptor() {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_enum_descriptors[1];
}
bool Update_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Update_Type Update::UNSPECIFIED;
const Update_Type Update::INSERT;
const Update_Type Update::MODIFY;
const Update_Type Update::DELETE;
const Update_Type Update::Type_MIN;
const Update_Type Update::Type_MAX;
const int Update::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetForwardingPipelineConfigRequest_Action_descriptor() {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_enum_descriptors[2];
}
bool SetForwardingPipelineConfigRequest_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest::UNSPECIFIED;
const SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest::VERIFY;
const SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest::VERIFY_AND_SAVE;
const SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest::VERIFY_AND_COMMIT;
const SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest::COMMIT;
const SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest::RECONCILE_AND_COMMIT;
const SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest::Action_MIN;
const SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest::Action_MAX;
const int SetForwardingPipelineConfigRequest::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetForwardingPipelineConfigRequest_ResponseType_descriptor() {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_enum_descriptors[3];
}
bool GetForwardingPipelineConfigRequest_ResponseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetForwardingPipelineConfigRequest_ResponseType GetForwardingPipelineConfigRequest::ALL;
const GetForwardingPipelineConfigRequest_ResponseType GetForwardingPipelineConfigRequest::COOKIE_ONLY;
const GetForwardingPipelineConfigRequest_ResponseType GetForwardingPipelineConfigRequest::P4INFO_AND_COOKIE;
const GetForwardingPipelineConfigRequest_ResponseType GetForwardingPipelineConfigRequest::DEVICE_CONFIG_AND_COOKIE;
const GetForwardingPipelineConfigRequest_ResponseType GetForwardingPipelineConfigRequest::ResponseType_MIN;
const GetForwardingPipelineConfigRequest_ResponseType GetForwardingPipelineConfigRequest::ResponseType_MAX;
const int GetForwardingPipelineConfigRequest::ResponseType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SdnPort_descriptor() {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_enum_descriptors[4];
}
bool SdnPort_IsValid(int value) {
  switch (value) {
    case -257:
    case -6:
    case -3:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void WriteRequest::InitAsDefaultInstance() {
  ::p4::v1::_WriteRequest_default_instance_._instance.get_mutable()->election_id_ = const_cast< ::p4::v1::Uint128*>(
      ::p4::v1::Uint128::internal_default_instance());
}
void WriteRequest::unsafe_arena_set_allocated_election_id(
    ::p4::v1::Uint128* election_id) {
  if (GetArenaNoVirtual() == NULL) {
    delete election_id_;
  }
  election_id_ = election_id;
  if (election_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.WriteRequest.election_id)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequest::kDeviceIdFieldNumber;
const int WriteRequest::kRoleIdFieldNumber;
const int WriteRequest::kElectionIdFieldNumber;
const int WriteRequest::kUpdatesFieldNumber;
const int WriteRequest::kAtomicityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequest::WriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_WriteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.WriteRequest)
}
WriteRequest::WriteRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  updates_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_WriteRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.WriteRequest)
}
WriteRequest::WriteRequest(const WriteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      updates_(from.updates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_election_id()) {
    election_id_ = new ::p4::v1::Uint128(*from.election_id_);
  } else {
    election_id_ = NULL;
  }
  ::memcpy(&device_id_, &from.device_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&atomicity_) -
    reinterpret_cast<char*>(&device_id_)) + sizeof(atomicity_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.WriteRequest)
}

void WriteRequest::SharedCtor() {
  ::memset(&election_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&atomicity_) -
      reinterpret_cast<char*>(&election_id_)) + sizeof(atomicity_));
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:p4.v1.WriteRequest)
  SharedDtor();
}

void WriteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete election_id_;
}

void WriteRequest::ArenaDtor(void* object) {
  WriteRequest* _this = reinterpret_cast< WriteRequest* >(object);
  (void)_this;
}
void WriteRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WriteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteRequest::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteRequest& WriteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_WriteRequest.base);
  return *internal_default_instance();
}


void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  updates_.Clear();
  if (GetArenaNoVirtual() == NULL && election_id_ != NULL) {
    delete election_id_;
  }
  election_id_ = NULL;
  ::memset(&device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&atomicity_) -
      reinterpret_cast<char*>(&device_id_)) + sizeof(atomicity_));
  _internal_metadata_.Clear();
}

bool WriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.WriteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 device_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &device_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 role_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.Uint128 election_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_election_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.Update updates = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_updates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.WriteRequest.Atomicity atomicity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_atomicity(static_cast< ::p4::v1::WriteRequest_Atomicity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.WriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.WriteRequest)
  return false;
#undef DO_
}

void WriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->device_id(), output);
  }

  // uint64 role_id = 2;
  if (this->role_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->role_id(), output);
  }

  // .p4.v1.Uint128 election_id = 3;
  if (this->has_election_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_election_id(), output);
  }

  // repeated .p4.v1.Update updates = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->updates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->updates(static_cast<int>(i)),
      output);
  }

  // .p4.v1.WriteRequest.Atomicity atomicity = 5;
  if (this->atomicity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->atomicity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.WriteRequest)
}

::google::protobuf::uint8* WriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.WriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->device_id(), target);
  }

  // uint64 role_id = 2;
  if (this->role_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->role_id(), target);
  }

  // .p4.v1.Uint128 election_id = 3;
  if (this->has_election_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_election_id(), deterministic, target);
  }

  // repeated .p4.v1.Update updates = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->updates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->updates(static_cast<int>(i)), deterministic, target);
  }

  // .p4.v1.WriteRequest.Atomicity atomicity = 5;
  if (this->atomicity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->atomicity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.WriteRequest)
  return target;
}

size_t WriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.WriteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.Update updates = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->updates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->updates(static_cast<int>(i)));
    }
  }

  // .p4.v1.Uint128 election_id = 3;
  if (this->has_election_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *election_id_);
  }

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->device_id());
  }

  // uint64 role_id = 2;
  if (this->role_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->role_id());
  }

  // .p4.v1.WriteRequest.Atomicity atomicity = 5;
  if (this->atomicity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->atomicity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.WriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.WriteRequest)
    MergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.WriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  updates_.MergeFrom(from.updates_);
  if (from.has_election_id()) {
    mutable_election_id()->::p4::v1::Uint128::MergeFrom(from.election_id());
  }
  if (from.device_id() != 0) {
    set_device_id(from.device_id());
  }
  if (from.role_id() != 0) {
    set_role_id(from.role_id());
  }
  if (from.atomicity() != 0) {
    set_atomicity(from.atomicity());
  }
}

void WriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRequest::IsInitialized() const {
  return true;
}

void WriteRequest::Swap(WriteRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WriteRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WriteRequest::UnsafeArenaSwap(WriteRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WriteRequest::InternalSwap(WriteRequest* other) {
  using std::swap;
  CastToBase(&updates_)->InternalSwap(CastToBase(&other->updates_));
  swap(election_id_, other->election_id_);
  swap(device_id_, other->device_id_);
  swap(role_id_, other->role_id_);
  swap(atomicity_, other->atomicity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteRequest::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteResponse::WriteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_WriteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.WriteResponse)
}
WriteResponse::WriteResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_WriteResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.WriteResponse)
}
WriteResponse::WriteResponse(const WriteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.v1.WriteResponse)
}

void WriteResponse::SharedCtor() {
}

WriteResponse::~WriteResponse() {
  // @@protoc_insertion_point(destructor:p4.v1.WriteResponse)
  SharedDtor();
}

void WriteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void WriteResponse::ArenaDtor(void* object) {
  WriteResponse* _this = reinterpret_cast< WriteResponse* >(object);
  (void)_this;
}
void WriteResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WriteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteResponse::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteResponse& WriteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_WriteResponse.base);
  return *internal_default_instance();
}


void WriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool WriteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.WriteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.WriteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.WriteResponse)
  return false;
#undef DO_
}

void WriteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.WriteResponse)
}

::google::protobuf::uint8* WriteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.WriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.WriteResponse)
  return target;
}

size_t WriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.WriteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.WriteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.WriteResponse)
    MergeFrom(*source);
  }
}

void WriteResponse::MergeFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.WriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WriteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteResponse::CopyFrom(const WriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.WriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteResponse::IsInitialized() const {
  return true;
}

void WriteResponse::Swap(WriteResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WriteResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WriteResponse::UnsafeArenaSwap(WriteResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WriteResponse::InternalSwap(WriteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteResponse::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequest::kDeviceIdFieldNumber;
const int ReadRequest::kEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequest::ReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ReadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ReadRequest)
}
ReadRequest::ReadRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entities_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ReadRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ReadRequest)
}
ReadRequest::ReadRequest(const ReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entities_(from.entities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_id_ = from.device_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.ReadRequest)
}

void ReadRequest::SharedCtor() {
  device_id_ = GOOGLE_ULONGLONG(0);
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:p4.v1.ReadRequest)
  SharedDtor();
}

void ReadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ReadRequest::ArenaDtor(void* object) {
  ReadRequest* _this = reinterpret_cast< ReadRequest* >(object);
  (void)_this;
}
void ReadRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRequest::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRequest& ReadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ReadRequest.base);
  return *internal_default_instance();
}


void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entities_.Clear();
  device_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ReadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 device_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &device_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.Entity entities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ReadRequest)
  return false;
#undef DO_
}

void ReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->device_id(), output);
  }

  // repeated .p4.v1.Entity entities = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->entities(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ReadRequest)
}

::google::protobuf::uint8* ReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->device_id(), target);
  }

  // repeated .p4.v1.Entity entities = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entities(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ReadRequest)
  return target;
}

size_t ReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ReadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.Entity entities = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entities(static_cast<int>(i)));
    }
  }

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->device_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ReadRequest)
    MergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entities_.MergeFrom(from.entities_);
  if (from.device_id() != 0) {
    set_device_id(from.device_id());
  }
}

void ReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRequest::IsInitialized() const {
  return true;
}

void ReadRequest::Swap(ReadRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReadRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReadRequest::UnsafeArenaSwap(ReadRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReadRequest::InternalSwap(ReadRequest* other) {
  using std::swap;
  CastToBase(&entities_)->InternalSwap(CastToBase(&other->entities_));
  swap(device_id_, other->device_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRequest::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResponse::kEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResponse::ReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ReadResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ReadResponse)
}
ReadResponse::ReadResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entities_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ReadResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ReadResponse)
}
ReadResponse::ReadResponse(const ReadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entities_(from.entities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.v1.ReadResponse)
}

void ReadResponse::SharedCtor() {
}

ReadResponse::~ReadResponse() {
  // @@protoc_insertion_point(destructor:p4.v1.ReadResponse)
  SharedDtor();
}

void ReadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ReadResponse::ArenaDtor(void* object) {
  ReadResponse* _this = reinterpret_cast< ReadResponse* >(object);
  (void)_this;
}
void ReadResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadResponse::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadResponse& ReadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ReadResponse.base);
  return *internal_default_instance();
}


void ReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entities_.Clear();
  _internal_metadata_.Clear();
}

bool ReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ReadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.v1.Entity entities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ReadResponse)
  return false;
#undef DO_
}

void ReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.Entity entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entities(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ReadResponse)
}

::google::protobuf::uint8* ReadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ReadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.Entity entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entities(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ReadResponse)
  return target;
}

size_t ReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ReadResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.Entity entities = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entities(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ReadResponse)
    MergeFrom(*source);
  }
}

void ReadResponse::MergeFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entities_.MergeFrom(from.entities_);
}

void ReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponse::CopyFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResponse::IsInitialized() const {
  return true;
}

void ReadResponse::Swap(ReadResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReadResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReadResponse::UnsafeArenaSwap(ReadResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReadResponse::InternalSwap(ReadResponse* other) {
  using std::swap;
  CastToBase(&entities_)->InternalSwap(CastToBase(&other->entities_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadResponse::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Update::InitAsDefaultInstance() {
  ::p4::v1::_Update_default_instance_._instance.get_mutable()->entity_ = const_cast< ::p4::v1::Entity*>(
      ::p4::v1::Entity::internal_default_instance());
}
void Update::unsafe_arena_set_allocated_entity(
    ::p4::v1::Entity* entity) {
  if (GetArenaNoVirtual() == NULL) {
    delete entity_;
  }
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.Update.entity)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Update::kTypeFieldNumber;
const int Update::kEntityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Update::Update()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Update.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.Update)
}
Update::Update(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Update.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.Update)
}
Update::Update(const Update& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity()) {
    entity_ = new ::p4::v1::Entity(*from.entity_);
  } else {
    entity_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.Update)
}

void Update::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(type_));
}

Update::~Update() {
  // @@protoc_insertion_point(destructor:p4.v1.Update)
  SharedDtor();
}

void Update::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete entity_;
}

void Update::ArenaDtor(void* object) {
  Update* _this = reinterpret_cast< Update* >(object);
  (void)_this;
}
void Update::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Update::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Update::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Update& Update::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Update.base);
  return *internal_default_instance();
}


void Update::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.Update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.Update)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.Update.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::p4::v1::Update_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.Entity entity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.Update)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.Update)
  return false;
#undef DO_
}

void Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.Update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.Update.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .p4.v1.Entity entity = 2;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_entity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.Update)
}

::google::protobuf::uint8* Update::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.Update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.Update.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .p4.v1.Entity entity = 2;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_entity(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.Update)
  return target;
}

size_t Update::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.Update)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.Entity entity = 2;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entity_);
  }

  // .p4.v1.Update.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Update::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.Update)
  GOOGLE_DCHECK_NE(&from, this);
  const Update* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Update>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.Update)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.Update)
    MergeFrom(*source);
  }
}

void Update::MergeFrom(const Update& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.Update)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity()) {
    mutable_entity()->::p4::v1::Entity::MergeFrom(from.entity());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Update::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Update::CopyFrom(const Update& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Update::IsInitialized() const {
  return true;
}

void Update::Swap(Update* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Update* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Update::UnsafeArenaSwap(Update* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Update::InternalSwap(Update* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Update::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Entity::InitAsDefaultInstance() {
  ::p4::v1::_Entity_default_instance_.extern_entry_ = const_cast< ::p4::v1::ExternEntry*>(
      ::p4::v1::ExternEntry::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.table_entry_ = const_cast< ::p4::v1::TableEntry*>(
      ::p4::v1::TableEntry::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.action_profile_member_ = const_cast< ::p4::v1::ActionProfileMember*>(
      ::p4::v1::ActionProfileMember::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.action_profile_group_ = const_cast< ::p4::v1::ActionProfileGroup*>(
      ::p4::v1::ActionProfileGroup::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.meter_entry_ = const_cast< ::p4::v1::MeterEntry*>(
      ::p4::v1::MeterEntry::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.direct_meter_entry_ = const_cast< ::p4::v1::DirectMeterEntry*>(
      ::p4::v1::DirectMeterEntry::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.counter_entry_ = const_cast< ::p4::v1::CounterEntry*>(
      ::p4::v1::CounterEntry::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.direct_counter_entry_ = const_cast< ::p4::v1::DirectCounterEntry*>(
      ::p4::v1::DirectCounterEntry::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.packet_replication_engine_entry_ = const_cast< ::p4::v1::PacketReplicationEngineEntry*>(
      ::p4::v1::PacketReplicationEngineEntry::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.value_set_entry_ = const_cast< ::p4::v1::ValueSetEntry*>(
      ::p4::v1::ValueSetEntry::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.register_entry_ = const_cast< ::p4::v1::RegisterEntry*>(
      ::p4::v1::RegisterEntry::internal_default_instance());
  ::p4::v1::_Entity_default_instance_.digest_entry_ = const_cast< ::p4::v1::DigestEntry*>(
      ::p4::v1::DigestEntry::internal_default_instance());
}
void Entity::set_allocated_extern_entry(::p4::v1::ExternEntry* extern_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (extern_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(extern_entry);
    if (message_arena != submessage_arena) {
      extern_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extern_entry, submessage_arena);
    }
    set_has_extern_entry();
    entity_.extern_entry_ = extern_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.extern_entry)
}
void Entity::set_allocated_table_entry(::p4::v1::TableEntry* table_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (table_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(table_entry);
    if (message_arena != submessage_arena) {
      table_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_entry, submessage_arena);
    }
    set_has_table_entry();
    entity_.table_entry_ = table_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.table_entry)
}
void Entity::set_allocated_action_profile_member(::p4::v1::ActionProfileMember* action_profile_member) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (action_profile_member) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(action_profile_member);
    if (message_arena != submessage_arena) {
      action_profile_member = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_profile_member, submessage_arena);
    }
    set_has_action_profile_member();
    entity_.action_profile_member_ = action_profile_member;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.action_profile_member)
}
void Entity::set_allocated_action_profile_group(::p4::v1::ActionProfileGroup* action_profile_group) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (action_profile_group) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(action_profile_group);
    if (message_arena != submessage_arena) {
      action_profile_group = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_profile_group, submessage_arena);
    }
    set_has_action_profile_group();
    entity_.action_profile_group_ = action_profile_group;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.action_profile_group)
}
void Entity::set_allocated_meter_entry(::p4::v1::MeterEntry* meter_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (meter_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(meter_entry);
    if (message_arena != submessage_arena) {
      meter_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meter_entry, submessage_arena);
    }
    set_has_meter_entry();
    entity_.meter_entry_ = meter_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.meter_entry)
}
void Entity::set_allocated_direct_meter_entry(::p4::v1::DirectMeterEntry* direct_meter_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (direct_meter_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(direct_meter_entry);
    if (message_arena != submessage_arena) {
      direct_meter_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, direct_meter_entry, submessage_arena);
    }
    set_has_direct_meter_entry();
    entity_.direct_meter_entry_ = direct_meter_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.direct_meter_entry)
}
void Entity::set_allocated_counter_entry(::p4::v1::CounterEntry* counter_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (counter_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(counter_entry);
    if (message_arena != submessage_arena) {
      counter_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, counter_entry, submessage_arena);
    }
    set_has_counter_entry();
    entity_.counter_entry_ = counter_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.counter_entry)
}
void Entity::set_allocated_direct_counter_entry(::p4::v1::DirectCounterEntry* direct_counter_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (direct_counter_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(direct_counter_entry);
    if (message_arena != submessage_arena) {
      direct_counter_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, direct_counter_entry, submessage_arena);
    }
    set_has_direct_counter_entry();
    entity_.direct_counter_entry_ = direct_counter_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.direct_counter_entry)
}
void Entity::set_allocated_packet_replication_engine_entry(::p4::v1::PacketReplicationEngineEntry* packet_replication_engine_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (packet_replication_engine_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(packet_replication_engine_entry);
    if (message_arena != submessage_arena) {
      packet_replication_engine_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packet_replication_engine_entry, submessage_arena);
    }
    set_has_packet_replication_engine_entry();
    entity_.packet_replication_engine_entry_ = packet_replication_engine_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.packet_replication_engine_entry)
}
void Entity::set_allocated_value_set_entry(::p4::v1::ValueSetEntry* value_set_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (value_set_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(value_set_entry);
    if (message_arena != submessage_arena) {
      value_set_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_set_entry, submessage_arena);
    }
    set_has_value_set_entry();
    entity_.value_set_entry_ = value_set_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.value_set_entry)
}
void Entity::set_allocated_register_entry(::p4::v1::RegisterEntry* register_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (register_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(register_entry);
    if (message_arena != submessage_arena) {
      register_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, register_entry, submessage_arena);
    }
    set_has_register_entry();
    entity_.register_entry_ = register_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.register_entry)
}
void Entity::set_allocated_digest_entry(::p4::v1::DigestEntry* digest_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_entity();
  if (digest_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(digest_entry);
    if (message_arena != submessage_arena) {
      digest_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, digest_entry, submessage_arena);
    }
    set_has_digest_entry();
    entity_.digest_entry_ = digest_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.digest_entry)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entity::kExternEntryFieldNumber;
const int Entity::kTableEntryFieldNumber;
const int Entity::kActionProfileMemberFieldNumber;
const int Entity::kActionProfileGroupFieldNumber;
const int Entity::kMeterEntryFieldNumber;
const int Entity::kDirectMeterEntryFieldNumber;
const int Entity::kCounterEntryFieldNumber;
const int Entity::kDirectCounterEntryFieldNumber;
const int Entity::kPacketReplicationEngineEntryFieldNumber;
const int Entity::kValueSetEntryFieldNumber;
const int Entity::kRegisterEntryFieldNumber;
const int Entity::kDigestEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entity::Entity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Entity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.Entity)
}
Entity::Entity(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Entity.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.Entity)
}
Entity::Entity(const Entity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_entity();
  switch (from.entity_case()) {
    case kExternEntry: {
      mutable_extern_entry()->::p4::v1::ExternEntry::MergeFrom(from.extern_entry());
      break;
    }
    case kTableEntry: {
      mutable_table_entry()->::p4::v1::TableEntry::MergeFrom(from.table_entry());
      break;
    }
    case kActionProfileMember: {
      mutable_action_profile_member()->::p4::v1::ActionProfileMember::MergeFrom(from.action_profile_member());
      break;
    }
    case kActionProfileGroup: {
      mutable_action_profile_group()->::p4::v1::ActionProfileGroup::MergeFrom(from.action_profile_group());
      break;
    }
    case kMeterEntry: {
      mutable_meter_entry()->::p4::v1::MeterEntry::MergeFrom(from.meter_entry());
      break;
    }
    case kDirectMeterEntry: {
      mutable_direct_meter_entry()->::p4::v1::DirectMeterEntry::MergeFrom(from.direct_meter_entry());
      break;
    }
    case kCounterEntry: {
      mutable_counter_entry()->::p4::v1::CounterEntry::MergeFrom(from.counter_entry());
      break;
    }
    case kDirectCounterEntry: {
      mutable_direct_counter_entry()->::p4::v1::DirectCounterEntry::MergeFrom(from.direct_counter_entry());
      break;
    }
    case kPacketReplicationEngineEntry: {
      mutable_packet_replication_engine_entry()->::p4::v1::PacketReplicationEngineEntry::MergeFrom(from.packet_replication_engine_entry());
      break;
    }
    case kValueSetEntry: {
      mutable_value_set_entry()->::p4::v1::ValueSetEntry::MergeFrom(from.value_set_entry());
      break;
    }
    case kRegisterEntry: {
      mutable_register_entry()->::p4::v1::RegisterEntry::MergeFrom(from.register_entry());
      break;
    }
    case kDigestEntry: {
      mutable_digest_entry()->::p4::v1::DigestEntry::MergeFrom(from.digest_entry());
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.Entity)
}

void Entity::SharedCtor() {
  clear_has_entity();
}

Entity::~Entity() {
  // @@protoc_insertion_point(destructor:p4.v1.Entity)
  SharedDtor();
}

void Entity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_entity()) {
    clear_entity();
  }
}

void Entity::ArenaDtor(void* object) {
  Entity* _this = reinterpret_cast< Entity* >(object);
  (void)_this;
}
void Entity::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Entity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Entity::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Entity& Entity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Entity.base);
  return *internal_default_instance();
}


void Entity::clear_entity() {
// @@protoc_insertion_point(one_of_clear_start:p4.v1.Entity)
  switch (entity_case()) {
    case kExternEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.extern_entry_;
      }
      break;
    }
    case kTableEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.table_entry_;
      }
      break;
    }
    case kActionProfileMember: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.action_profile_member_;
      }
      break;
    }
    case kActionProfileGroup: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.action_profile_group_;
      }
      break;
    }
    case kMeterEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.meter_entry_;
      }
      break;
    }
    case kDirectMeterEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.direct_meter_entry_;
      }
      break;
    }
    case kCounterEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.counter_entry_;
      }
      break;
    }
    case kDirectCounterEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.direct_counter_entry_;
      }
      break;
    }
    case kPacketReplicationEngineEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.packet_replication_engine_entry_;
      }
      break;
    }
    case kValueSetEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.value_set_entry_;
      }
      break;
    }
    case kRegisterEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.register_entry_;
      }
      break;
    }
    case kDigestEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete entity_.digest_entry_;
      }
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTITY_NOT_SET;
}


void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_entity();
  _internal_metadata_.Clear();
}

bool Entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.Entity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.ExternEntry extern_entry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extern_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.TableEntry table_entry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.ActionProfileMember action_profile_member = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_profile_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.ActionProfileGroup action_profile_group = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_profile_group()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.MeterEntry meter_entry = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meter_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.DirectMeterEntry direct_meter_entry = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direct_meter_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.CounterEntry counter_entry = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_counter_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.DirectCounterEntry direct_counter_entry = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direct_counter_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.PacketReplicationEngineEntry packet_replication_engine_entry = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packet_replication_engine_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.ValueSetEntry value_set_entry = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_set_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.RegisterEntry register_entry = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_register_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.DigestEntry digest_entry = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digest_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.Entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.Entity)
  return false;
#undef DO_
}

void Entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.ExternEntry extern_entry = 1;
  if (has_extern_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_extern_entry(), output);
  }

  // .p4.v1.TableEntry table_entry = 2;
  if (has_table_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_table_entry(), output);
  }

  // .p4.v1.ActionProfileMember action_profile_member = 3;
  if (has_action_profile_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_action_profile_member(), output);
  }

  // .p4.v1.ActionProfileGroup action_profile_group = 4;
  if (has_action_profile_group()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_action_profile_group(), output);
  }

  // .p4.v1.MeterEntry meter_entry = 5;
  if (has_meter_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_meter_entry(), output);
  }

  // .p4.v1.DirectMeterEntry direct_meter_entry = 6;
  if (has_direct_meter_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_direct_meter_entry(), output);
  }

  // .p4.v1.CounterEntry counter_entry = 7;
  if (has_counter_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_counter_entry(), output);
  }

  // .p4.v1.DirectCounterEntry direct_counter_entry = 8;
  if (has_direct_counter_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_direct_counter_entry(), output);
  }

  // .p4.v1.PacketReplicationEngineEntry packet_replication_engine_entry = 9;
  if (has_packet_replication_engine_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_packet_replication_engine_entry(), output);
  }

  // .p4.v1.ValueSetEntry value_set_entry = 10;
  if (has_value_set_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_value_set_entry(), output);
  }

  // .p4.v1.RegisterEntry register_entry = 11;
  if (has_register_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_register_entry(), output);
  }

  // .p4.v1.DigestEntry digest_entry = 12;
  if (has_digest_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_digest_entry(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.Entity)
}

::google::protobuf::uint8* Entity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.Entity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.ExternEntry extern_entry = 1;
  if (has_extern_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_extern_entry(), deterministic, target);
  }

  // .p4.v1.TableEntry table_entry = 2;
  if (has_table_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_table_entry(), deterministic, target);
  }

  // .p4.v1.ActionProfileMember action_profile_member = 3;
  if (has_action_profile_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_action_profile_member(), deterministic, target);
  }

  // .p4.v1.ActionProfileGroup action_profile_group = 4;
  if (has_action_profile_group()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_action_profile_group(), deterministic, target);
  }

  // .p4.v1.MeterEntry meter_entry = 5;
  if (has_meter_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_meter_entry(), deterministic, target);
  }

  // .p4.v1.DirectMeterEntry direct_meter_entry = 6;
  if (has_direct_meter_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_direct_meter_entry(), deterministic, target);
  }

  // .p4.v1.CounterEntry counter_entry = 7;
  if (has_counter_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_counter_entry(), deterministic, target);
  }

  // .p4.v1.DirectCounterEntry direct_counter_entry = 8;
  if (has_direct_counter_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_direct_counter_entry(), deterministic, target);
  }

  // .p4.v1.PacketReplicationEngineEntry packet_replication_engine_entry = 9;
  if (has_packet_replication_engine_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_packet_replication_engine_entry(), deterministic, target);
  }

  // .p4.v1.ValueSetEntry value_set_entry = 10;
  if (has_value_set_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_value_set_entry(), deterministic, target);
  }

  // .p4.v1.RegisterEntry register_entry = 11;
  if (has_register_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_register_entry(), deterministic, target);
  }

  // .p4.v1.DigestEntry digest_entry = 12;
  if (has_digest_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_digest_entry(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.Entity)
  return target;
}

size_t Entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.Entity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (entity_case()) {
    // .p4.v1.ExternEntry extern_entry = 1;
    case kExternEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.extern_entry_);
      break;
    }
    // .p4.v1.TableEntry table_entry = 2;
    case kTableEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.table_entry_);
      break;
    }
    // .p4.v1.ActionProfileMember action_profile_member = 3;
    case kActionProfileMember: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.action_profile_member_);
      break;
    }
    // .p4.v1.ActionProfileGroup action_profile_group = 4;
    case kActionProfileGroup: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.action_profile_group_);
      break;
    }
    // .p4.v1.MeterEntry meter_entry = 5;
    case kMeterEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.meter_entry_);
      break;
    }
    // .p4.v1.DirectMeterEntry direct_meter_entry = 6;
    case kDirectMeterEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.direct_meter_entry_);
      break;
    }
    // .p4.v1.CounterEntry counter_entry = 7;
    case kCounterEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.counter_entry_);
      break;
    }
    // .p4.v1.DirectCounterEntry direct_counter_entry = 8;
    case kDirectCounterEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.direct_counter_entry_);
      break;
    }
    // .p4.v1.PacketReplicationEngineEntry packet_replication_engine_entry = 9;
    case kPacketReplicationEngineEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.packet_replication_engine_entry_);
      break;
    }
    // .p4.v1.ValueSetEntry value_set_entry = 10;
    case kValueSetEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.value_set_entry_);
      break;
    }
    // .p4.v1.RegisterEntry register_entry = 11;
    case kRegisterEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.register_entry_);
      break;
    }
    // .p4.v1.DigestEntry digest_entry = 12;
    case kDigestEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *entity_.digest_entry_);
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Entity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  const Entity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.Entity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.Entity)
    MergeFrom(*source);
  }
}

void Entity::MergeFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.Entity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.entity_case()) {
    case kExternEntry: {
      mutable_extern_entry()->::p4::v1::ExternEntry::MergeFrom(from.extern_entry());
      break;
    }
    case kTableEntry: {
      mutable_table_entry()->::p4::v1::TableEntry::MergeFrom(from.table_entry());
      break;
    }
    case kActionProfileMember: {
      mutable_action_profile_member()->::p4::v1::ActionProfileMember::MergeFrom(from.action_profile_member());
      break;
    }
    case kActionProfileGroup: {
      mutable_action_profile_group()->::p4::v1::ActionProfileGroup::MergeFrom(from.action_profile_group());
      break;
    }
    case kMeterEntry: {
      mutable_meter_entry()->::p4::v1::MeterEntry::MergeFrom(from.meter_entry());
      break;
    }
    case kDirectMeterEntry: {
      mutable_direct_meter_entry()->::p4::v1::DirectMeterEntry::MergeFrom(from.direct_meter_entry());
      break;
    }
    case kCounterEntry: {
      mutable_counter_entry()->::p4::v1::CounterEntry::MergeFrom(from.counter_entry());
      break;
    }
    case kDirectCounterEntry: {
      mutable_direct_counter_entry()->::p4::v1::DirectCounterEntry::MergeFrom(from.direct_counter_entry());
      break;
    }
    case kPacketReplicationEngineEntry: {
      mutable_packet_replication_engine_entry()->::p4::v1::PacketReplicationEngineEntry::MergeFrom(from.packet_replication_engine_entry());
      break;
    }
    case kValueSetEntry: {
      mutable_value_set_entry()->::p4::v1::ValueSetEntry::MergeFrom(from.value_set_entry());
      break;
    }
    case kRegisterEntry: {
      mutable_register_entry()->::p4::v1::RegisterEntry::MergeFrom(from.register_entry());
      break;
    }
    case kDigestEntry: {
      mutable_digest_entry()->::p4::v1::DigestEntry::MergeFrom(from.digest_entry());
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
}

void Entity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entity::IsInitialized() const {
  return true;
}

void Entity::Swap(Entity* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Entity* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Entity::UnsafeArenaSwap(Entity* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Entity::InternalSwap(Entity* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExternEntry::InitAsDefaultInstance() {
  ::p4::v1::_ExternEntry_default_instance_._instance.get_mutable()->entry_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ExternEntry::unsafe_arena_set_allocated_entry(
    ::google::protobuf::Any* entry) {
  if (GetArenaNoVirtual() == NULL) {
    delete entry_;
  }
  entry_ = entry;
  if (entry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.ExternEntry.entry)
}
void ExternEntry::clear_entry() {
  if (GetArenaNoVirtual() == NULL && entry_ != NULL) {
    delete entry_;
  }
  entry_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternEntry::kExternTypeIdFieldNumber;
const int ExternEntry::kExternIdFieldNumber;
const int ExternEntry::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternEntry::ExternEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ExternEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ExternEntry)
}
ExternEntry::ExternEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ExternEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ExternEntry)
}
ExternEntry::ExternEntry(const ExternEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entry()) {
    entry_ = new ::google::protobuf::Any(*from.entry_);
  } else {
    entry_ = NULL;
  }
  ::memcpy(&extern_type_id_, &from.extern_type_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&extern_id_) -
    reinterpret_cast<char*>(&extern_type_id_)) + sizeof(extern_id_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.ExternEntry)
}

void ExternEntry::SharedCtor() {
  ::memset(&entry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extern_id_) -
      reinterpret_cast<char*>(&entry_)) + sizeof(extern_id_));
}

ExternEntry::~ExternEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.ExternEntry)
  SharedDtor();
}

void ExternEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete entry_;
}

void ExternEntry::ArenaDtor(void* object) {
  ExternEntry* _this = reinterpret_cast< ExternEntry* >(object);
  (void)_this;
}
void ExternEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ExternEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExternEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExternEntry& ExternEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ExternEntry.base);
  return *internal_default_instance();
}


void ExternEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ExternEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entry_ != NULL) {
    delete entry_;
  }
  entry_ = NULL;
  ::memset(&extern_type_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extern_id_) -
      reinterpret_cast<char*>(&extern_type_id_)) + sizeof(extern_id_));
  _internal_metadata_.Clear();
}

bool ExternEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ExternEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 extern_type_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extern_type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 extern_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extern_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any entry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ExternEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ExternEntry)
  return false;
#undef DO_
}

void ExternEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ExternEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 extern_type_id = 1;
  if (this->extern_type_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->extern_type_id(), output);
  }

  // uint32 extern_id = 2;
  if (this->extern_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->extern_id(), output);
  }

  // .google.protobuf.Any entry = 3;
  if (this->has_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_entry(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ExternEntry)
}

::google::protobuf::uint8* ExternEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ExternEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 extern_type_id = 1;
  if (this->extern_type_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->extern_type_id(), target);
  }

  // uint32 extern_id = 2;
  if (this->extern_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->extern_id(), target);
  }

  // .google.protobuf.Any entry = 3;
  if (this->has_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_entry(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ExternEntry)
  return target;
}

size_t ExternEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ExternEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any entry = 3;
  if (this->has_entry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entry_);
  }

  // uint32 extern_type_id = 1;
  if (this->extern_type_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->extern_type_id());
  }

  // uint32 extern_id = 2;
  if (this->extern_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->extern_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExternEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ExternEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ExternEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ExternEntry)
    MergeFrom(*source);
  }
}

void ExternEntry::MergeFrom(const ExternEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ExternEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entry()) {
    mutable_entry()->::google::protobuf::Any::MergeFrom(from.entry());
  }
  if (from.extern_type_id() != 0) {
    set_extern_type_id(from.extern_type_id());
  }
  if (from.extern_id() != 0) {
    set_extern_id(from.extern_id());
  }
}

void ExternEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ExternEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternEntry::CopyFrom(const ExternEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ExternEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternEntry::IsInitialized() const {
  return true;
}

void ExternEntry::Swap(ExternEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ExternEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ExternEntry::UnsafeArenaSwap(ExternEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ExternEntry::InternalSwap(ExternEntry* other) {
  using std::swap;
  swap(entry_, other->entry_);
  swap(extern_type_id_, other->extern_type_id_);
  swap(extern_id_, other->extern_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExternEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableEntry_IdleTimeout::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableEntry_IdleTimeout::kElapsedNsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableEntry_IdleTimeout::TableEntry_IdleTimeout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry_IdleTimeout.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.TableEntry.IdleTimeout)
}
TableEntry_IdleTimeout::TableEntry_IdleTimeout(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry_IdleTimeout.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.TableEntry.IdleTimeout)
}
TableEntry_IdleTimeout::TableEntry_IdleTimeout(const TableEntry_IdleTimeout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  elapsed_ns_ = from.elapsed_ns_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.TableEntry.IdleTimeout)
}

void TableEntry_IdleTimeout::SharedCtor() {
  elapsed_ns_ = GOOGLE_LONGLONG(0);
}

TableEntry_IdleTimeout::~TableEntry_IdleTimeout() {
  // @@protoc_insertion_point(destructor:p4.v1.TableEntry.IdleTimeout)
  SharedDtor();
}

void TableEntry_IdleTimeout::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TableEntry_IdleTimeout::ArenaDtor(void* object) {
  TableEntry_IdleTimeout* _this = reinterpret_cast< TableEntry_IdleTimeout* >(object);
  (void)_this;
}
void TableEntry_IdleTimeout::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TableEntry_IdleTimeout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableEntry_IdleTimeout::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableEntry_IdleTimeout& TableEntry_IdleTimeout::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry_IdleTimeout.base);
  return *internal_default_instance();
}


void TableEntry_IdleTimeout::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.TableEntry.IdleTimeout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elapsed_ns_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TableEntry_IdleTimeout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.TableEntry.IdleTimeout)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 elapsed_ns = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &elapsed_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.TableEntry.IdleTimeout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.TableEntry.IdleTimeout)
  return false;
#undef DO_
}

void TableEntry_IdleTimeout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.TableEntry.IdleTimeout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 elapsed_ns = 1;
  if (this->elapsed_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->elapsed_ns(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.TableEntry.IdleTimeout)
}

::google::protobuf::uint8* TableEntry_IdleTimeout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.TableEntry.IdleTimeout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 elapsed_ns = 1;
  if (this->elapsed_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->elapsed_ns(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.TableEntry.IdleTimeout)
  return target;
}

size_t TableEntry_IdleTimeout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.TableEntry.IdleTimeout)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 elapsed_ns = 1;
  if (this->elapsed_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->elapsed_ns());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableEntry_IdleTimeout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.TableEntry.IdleTimeout)
  GOOGLE_DCHECK_NE(&from, this);
  const TableEntry_IdleTimeout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableEntry_IdleTimeout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.TableEntry.IdleTimeout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.TableEntry.IdleTimeout)
    MergeFrom(*source);
  }
}

void TableEntry_IdleTimeout::MergeFrom(const TableEntry_IdleTimeout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.TableEntry.IdleTimeout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.elapsed_ns() != 0) {
    set_elapsed_ns(from.elapsed_ns());
  }
}

void TableEntry_IdleTimeout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.TableEntry.IdleTimeout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableEntry_IdleTimeout::CopyFrom(const TableEntry_IdleTimeout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.TableEntry.IdleTimeout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableEntry_IdleTimeout::IsInitialized() const {
  return true;
}

void TableEntry_IdleTimeout::Swap(TableEntry_IdleTimeout* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TableEntry_IdleTimeout* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TableEntry_IdleTimeout::UnsafeArenaSwap(TableEntry_IdleTimeout* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TableEntry_IdleTimeout::InternalSwap(TableEntry_IdleTimeout* other) {
  using std::swap;
  swap(elapsed_ns_, other->elapsed_ns_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableEntry_IdleTimeout::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableEntry::InitAsDefaultInstance() {
  ::p4::v1::_TableEntry_default_instance_._instance.get_mutable()->action_ = const_cast< ::p4::v1::TableAction*>(
      ::p4::v1::TableAction::internal_default_instance());
  ::p4::v1::_TableEntry_default_instance_._instance.get_mutable()->meter_config_ = const_cast< ::p4::v1::MeterConfig*>(
      ::p4::v1::MeterConfig::internal_default_instance());
  ::p4::v1::_TableEntry_default_instance_._instance.get_mutable()->counter_data_ = const_cast< ::p4::v1::CounterData*>(
      ::p4::v1::CounterData::internal_default_instance());
  ::p4::v1::_TableEntry_default_instance_._instance.get_mutable()->time_since_last_hit_ = const_cast< ::p4::v1::TableEntry_IdleTimeout*>(
      ::p4::v1::TableEntry_IdleTimeout::internal_default_instance());
}
void TableEntry::unsafe_arena_set_allocated_action(
    ::p4::v1::TableAction* action) {
  if (GetArenaNoVirtual() == NULL) {
    delete action_;
  }
  action_ = action;
  if (action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.TableEntry.action)
}
void TableEntry::unsafe_arena_set_allocated_meter_config(
    ::p4::v1::MeterConfig* meter_config) {
  if (GetArenaNoVirtual() == NULL) {
    delete meter_config_;
  }
  meter_config_ = meter_config;
  if (meter_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.TableEntry.meter_config)
}
void TableEntry::unsafe_arena_set_allocated_counter_data(
    ::p4::v1::CounterData* counter_data) {
  if (GetArenaNoVirtual() == NULL) {
    delete counter_data_;
  }
  counter_data_ = counter_data;
  if (counter_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.TableEntry.counter_data)
}
void TableEntry::unsafe_arena_set_allocated_time_since_last_hit(
    ::p4::v1::TableEntry_IdleTimeout* time_since_last_hit) {
  if (GetArenaNoVirtual() == NULL) {
    delete time_since_last_hit_;
  }
  time_since_last_hit_ = time_since_last_hit;
  if (time_since_last_hit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.TableEntry.time_since_last_hit)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableEntry::kTableIdFieldNumber;
const int TableEntry::kMatchFieldNumber;
const int TableEntry::kActionFieldNumber;
const int TableEntry::kPriorityFieldNumber;
const int TableEntry::kControllerMetadataFieldNumber;
const int TableEntry::kMeterConfigFieldNumber;
const int TableEntry::kCounterDataFieldNumber;
const int TableEntry::kIsDefaultActionFieldNumber;
const int TableEntry::kIdleTimeoutNsFieldNumber;
const int TableEntry::kTimeSinceLastHitFieldNumber;
const int TableEntry::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableEntry::TableEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.TableEntry)
}
TableEntry::TableEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  match_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.TableEntry)
}
TableEntry::TableEntry(const TableEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      match_(from.match_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.metadata().size() > 0) {
    metadata_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata(),
      GetArenaNoVirtual());
  }
  if (from.has_action()) {
    action_ = new ::p4::v1::TableAction(*from.action_);
  } else {
    action_ = NULL;
  }
  if (from.has_meter_config()) {
    meter_config_ = new ::p4::v1::MeterConfig(*from.meter_config_);
  } else {
    meter_config_ = NULL;
  }
  if (from.has_counter_data()) {
    counter_data_ = new ::p4::v1::CounterData(*from.counter_data_);
  } else {
    counter_data_ = NULL;
  }
  if (from.has_time_since_last_hit()) {
    time_since_last_hit_ = new ::p4::v1::TableEntry_IdleTimeout(*from.time_since_last_hit_);
  } else {
    time_since_last_hit_ = NULL;
  }
  ::memcpy(&table_id_, &from.table_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_default_action_) -
    reinterpret_cast<char*>(&table_id_)) + sizeof(is_default_action_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.TableEntry)
}

void TableEntry::SharedCtor() {
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_default_action_) -
      reinterpret_cast<char*>(&action_)) + sizeof(is_default_action_));
}

TableEntry::~TableEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.TableEntry)
  SharedDtor();
}

void TableEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete action_;
  if (this != internal_default_instance()) delete meter_config_;
  if (this != internal_default_instance()) delete counter_data_;
  if (this != internal_default_instance()) delete time_since_last_hit_;
}

void TableEntry::ArenaDtor(void* object) {
  TableEntry* _this = reinterpret_cast< TableEntry* >(object);
  (void)_this;
}
void TableEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TableEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableEntry& TableEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableEntry.base);
  return *internal_default_instance();
}


void TableEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.TableEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_.Clear();
  metadata_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && action_ != NULL) {
    delete action_;
  }
  action_ = NULL;
  if (GetArenaNoVirtual() == NULL && meter_config_ != NULL) {
    delete meter_config_;
  }
  meter_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && counter_data_ != NULL) {
    delete counter_data_;
  }
  counter_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_since_last_hit_ != NULL) {
    delete time_since_last_hit_;
  }
  time_since_last_hit_ = NULL;
  ::memset(&table_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_default_action_) -
      reinterpret_cast<char*>(&table_id_)) + sizeof(is_default_action_));
  _internal_metadata_.Clear();
}

bool TableEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.TableEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 table_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.FieldMatch match = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_match()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.TableAction action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 priority = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 controller_metadata = 5 [deprecated = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &controller_metadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.MeterConfig meter_config = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meter_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.CounterData counter_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_counter_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_default_action = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_default_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 idle_timeout_ns = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &idle_timeout_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.TableEntry.IdleTimeout time_since_last_hit = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_since_last_hit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes metadata = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.TableEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.TableEntry)
  return false;
#undef DO_
}

void TableEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.TableEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 table_id = 1;
  if (this->table_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->table_id(), output);
  }

  // repeated .p4.v1.FieldMatch match = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->match_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->match(static_cast<int>(i)),
      output);
  }

  // .p4.v1.TableAction action = 3;
  if (this->has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_action(), output);
  }

  // int32 priority = 4;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->priority(), output);
  }

  // uint64 controller_metadata = 5 [deprecated = true];
  if (this->controller_metadata() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->controller_metadata(), output);
  }

  // .p4.v1.MeterConfig meter_config = 6;
  if (this->has_meter_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_meter_config(), output);
  }

  // .p4.v1.CounterData counter_data = 7;
  if (this->has_counter_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_counter_data(), output);
  }

  // bool is_default_action = 8;
  if (this->is_default_action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_default_action(), output);
  }

  // int64 idle_timeout_ns = 9;
  if (this->idle_timeout_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->idle_timeout_ns(), output);
  }

  // .p4.v1.TableEntry.IdleTimeout time_since_last_hit = 10;
  if (this->has_time_since_last_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_time_since_last_hit(), output);
  }

  // bytes metadata = 11;
  if (this->metadata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->metadata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.TableEntry)
}

::google::protobuf::uint8* TableEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.TableEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 table_id = 1;
  if (this->table_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->table_id(), target);
  }

  // repeated .p4.v1.FieldMatch match = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->match_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->match(static_cast<int>(i)), deterministic, target);
  }

  // .p4.v1.TableAction action = 3;
  if (this->has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_action(), deterministic, target);
  }

  // int32 priority = 4;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->priority(), target);
  }

  // uint64 controller_metadata = 5 [deprecated = true];
  if (this->controller_metadata() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->controller_metadata(), target);
  }

  // .p4.v1.MeterConfig meter_config = 6;
  if (this->has_meter_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_meter_config(), deterministic, target);
  }

  // .p4.v1.CounterData counter_data = 7;
  if (this->has_counter_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_counter_data(), deterministic, target);
  }

  // bool is_default_action = 8;
  if (this->is_default_action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_default_action(), target);
  }

  // int64 idle_timeout_ns = 9;
  if (this->idle_timeout_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->idle_timeout_ns(), target);
  }

  // .p4.v1.TableEntry.IdleTimeout time_since_last_hit = 10;
  if (this->has_time_since_last_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_time_since_last_hit(), deterministic, target);
  }

  // bytes metadata = 11;
  if (this->metadata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->metadata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.TableEntry)
  return target;
}

size_t TableEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.TableEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.FieldMatch match = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->match_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->match(static_cast<int>(i)));
    }
  }

  // bytes metadata = 11;
  if (this->metadata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->metadata());
  }

  // .p4.v1.TableAction action = 3;
  if (this->has_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_);
  }

  // .p4.v1.MeterConfig meter_config = 6;
  if (this->has_meter_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meter_config_);
  }

  // .p4.v1.CounterData counter_data = 7;
  if (this->has_counter_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *counter_data_);
  }

  // .p4.v1.TableEntry.IdleTimeout time_since_last_hit = 10;
  if (this->has_time_since_last_hit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_since_last_hit_);
  }

  // uint32 table_id = 1;
  if (this->table_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->table_id());
  }

  // int32 priority = 4;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->priority());
  }

  // uint64 controller_metadata = 5 [deprecated = true];
  if (this->controller_metadata() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->controller_metadata());
  }

  // int64 idle_timeout_ns = 9;
  if (this->idle_timeout_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->idle_timeout_ns());
  }

  // bool is_default_action = 8;
  if (this->is_default_action() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.TableEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const TableEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.TableEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.TableEntry)
    MergeFrom(*source);
  }
}

void TableEntry::MergeFrom(const TableEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.TableEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  match_.MergeFrom(from.match_);
  if (from.metadata().size() > 0) {
    set_metadata(from.metadata());
  }
  if (from.has_action()) {
    mutable_action()->::p4::v1::TableAction::MergeFrom(from.action());
  }
  if (from.has_meter_config()) {
    mutable_meter_config()->::p4::v1::MeterConfig::MergeFrom(from.meter_config());
  }
  if (from.has_counter_data()) {
    mutable_counter_data()->::p4::v1::CounterData::MergeFrom(from.counter_data());
  }
  if (from.has_time_since_last_hit()) {
    mutable_time_since_last_hit()->::p4::v1::TableEntry_IdleTimeout::MergeFrom(from.time_since_last_hit());
  }
  if (from.table_id() != 0) {
    set_table_id(from.table_id());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.controller_metadata() != 0) {
    set_controller_metadata(from.controller_metadata());
  }
  if (from.idle_timeout_ns() != 0) {
    set_idle_timeout_ns(from.idle_timeout_ns());
  }
  if (from.is_default_action() != 0) {
    set_is_default_action(from.is_default_action());
  }
}

void TableEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.TableEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableEntry::CopyFrom(const TableEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.TableEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableEntry::IsInitialized() const {
  return true;
}

void TableEntry::Swap(TableEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TableEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TableEntry::UnsafeArenaSwap(TableEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TableEntry::InternalSwap(TableEntry* other) {
  using std::swap;
  CastToBase(&match_)->InternalSwap(CastToBase(&other->match_));
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(action_, other->action_);
  swap(meter_config_, other->meter_config_);
  swap(counter_data_, other->counter_data_);
  swap(time_since_last_hit_, other->time_since_last_hit_);
  swap(table_id_, other->table_id_);
  swap(priority_, other->priority_);
  swap(controller_metadata_, other->controller_metadata_);
  swap(idle_timeout_ns_, other->idle_timeout_ns_);
  swap(is_default_action_, other->is_default_action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FieldMatch_Exact::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldMatch_Exact::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldMatch_Exact::FieldMatch_Exact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Exact.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.FieldMatch.Exact)
}
FieldMatch_Exact::FieldMatch_Exact(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Exact.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.FieldMatch.Exact)
}
FieldMatch_Exact::FieldMatch_Exact(const FieldMatch_Exact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.FieldMatch.Exact)
}

void FieldMatch_Exact::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FieldMatch_Exact::~FieldMatch_Exact() {
  // @@protoc_insertion_point(destructor:p4.v1.FieldMatch.Exact)
  SharedDtor();
}

void FieldMatch_Exact::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FieldMatch_Exact::ArenaDtor(void* object) {
  FieldMatch_Exact* _this = reinterpret_cast< FieldMatch_Exact* >(object);
  (void)_this;
}
void FieldMatch_Exact::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FieldMatch_Exact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldMatch_Exact::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldMatch_Exact& FieldMatch_Exact::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Exact.base);
  return *internal_default_instance();
}


void FieldMatch_Exact::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.FieldMatch.Exact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool FieldMatch_Exact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.FieldMatch.Exact)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.FieldMatch.Exact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.FieldMatch.Exact)
  return false;
#undef DO_
}

void FieldMatch_Exact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.FieldMatch.Exact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.FieldMatch.Exact)
}

::google::protobuf::uint8* FieldMatch_Exact::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.FieldMatch.Exact)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.FieldMatch.Exact)
  return target;
}

size_t FieldMatch_Exact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.FieldMatch.Exact)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldMatch_Exact::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.FieldMatch.Exact)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldMatch_Exact* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldMatch_Exact>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.FieldMatch.Exact)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.FieldMatch.Exact)
    MergeFrom(*source);
  }
}

void FieldMatch_Exact::MergeFrom(const FieldMatch_Exact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.FieldMatch.Exact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    set_value(from.value());
  }
}

void FieldMatch_Exact::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.FieldMatch.Exact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldMatch_Exact::CopyFrom(const FieldMatch_Exact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.FieldMatch.Exact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldMatch_Exact::IsInitialized() const {
  return true;
}

void FieldMatch_Exact::Swap(FieldMatch_Exact* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FieldMatch_Exact* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FieldMatch_Exact::UnsafeArenaSwap(FieldMatch_Exact* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FieldMatch_Exact::InternalSwap(FieldMatch_Exact* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldMatch_Exact::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FieldMatch_Ternary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldMatch_Ternary::kValueFieldNumber;
const int FieldMatch_Ternary::kMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldMatch_Ternary::FieldMatch_Ternary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Ternary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.FieldMatch.Ternary)
}
FieldMatch_Ternary::FieldMatch_Ternary(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Ternary.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.FieldMatch.Ternary)
}
FieldMatch_Ternary::FieldMatch_Ternary(const FieldMatch_Ternary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value(),
      GetArenaNoVirtual());
  }
  mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mask().size() > 0) {
    mask_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mask(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.FieldMatch.Ternary)
}

void FieldMatch_Ternary::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mask_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FieldMatch_Ternary::~FieldMatch_Ternary() {
  // @@protoc_insertion_point(destructor:p4.v1.FieldMatch.Ternary)
  SharedDtor();
}

void FieldMatch_Ternary::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mask_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FieldMatch_Ternary::ArenaDtor(void* object) {
  FieldMatch_Ternary* _this = reinterpret_cast< FieldMatch_Ternary* >(object);
  (void)_this;
}
void FieldMatch_Ternary::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FieldMatch_Ternary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldMatch_Ternary::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldMatch_Ternary& FieldMatch_Ternary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Ternary.base);
  return *internal_default_instance();
}


void FieldMatch_Ternary::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.FieldMatch.Ternary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  mask_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool FieldMatch_Ternary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.FieldMatch.Ternary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mask = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.FieldMatch.Ternary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.FieldMatch.Ternary)
  return false;
#undef DO_
}

void FieldMatch_Ternary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.FieldMatch.Ternary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // bytes mask = 2;
  if (this->mask().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->mask(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.FieldMatch.Ternary)
}

::google::protobuf::uint8* FieldMatch_Ternary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.FieldMatch.Ternary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  // bytes mask = 2;
  if (this->mask().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->mask(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.FieldMatch.Ternary)
  return target;
}

size_t FieldMatch_Ternary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.FieldMatch.Ternary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // bytes mask = 2;
  if (this->mask().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mask());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldMatch_Ternary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.FieldMatch.Ternary)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldMatch_Ternary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldMatch_Ternary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.FieldMatch.Ternary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.FieldMatch.Ternary)
    MergeFrom(*source);
  }
}

void FieldMatch_Ternary::MergeFrom(const FieldMatch_Ternary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.FieldMatch.Ternary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    set_value(from.value());
  }
  if (from.mask().size() > 0) {
    set_mask(from.mask());
  }
}

void FieldMatch_Ternary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.FieldMatch.Ternary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldMatch_Ternary::CopyFrom(const FieldMatch_Ternary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.FieldMatch.Ternary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldMatch_Ternary::IsInitialized() const {
  return true;
}

void FieldMatch_Ternary::Swap(FieldMatch_Ternary* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FieldMatch_Ternary* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FieldMatch_Ternary::UnsafeArenaSwap(FieldMatch_Ternary* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FieldMatch_Ternary::InternalSwap(FieldMatch_Ternary* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mask_.Swap(&other->mask_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldMatch_Ternary::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FieldMatch_LPM::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldMatch_LPM::kValueFieldNumber;
const int FieldMatch_LPM::kPrefixLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldMatch_LPM::FieldMatch_LPM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_LPM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.FieldMatch.LPM)
}
FieldMatch_LPM::FieldMatch_LPM(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_LPM.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.FieldMatch.LPM)
}
FieldMatch_LPM::FieldMatch_LPM(const FieldMatch_LPM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value(),
      GetArenaNoVirtual());
  }
  prefix_len_ = from.prefix_len_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.FieldMatch.LPM)
}

void FieldMatch_LPM::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefix_len_ = 0;
}

FieldMatch_LPM::~FieldMatch_LPM() {
  // @@protoc_insertion_point(destructor:p4.v1.FieldMatch.LPM)
  SharedDtor();
}

void FieldMatch_LPM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FieldMatch_LPM::ArenaDtor(void* object) {
  FieldMatch_LPM* _this = reinterpret_cast< FieldMatch_LPM* >(object);
  (void)_this;
}
void FieldMatch_LPM::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FieldMatch_LPM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldMatch_LPM::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldMatch_LPM& FieldMatch_LPM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_LPM.base);
  return *internal_default_instance();
}


void FieldMatch_LPM::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.FieldMatch.LPM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  prefix_len_ = 0;
  _internal_metadata_.Clear();
}

bool FieldMatch_LPM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.FieldMatch.LPM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 prefix_len = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prefix_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.FieldMatch.LPM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.FieldMatch.LPM)
  return false;
#undef DO_
}

void FieldMatch_LPM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.FieldMatch.LPM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // int32 prefix_len = 2;
  if (this->prefix_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->prefix_len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.FieldMatch.LPM)
}

::google::protobuf::uint8* FieldMatch_LPM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.FieldMatch.LPM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  // int32 prefix_len = 2;
  if (this->prefix_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->prefix_len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.FieldMatch.LPM)
  return target;
}

size_t FieldMatch_LPM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.FieldMatch.LPM)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // int32 prefix_len = 2;
  if (this->prefix_len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->prefix_len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldMatch_LPM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.FieldMatch.LPM)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldMatch_LPM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldMatch_LPM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.FieldMatch.LPM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.FieldMatch.LPM)
    MergeFrom(*source);
  }
}

void FieldMatch_LPM::MergeFrom(const FieldMatch_LPM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.FieldMatch.LPM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    set_value(from.value());
  }
  if (from.prefix_len() != 0) {
    set_prefix_len(from.prefix_len());
  }
}

void FieldMatch_LPM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.FieldMatch.LPM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldMatch_LPM::CopyFrom(const FieldMatch_LPM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.FieldMatch.LPM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldMatch_LPM::IsInitialized() const {
  return true;
}

void FieldMatch_LPM::Swap(FieldMatch_LPM* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FieldMatch_LPM* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FieldMatch_LPM::UnsafeArenaSwap(FieldMatch_LPM* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FieldMatch_LPM::InternalSwap(FieldMatch_LPM* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(prefix_len_, other->prefix_len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldMatch_LPM::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FieldMatch_Range::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldMatch_Range::kLowFieldNumber;
const int FieldMatch_Range::kHighFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldMatch_Range::FieldMatch_Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Range.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.FieldMatch.Range)
}
FieldMatch_Range::FieldMatch_Range(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Range.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.FieldMatch.Range)
}
FieldMatch_Range::FieldMatch_Range(const FieldMatch_Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  low_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.low().size() > 0) {
    low_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.low(),
      GetArenaNoVirtual());
  }
  high_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.high().size() > 0) {
    high_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.high(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.FieldMatch.Range)
}

void FieldMatch_Range::SharedCtor() {
  low_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FieldMatch_Range::~FieldMatch_Range() {
  // @@protoc_insertion_point(destructor:p4.v1.FieldMatch.Range)
  SharedDtor();
}

void FieldMatch_Range::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  low_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  high_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FieldMatch_Range::ArenaDtor(void* object) {
  FieldMatch_Range* _this = reinterpret_cast< FieldMatch_Range* >(object);
  (void)_this;
}
void FieldMatch_Range::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FieldMatch_Range::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldMatch_Range::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldMatch_Range& FieldMatch_Range::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Range.base);
  return *internal_default_instance();
}


void FieldMatch_Range::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.FieldMatch.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  low_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  high_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool FieldMatch_Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.FieldMatch.Range)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes low = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_low()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes high = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_high()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.FieldMatch.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.FieldMatch.Range)
  return false;
#undef DO_
}

void FieldMatch_Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.FieldMatch.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes low = 1;
  if (this->low().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->low(), output);
  }

  // bytes high = 2;
  if (this->high().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->high(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.FieldMatch.Range)
}

::google::protobuf::uint8* FieldMatch_Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.FieldMatch.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes low = 1;
  if (this->low().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->low(), target);
  }

  // bytes high = 2;
  if (this->high().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->high(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.FieldMatch.Range)
  return target;
}

size_t FieldMatch_Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.FieldMatch.Range)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes low = 1;
  if (this->low().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->low());
  }

  // bytes high = 2;
  if (this->high().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->high());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldMatch_Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.FieldMatch.Range)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldMatch_Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldMatch_Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.FieldMatch.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.FieldMatch.Range)
    MergeFrom(*source);
  }
}

void FieldMatch_Range::MergeFrom(const FieldMatch_Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.FieldMatch.Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.low().size() > 0) {
    set_low(from.low());
  }
  if (from.high().size() > 0) {
    set_high(from.high());
  }
}

void FieldMatch_Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.FieldMatch.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldMatch_Range::CopyFrom(const FieldMatch_Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.FieldMatch.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldMatch_Range::IsInitialized() const {
  return true;
}

void FieldMatch_Range::Swap(FieldMatch_Range* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FieldMatch_Range* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FieldMatch_Range::UnsafeArenaSwap(FieldMatch_Range* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FieldMatch_Range::InternalSwap(FieldMatch_Range* other) {
  using std::swap;
  low_.Swap(&other->low_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  high_.Swap(&other->high_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldMatch_Range::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FieldMatch_Optional::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldMatch_Optional::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldMatch_Optional::FieldMatch_Optional()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Optional.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.FieldMatch.Optional)
}
FieldMatch_Optional::FieldMatch_Optional(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Optional.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.FieldMatch.Optional)
}
FieldMatch_Optional::FieldMatch_Optional(const FieldMatch_Optional& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.FieldMatch.Optional)
}

void FieldMatch_Optional::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FieldMatch_Optional::~FieldMatch_Optional() {
  // @@protoc_insertion_point(destructor:p4.v1.FieldMatch.Optional)
  SharedDtor();
}

void FieldMatch_Optional::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FieldMatch_Optional::ArenaDtor(void* object) {
  FieldMatch_Optional* _this = reinterpret_cast< FieldMatch_Optional* >(object);
  (void)_this;
}
void FieldMatch_Optional::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FieldMatch_Optional::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldMatch_Optional::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldMatch_Optional& FieldMatch_Optional::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch_Optional.base);
  return *internal_default_instance();
}


void FieldMatch_Optional::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.FieldMatch.Optional)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool FieldMatch_Optional::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.FieldMatch.Optional)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.FieldMatch.Optional)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.FieldMatch.Optional)
  return false;
#undef DO_
}

void FieldMatch_Optional::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.FieldMatch.Optional)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.FieldMatch.Optional)
}

::google::protobuf::uint8* FieldMatch_Optional::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.FieldMatch.Optional)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.FieldMatch.Optional)
  return target;
}

size_t FieldMatch_Optional::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.FieldMatch.Optional)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldMatch_Optional::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.FieldMatch.Optional)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldMatch_Optional* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldMatch_Optional>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.FieldMatch.Optional)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.FieldMatch.Optional)
    MergeFrom(*source);
  }
}

void FieldMatch_Optional::MergeFrom(const FieldMatch_Optional& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.FieldMatch.Optional)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    set_value(from.value());
  }
}

void FieldMatch_Optional::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.FieldMatch.Optional)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldMatch_Optional::CopyFrom(const FieldMatch_Optional& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.FieldMatch.Optional)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldMatch_Optional::IsInitialized() const {
  return true;
}

void FieldMatch_Optional::Swap(FieldMatch_Optional* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FieldMatch_Optional* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FieldMatch_Optional::UnsafeArenaSwap(FieldMatch_Optional* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FieldMatch_Optional::InternalSwap(FieldMatch_Optional* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldMatch_Optional::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FieldMatch::InitAsDefaultInstance() {
  ::p4::v1::_FieldMatch_default_instance_.exact_ = const_cast< ::p4::v1::FieldMatch_Exact*>(
      ::p4::v1::FieldMatch_Exact::internal_default_instance());
  ::p4::v1::_FieldMatch_default_instance_.ternary_ = const_cast< ::p4::v1::FieldMatch_Ternary*>(
      ::p4::v1::FieldMatch_Ternary::internal_default_instance());
  ::p4::v1::_FieldMatch_default_instance_.lpm_ = const_cast< ::p4::v1::FieldMatch_LPM*>(
      ::p4::v1::FieldMatch_LPM::internal_default_instance());
  ::p4::v1::_FieldMatch_default_instance_.range_ = const_cast< ::p4::v1::FieldMatch_Range*>(
      ::p4::v1::FieldMatch_Range::internal_default_instance());
  ::p4::v1::_FieldMatch_default_instance_.optional_ = const_cast< ::p4::v1::FieldMatch_Optional*>(
      ::p4::v1::FieldMatch_Optional::internal_default_instance());
  ::p4::v1::_FieldMatch_default_instance_.other_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void FieldMatch::set_allocated_exact(::p4::v1::FieldMatch_Exact* exact) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_field_match_type();
  if (exact) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(exact);
    if (message_arena != submessage_arena) {
      exact = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exact, submessage_arena);
    }
    set_has_exact();
    field_match_type_.exact_ = exact;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.exact)
}
void FieldMatch::set_allocated_ternary(::p4::v1::FieldMatch_Ternary* ternary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_field_match_type();
  if (ternary) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(ternary);
    if (message_arena != submessage_arena) {
      ternary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ternary, submessage_arena);
    }
    set_has_ternary();
    field_match_type_.ternary_ = ternary;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.ternary)
}
void FieldMatch::set_allocated_lpm(::p4::v1::FieldMatch_LPM* lpm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_field_match_type();
  if (lpm) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(lpm);
    if (message_arena != submessage_arena) {
      lpm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lpm, submessage_arena);
    }
    set_has_lpm();
    field_match_type_.lpm_ = lpm;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.lpm)
}
void FieldMatch::set_allocated_range(::p4::v1::FieldMatch_Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_field_match_type();
  if (range) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(range);
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    set_has_range();
    field_match_type_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.range)
}
void FieldMatch::set_allocated_optional(::p4::v1::FieldMatch_Optional* optional) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_field_match_type();
  if (optional) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(optional);
    if (message_arena != submessage_arena) {
      optional = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, optional, submessage_arena);
    }
    set_has_optional();
    field_match_type_.optional_ = optional;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.optional)
}
void FieldMatch::set_allocated_other(::google::protobuf::Any* other) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_field_match_type();
  if (other) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      other = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, other, submessage_arena);
    }
    set_has_other();
    field_match_type_.other_ = other;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.other)
}
void FieldMatch::clear_other() {
  if (has_other()) {
    if (GetArenaNoVirtual() == NULL) {
      delete field_match_type_.other_;
    }
    clear_has_field_match_type();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldMatch::kFieldIdFieldNumber;
const int FieldMatch::kExactFieldNumber;
const int FieldMatch::kTernaryFieldNumber;
const int FieldMatch::kLpmFieldNumber;
const int FieldMatch::kRangeFieldNumber;
const int FieldMatch::kOptionalFieldNumber;
const int FieldMatch::kOtherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldMatch::FieldMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.FieldMatch)
}
FieldMatch::FieldMatch(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.FieldMatch)
}
FieldMatch::FieldMatch(const FieldMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_id_ = from.field_id_;
  clear_has_field_match_type();
  switch (from.field_match_type_case()) {
    case kExact: {
      mutable_exact()->::p4::v1::FieldMatch_Exact::MergeFrom(from.exact());
      break;
    }
    case kTernary: {
      mutable_ternary()->::p4::v1::FieldMatch_Ternary::MergeFrom(from.ternary());
      break;
    }
    case kLpm: {
      mutable_lpm()->::p4::v1::FieldMatch_LPM::MergeFrom(from.lpm());
      break;
    }
    case kRange: {
      mutable_range()->::p4::v1::FieldMatch_Range::MergeFrom(from.range());
      break;
    }
    case kOptional: {
      mutable_optional()->::p4::v1::FieldMatch_Optional::MergeFrom(from.optional());
      break;
    }
    case kOther: {
      mutable_other()->::google::protobuf::Any::MergeFrom(from.other());
      break;
    }
    case FIELD_MATCH_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.FieldMatch)
}

void FieldMatch::SharedCtor() {
  field_id_ = 0u;
  clear_has_field_match_type();
}

FieldMatch::~FieldMatch() {
  // @@protoc_insertion_point(destructor:p4.v1.FieldMatch)
  SharedDtor();
}

void FieldMatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_field_match_type()) {
    clear_field_match_type();
  }
}

void FieldMatch::ArenaDtor(void* object) {
  FieldMatch* _this = reinterpret_cast< FieldMatch* >(object);
  (void)_this;
}
void FieldMatch::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FieldMatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldMatch::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldMatch& FieldMatch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_FieldMatch.base);
  return *internal_default_instance();
}


void FieldMatch::clear_field_match_type() {
// @@protoc_insertion_point(one_of_clear_start:p4.v1.FieldMatch)
  switch (field_match_type_case()) {
    case kExact: {
      if (GetArenaNoVirtual() == NULL) {
        delete field_match_type_.exact_;
      }
      break;
    }
    case kTernary: {
      if (GetArenaNoVirtual() == NULL) {
        delete field_match_type_.ternary_;
      }
      break;
    }
    case kLpm: {
      if (GetArenaNoVirtual() == NULL) {
        delete field_match_type_.lpm_;
      }
      break;
    }
    case kRange: {
      if (GetArenaNoVirtual() == NULL) {
        delete field_match_type_.range_;
      }
      break;
    }
    case kOptional: {
      if (GetArenaNoVirtual() == NULL) {
        delete field_match_type_.optional_;
      }
      break;
    }
    case kOther: {
      if (GetArenaNoVirtual() == NULL) {
        delete field_match_type_.other_;
      }
      break;
    }
    case FIELD_MATCH_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FIELD_MATCH_TYPE_NOT_SET;
}


void FieldMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.FieldMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_id_ = 0u;
  clear_field_match_type();
  _internal_metadata_.Clear();
}

bool FieldMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.FieldMatch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 field_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.FieldMatch.Exact exact = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exact()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.FieldMatch.Ternary ternary = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ternary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.FieldMatch.LPM lpm = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lpm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.FieldMatch.Range range = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.FieldMatch.Optional optional = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optional()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any other = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_other()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.FieldMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.FieldMatch)
  return false;
#undef DO_
}

void FieldMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.FieldMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field_id = 1;
  if (this->field_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->field_id(), output);
  }

  // .p4.v1.FieldMatch.Exact exact = 2;
  if (has_exact()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_exact(), output);
  }

  // .p4.v1.FieldMatch.Ternary ternary = 3;
  if (has_ternary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_ternary(), output);
  }

  // .p4.v1.FieldMatch.LPM lpm = 4;
  if (has_lpm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_lpm(), output);
  }

  // .p4.v1.FieldMatch.Range range = 6;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_range(), output);
  }

  // .p4.v1.FieldMatch.Optional optional = 7;
  if (has_optional()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_optional(), output);
  }

  // .google.protobuf.Any other = 100;
  if (has_other()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->_internal_other(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.FieldMatch)
}

::google::protobuf::uint8* FieldMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.FieldMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field_id = 1;
  if (this->field_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->field_id(), target);
  }

  // .p4.v1.FieldMatch.Exact exact = 2;
  if (has_exact()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_exact(), deterministic, target);
  }

  // .p4.v1.FieldMatch.Ternary ternary = 3;
  if (has_ternary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_ternary(), deterministic, target);
  }

  // .p4.v1.FieldMatch.LPM lpm = 4;
  if (has_lpm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_lpm(), deterministic, target);
  }

  // .p4.v1.FieldMatch.Range range = 6;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_range(), deterministic, target);
  }

  // .p4.v1.FieldMatch.Optional optional = 7;
  if (has_optional()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_optional(), deterministic, target);
  }

  // .google.protobuf.Any other = 100;
  if (has_other()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, this->_internal_other(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.FieldMatch)
  return target;
}

size_t FieldMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.FieldMatch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 field_id = 1;
  if (this->field_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field_id());
  }

  switch (field_match_type_case()) {
    // .p4.v1.FieldMatch.Exact exact = 2;
    case kExact: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *field_match_type_.exact_);
      break;
    }
    // .p4.v1.FieldMatch.Ternary ternary = 3;
    case kTernary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *field_match_type_.ternary_);
      break;
    }
    // .p4.v1.FieldMatch.LPM lpm = 4;
    case kLpm: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *field_match_type_.lpm_);
      break;
    }
    // .p4.v1.FieldMatch.Range range = 6;
    case kRange: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *field_match_type_.range_);
      break;
    }
    // .p4.v1.FieldMatch.Optional optional = 7;
    case kOptional: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *field_match_type_.optional_);
      break;
    }
    // .google.protobuf.Any other = 100;
    case kOther: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *field_match_type_.other_);
      break;
    }
    case FIELD_MATCH_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.FieldMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.FieldMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.FieldMatch)
    MergeFrom(*source);
  }
}

void FieldMatch::MergeFrom(const FieldMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.FieldMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field_id() != 0) {
    set_field_id(from.field_id());
  }
  switch (from.field_match_type_case()) {
    case kExact: {
      mutable_exact()->::p4::v1::FieldMatch_Exact::MergeFrom(from.exact());
      break;
    }
    case kTernary: {
      mutable_ternary()->::p4::v1::FieldMatch_Ternary::MergeFrom(from.ternary());
      break;
    }
    case kLpm: {
      mutable_lpm()->::p4::v1::FieldMatch_LPM::MergeFrom(from.lpm());
      break;
    }
    case kRange: {
      mutable_range()->::p4::v1::FieldMatch_Range::MergeFrom(from.range());
      break;
    }
    case kOptional: {
      mutable_optional()->::p4::v1::FieldMatch_Optional::MergeFrom(from.optional());
      break;
    }
    case kOther: {
      mutable_other()->::google::protobuf::Any::MergeFrom(from.other());
      break;
    }
    case FIELD_MATCH_TYPE_NOT_SET: {
      break;
    }
  }
}

void FieldMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.FieldMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldMatch::CopyFrom(const FieldMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.FieldMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldMatch::IsInitialized() const {
  return true;
}

void FieldMatch::Swap(FieldMatch* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FieldMatch* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FieldMatch::UnsafeArenaSwap(FieldMatch* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FieldMatch::InternalSwap(FieldMatch* other) {
  using std::swap;
  swap(field_id_, other->field_id_);
  swap(field_match_type_, other->field_match_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldMatch::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableAction::InitAsDefaultInstance() {
  ::p4::v1::_TableAction_default_instance_.action_ = const_cast< ::p4::v1::Action*>(
      ::p4::v1::Action::internal_default_instance());
  ::p4::v1::_TableAction_default_instance_.action_profile_member_id_ = 0u;
  ::p4::v1::_TableAction_default_instance_.action_profile_group_id_ = 0u;
  ::p4::v1::_TableAction_default_instance_.action_profile_action_set_ = const_cast< ::p4::v1::ActionProfileActionSet*>(
      ::p4::v1::ActionProfileActionSet::internal_default_instance());
}
void TableAction::set_allocated_action(::p4::v1::Action* action) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (action) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(action);
    if (message_arena != submessage_arena) {
      action = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action, submessage_arena);
    }
    set_has_action();
    type_.action_ = action;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.TableAction.action)
}
void TableAction::set_allocated_action_profile_action_set(::p4::v1::ActionProfileActionSet* action_profile_action_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (action_profile_action_set) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(action_profile_action_set);
    if (message_arena != submessage_arena) {
      action_profile_action_set = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_profile_action_set, submessage_arena);
    }
    set_has_action_profile_action_set();
    type_.action_profile_action_set_ = action_profile_action_set;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.TableAction.action_profile_action_set)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableAction::kActionFieldNumber;
const int TableAction::kActionProfileMemberIdFieldNumber;
const int TableAction::kActionProfileGroupIdFieldNumber;
const int TableAction::kActionProfileActionSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableAction::TableAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableAction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.TableAction)
}
TableAction::TableAction(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableAction.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.TableAction)
}
TableAction::TableAction(const TableAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kAction: {
      mutable_action()->::p4::v1::Action::MergeFrom(from.action());
      break;
    }
    case kActionProfileMemberId: {
      set_action_profile_member_id(from.action_profile_member_id());
      break;
    }
    case kActionProfileGroupId: {
      set_action_profile_group_id(from.action_profile_group_id());
      break;
    }
    case kActionProfileActionSet: {
      mutable_action_profile_action_set()->::p4::v1::ActionProfileActionSet::MergeFrom(from.action_profile_action_set());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.TableAction)
}

void TableAction::SharedCtor() {
  clear_has_type();
}

TableAction::~TableAction() {
  // @@protoc_insertion_point(destructor:p4.v1.TableAction)
  SharedDtor();
}

void TableAction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_type()) {
    clear_type();
  }
}

void TableAction::ArenaDtor(void* object) {
  TableAction* _this = reinterpret_cast< TableAction* >(object);
  (void)_this;
}
void TableAction::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TableAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableAction::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableAction& TableAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_TableAction.base);
  return *internal_default_instance();
}


void TableAction::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:p4.v1.TableAction)
  switch (type_case()) {
    case kAction: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_.action_;
      }
      break;
    }
    case kActionProfileMemberId: {
      // No need to clear
      break;
    }
    case kActionProfileGroupId: {
      // No need to clear
      break;
    }
    case kActionProfileActionSet: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_.action_profile_action_set_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void TableAction::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.TableAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool TableAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.TableAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.Action action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_profile_member_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_.action_profile_member_id_)));
          set_has_action_profile_member_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 action_profile_group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_.action_profile_group_id_)));
          set_has_action_profile_group_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.ActionProfileActionSet action_profile_action_set = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_profile_action_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.TableAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.TableAction)
  return false;
#undef DO_
}

void TableAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.TableAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.Action action = 1;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_action(), output);
  }

  // uint32 action_profile_member_id = 2;
  if (has_action_profile_member_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->action_profile_member_id(), output);
  }

  // uint32 action_profile_group_id = 3;
  if (has_action_profile_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->action_profile_group_id(), output);
  }

  // .p4.v1.ActionProfileActionSet action_profile_action_set = 4;
  if (has_action_profile_action_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_action_profile_action_set(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.TableAction)
}

::google::protobuf::uint8* TableAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.TableAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.Action action = 1;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_action(), deterministic, target);
  }

  // uint32 action_profile_member_id = 2;
  if (has_action_profile_member_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->action_profile_member_id(), target);
  }

  // uint32 action_profile_group_id = 3;
  if (has_action_profile_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->action_profile_group_id(), target);
  }

  // .p4.v1.ActionProfileActionSet action_profile_action_set = 4;
  if (has_action_profile_action_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_action_profile_action_set(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.TableAction)
  return target;
}

size_t TableAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.TableAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // .p4.v1.Action action = 1;
    case kAction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.action_);
      break;
    }
    // uint32 action_profile_member_id = 2;
    case kActionProfileMemberId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action_profile_member_id());
      break;
    }
    // uint32 action_profile_group_id = 3;
    case kActionProfileGroupId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action_profile_group_id());
      break;
    }
    // .p4.v1.ActionProfileActionSet action_profile_action_set = 4;
    case kActionProfileActionSet: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.action_profile_action_set_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.TableAction)
  GOOGLE_DCHECK_NE(&from, this);
  const TableAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.TableAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.TableAction)
    MergeFrom(*source);
  }
}

void TableAction::MergeFrom(const TableAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.TableAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kAction: {
      mutable_action()->::p4::v1::Action::MergeFrom(from.action());
      break;
    }
    case kActionProfileMemberId: {
      set_action_profile_member_id(from.action_profile_member_id());
      break;
    }
    case kActionProfileGroupId: {
      set_action_profile_group_id(from.action_profile_group_id());
      break;
    }
    case kActionProfileActionSet: {
      mutable_action_profile_action_set()->::p4::v1::ActionProfileActionSet::MergeFrom(from.action_profile_action_set());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void TableAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.TableAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableAction::CopyFrom(const TableAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.TableAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableAction::IsInitialized() const {
  return true;
}

void TableAction::Swap(TableAction* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TableAction* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TableAction::UnsafeArenaSwap(TableAction* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TableAction::InternalSwap(TableAction* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableAction::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Action_Param::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action_Param::kParamIdFieldNumber;
const int Action_Param::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action_Param::Action_Param()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Action_Param.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.Action.Param)
}
Action_Param::Action_Param(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Action_Param.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.Action.Param)
}
Action_Param::Action_Param(const Action_Param& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value(),
      GetArenaNoVirtual());
  }
  param_id_ = from.param_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.Action.Param)
}

void Action_Param::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param_id_ = 0u;
}

Action_Param::~Action_Param() {
  // @@protoc_insertion_point(destructor:p4.v1.Action.Param)
  SharedDtor();
}

void Action_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Action_Param::ArenaDtor(void* object) {
  Action_Param* _this = reinterpret_cast< Action_Param* >(object);
  (void)_this;
}
void Action_Param::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Action_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Action_Param::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Action_Param& Action_Param::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Action_Param.base);
  return *internal_default_instance();
}


void Action_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.Action.Param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  param_id_ = 0u;
  _internal_metadata_.Clear();
}

bool Action_Param::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.Action.Param)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 param_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.Action.Param)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.Action.Param)
  return false;
#undef DO_
}

void Action_Param::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.Action.Param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 param_id = 2;
  if (this->param_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->param_id(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.Action.Param)
}

::google::protobuf::uint8* Action_Param::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.Action.Param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 param_id = 2;
  if (this->param_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->param_id(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.Action.Param)
  return target;
}

size_t Action_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.Action.Param)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // uint32 param_id = 2;
  if (this->param_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Action_Param::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.Action.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const Action_Param* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Action_Param>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.Action.Param)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.Action.Param)
    MergeFrom(*source);
  }
}

void Action_Param::MergeFrom(const Action_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.Action.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    set_value(from.value());
  }
  if (from.param_id() != 0) {
    set_param_id(from.param_id());
  }
}

void Action_Param::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.Action.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action_Param::CopyFrom(const Action_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.Action.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action_Param::IsInitialized() const {
  return true;
}

void Action_Param::Swap(Action_Param* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Action_Param* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Action_Param::UnsafeArenaSwap(Action_Param* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Action_Param::InternalSwap(Action_Param* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(param_id_, other->param_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Action_Param::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Action::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action::kActionIdFieldNumber;
const int Action::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action::Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Action.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.Action)
}
Action::Action(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  params_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Action.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.Action)
}
Action::Action(const Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_id_ = from.action_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.Action)
}

void Action::SharedCtor() {
  action_id_ = 0u;
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:p4.v1.Action)
  SharedDtor();
}

void Action::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Action::ArenaDtor(void* object) {
  Action* _this = reinterpret_cast< Action* >(object);
  (void)_this;
}
void Action::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Action::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Action& Action::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Action.base);
  return *internal_default_instance();
}


void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  action_id_ = 0u;
  _internal_metadata_.Clear();
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.Action)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 action_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.Action.Param params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.Action)
  return false;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 action_id = 1;
  if (this->action_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->action_id(), output);
  }

  // repeated .p4.v1.Action.Param params = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->params(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.Action)
}

::google::protobuf::uint8* Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 action_id = 1;
  if (this->action_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->action_id(), target);
  }

  // repeated .p4.v1.Action.Param params = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->params(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.Action)
  return target;
}

size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.Action)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.Action.Param params = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // uint32 action_id = 1;
  if (this->action_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.action_id() != 0) {
    set_action_id(from.action_id());
  }
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  return true;
}

void Action::Swap(Action* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Action* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Action::UnsafeArenaSwap(Action* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Action::InternalSwap(Action* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  swap(action_id_, other->action_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionProfileActionSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionProfileActionSet::kActionProfileActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionProfileActionSet::ActionProfileActionSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileActionSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ActionProfileActionSet)
}
ActionProfileActionSet::ActionProfileActionSet(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  action_profile_actions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileActionSet.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ActionProfileActionSet)
}
ActionProfileActionSet::ActionProfileActionSet(const ActionProfileActionSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      action_profile_actions_(from.action_profile_actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.v1.ActionProfileActionSet)
}

void ActionProfileActionSet::SharedCtor() {
}

ActionProfileActionSet::~ActionProfileActionSet() {
  // @@protoc_insertion_point(destructor:p4.v1.ActionProfileActionSet)
  SharedDtor();
}

void ActionProfileActionSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ActionProfileActionSet::ArenaDtor(void* object) {
  ActionProfileActionSet* _this = reinterpret_cast< ActionProfileActionSet* >(object);
  (void)_this;
}
void ActionProfileActionSet::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ActionProfileActionSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionProfileActionSet::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionProfileActionSet& ActionProfileActionSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileActionSet.base);
  return *internal_default_instance();
}


void ActionProfileActionSet::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ActionProfileActionSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_profile_actions_.Clear();
  _internal_metadata_.Clear();
}

bool ActionProfileActionSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ActionProfileActionSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.v1.ActionProfileAction action_profile_actions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_action_profile_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ActionProfileActionSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ActionProfileActionSet)
  return false;
#undef DO_
}

void ActionProfileActionSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ActionProfileActionSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.ActionProfileAction action_profile_actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->action_profile_actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->action_profile_actions(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ActionProfileActionSet)
}

::google::protobuf::uint8* ActionProfileActionSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ActionProfileActionSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.ActionProfileAction action_profile_actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->action_profile_actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->action_profile_actions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ActionProfileActionSet)
  return target;
}

size_t ActionProfileActionSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ActionProfileActionSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.ActionProfileAction action_profile_actions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->action_profile_actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->action_profile_actions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionProfileActionSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ActionProfileActionSet)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionProfileActionSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionProfileActionSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ActionProfileActionSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ActionProfileActionSet)
    MergeFrom(*source);
  }
}

void ActionProfileActionSet::MergeFrom(const ActionProfileActionSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ActionProfileActionSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  action_profile_actions_.MergeFrom(from.action_profile_actions_);
}

void ActionProfileActionSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ActionProfileActionSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionProfileActionSet::CopyFrom(const ActionProfileActionSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ActionProfileActionSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionProfileActionSet::IsInitialized() const {
  return true;
}

void ActionProfileActionSet::Swap(ActionProfileActionSet* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ActionProfileActionSet* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ActionProfileActionSet::UnsafeArenaSwap(ActionProfileActionSet* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ActionProfileActionSet::InternalSwap(ActionProfileActionSet* other) {
  using std::swap;
  CastToBase(&action_profile_actions_)->InternalSwap(CastToBase(&other->action_profile_actions_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionProfileActionSet::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionProfileAction::InitAsDefaultInstance() {
  ::p4::v1::_ActionProfileAction_default_instance_._instance.get_mutable()->action_ = const_cast< ::p4::v1::Action*>(
      ::p4::v1::Action::internal_default_instance());
  ::p4::v1::_ActionProfileAction_default_instance_.watch_ = 0;
  ::p4::v1::_ActionProfileAction_default_instance_.watch_port_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActionProfileAction::unsafe_arena_set_allocated_action(
    ::p4::v1::Action* action) {
  if (GetArenaNoVirtual() == NULL) {
    delete action_;
  }
  action_ = action;
  if (action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.ActionProfileAction.action)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionProfileAction::kActionFieldNumber;
const int ActionProfileAction::kWeightFieldNumber;
const int ActionProfileAction::kWatchFieldNumber;
const int ActionProfileAction::kWatchPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionProfileAction::ActionProfileAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileAction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ActionProfileAction)
}
ActionProfileAction::ActionProfileAction(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileAction.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ActionProfileAction)
}
ActionProfileAction::ActionProfileAction(const ActionProfileAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action()) {
    action_ = new ::p4::v1::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  weight_ = from.weight_;
  clear_has_watch_kind();
  switch (from.watch_kind_case()) {
    case kWatch: {
      set_watch(from.watch());
      break;
    }
    case kWatchPort: {
      set_watch_port(from.watch_port());
      break;
    }
    case WATCH_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.ActionProfileAction)
}

void ActionProfileAction::SharedCtor() {
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&action_)) + sizeof(weight_));
  clear_has_watch_kind();
}

ActionProfileAction::~ActionProfileAction() {
  // @@protoc_insertion_point(destructor:p4.v1.ActionProfileAction)
  SharedDtor();
}

void ActionProfileAction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete action_;
  if (has_watch_kind()) {
    clear_watch_kind();
  }
}

void ActionProfileAction::ArenaDtor(void* object) {
  ActionProfileAction* _this = reinterpret_cast< ActionProfileAction* >(object);
  (void)_this;
}
void ActionProfileAction::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ActionProfileAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionProfileAction::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionProfileAction& ActionProfileAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileAction.base);
  return *internal_default_instance();
}


void ActionProfileAction::clear_watch_kind() {
// @@protoc_insertion_point(one_of_clear_start:p4.v1.ActionProfileAction)
  switch (watch_kind_case()) {
    case kWatch: {
      // No need to clear
      break;
    }
    case kWatchPort: {
      watch_kind_.watch_port_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case WATCH_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = WATCH_KIND_NOT_SET;
}


void ActionProfileAction::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ActionProfileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && action_ != NULL) {
    delete action_;
  }
  action_ = NULL;
  weight_ = 0;
  clear_watch_kind();
  _internal_metadata_.Clear();
}

bool ActionProfileAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ActionProfileAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.Action action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 weight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 watch = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_watch_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &watch_kind_.watch_)));
          set_has_watch();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes watch_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_watch_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ActionProfileAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ActionProfileAction)
  return false;
#undef DO_
}

void ActionProfileAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ActionProfileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.Action action = 1;
  if (this->has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_action(), output);
  }

  // int32 weight = 2;
  if (this->weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->weight(), output);
  }

  // int32 watch = 3 [deprecated = true];
  if (has_watch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->watch(), output);
  }

  // bytes watch_port = 4;
  if (has_watch_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->watch_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ActionProfileAction)
}

::google::protobuf::uint8* ActionProfileAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ActionProfileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.Action action = 1;
  if (this->has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_action(), deterministic, target);
  }

  // int32 weight = 2;
  if (this->weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->weight(), target);
  }

  // int32 watch = 3 [deprecated = true];
  if (has_watch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->watch(), target);
  }

  // bytes watch_port = 4;
  if (has_watch_port()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->watch_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ActionProfileAction)
  return target;
}

size_t ActionProfileAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ActionProfileAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.Action action = 1;
  if (this->has_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_);
  }

  // int32 weight = 2;
  if (this->weight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weight());
  }

  switch (watch_kind_case()) {
    // int32 watch = 3 [deprecated = true];
    case kWatch: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->watch());
      break;
    }
    // bytes watch_port = 4;
    case kWatchPort: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->watch_port());
      break;
    }
    case WATCH_KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionProfileAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ActionProfileAction)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionProfileAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionProfileAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ActionProfileAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ActionProfileAction)
    MergeFrom(*source);
  }
}

void ActionProfileAction::MergeFrom(const ActionProfileAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ActionProfileAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action()) {
    mutable_action()->::p4::v1::Action::MergeFrom(from.action());
  }
  if (from.weight() != 0) {
    set_weight(from.weight());
  }
  switch (from.watch_kind_case()) {
    case kWatch: {
      set_watch(from.watch());
      break;
    }
    case kWatchPort: {
      set_watch_port(from.watch_port());
      break;
    }
    case WATCH_KIND_NOT_SET: {
      break;
    }
  }
}

void ActionProfileAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ActionProfileAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionProfileAction::CopyFrom(const ActionProfileAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ActionProfileAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionProfileAction::IsInitialized() const {
  return true;
}

void ActionProfileAction::Swap(ActionProfileAction* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ActionProfileAction* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ActionProfileAction::UnsafeArenaSwap(ActionProfileAction* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ActionProfileAction::InternalSwap(ActionProfileAction* other) {
  using std::swap;
  swap(action_, other->action_);
  swap(weight_, other->weight_);
  swap(watch_kind_, other->watch_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionProfileAction::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionProfileMember::InitAsDefaultInstance() {
  ::p4::v1::_ActionProfileMember_default_instance_._instance.get_mutable()->action_ = const_cast< ::p4::v1::Action*>(
      ::p4::v1::Action::internal_default_instance());
}
void ActionProfileMember::unsafe_arena_set_allocated_action(
    ::p4::v1::Action* action) {
  if (GetArenaNoVirtual() == NULL) {
    delete action_;
  }
  action_ = action;
  if (action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.ActionProfileMember.action)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionProfileMember::kActionProfileIdFieldNumber;
const int ActionProfileMember::kMemberIdFieldNumber;
const int ActionProfileMember::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionProfileMember::ActionProfileMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileMember.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ActionProfileMember)
}
ActionProfileMember::ActionProfileMember(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileMember.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ActionProfileMember)
}
ActionProfileMember::ActionProfileMember(const ActionProfileMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action()) {
    action_ = new ::p4::v1::Action(*from.action_);
  } else {
    action_ = NULL;
  }
  ::memcpy(&action_profile_id_, &from.action_profile_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&member_id_) -
    reinterpret_cast<char*>(&action_profile_id_)) + sizeof(member_id_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.ActionProfileMember)
}

void ActionProfileMember::SharedCtor() {
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_id_) -
      reinterpret_cast<char*>(&action_)) + sizeof(member_id_));
}

ActionProfileMember::~ActionProfileMember() {
  // @@protoc_insertion_point(destructor:p4.v1.ActionProfileMember)
  SharedDtor();
}

void ActionProfileMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete action_;
}

void ActionProfileMember::ArenaDtor(void* object) {
  ActionProfileMember* _this = reinterpret_cast< ActionProfileMember* >(object);
  (void)_this;
}
void ActionProfileMember::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ActionProfileMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionProfileMember::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionProfileMember& ActionProfileMember::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileMember.base);
  return *internal_default_instance();
}


void ActionProfileMember::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ActionProfileMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && action_ != NULL) {
    delete action_;
  }
  action_ = NULL;
  ::memset(&action_profile_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_id_) -
      reinterpret_cast<char*>(&action_profile_id_)) + sizeof(member_id_));
  _internal_metadata_.Clear();
}

bool ActionProfileMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ActionProfileMember)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 action_profile_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_profile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 member_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.Action action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ActionProfileMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ActionProfileMember)
  return false;
#undef DO_
}

void ActionProfileMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ActionProfileMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 action_profile_id = 1;
  if (this->action_profile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->action_profile_id(), output);
  }

  // uint32 member_id = 2;
  if (this->member_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->member_id(), output);
  }

  // .p4.v1.Action action = 3;
  if (this->has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ActionProfileMember)
}

::google::protobuf::uint8* ActionProfileMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ActionProfileMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 action_profile_id = 1;
  if (this->action_profile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->action_profile_id(), target);
  }

  // uint32 member_id = 2;
  if (this->member_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->member_id(), target);
  }

  // .p4.v1.Action action = 3;
  if (this->has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_action(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ActionProfileMember)
  return target;
}

size_t ActionProfileMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ActionProfileMember)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.Action action = 3;
  if (this->has_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_);
  }

  // uint32 action_profile_id = 1;
  if (this->action_profile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_profile_id());
  }

  // uint32 member_id = 2;
  if (this->member_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->member_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionProfileMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ActionProfileMember)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionProfileMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionProfileMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ActionProfileMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ActionProfileMember)
    MergeFrom(*source);
  }
}

void ActionProfileMember::MergeFrom(const ActionProfileMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ActionProfileMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action()) {
    mutable_action()->::p4::v1::Action::MergeFrom(from.action());
  }
  if (from.action_profile_id() != 0) {
    set_action_profile_id(from.action_profile_id());
  }
  if (from.member_id() != 0) {
    set_member_id(from.member_id());
  }
}

void ActionProfileMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ActionProfileMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionProfileMember::CopyFrom(const ActionProfileMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ActionProfileMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionProfileMember::IsInitialized() const {
  return true;
}

void ActionProfileMember::Swap(ActionProfileMember* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ActionProfileMember* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ActionProfileMember::UnsafeArenaSwap(ActionProfileMember* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ActionProfileMember::InternalSwap(ActionProfileMember* other) {
  using std::swap;
  swap(action_, other->action_);
  swap(action_profile_id_, other->action_profile_id_);
  swap(member_id_, other->member_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionProfileMember::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionProfileGroup_Member::InitAsDefaultInstance() {
  ::p4::v1::_ActionProfileGroup_Member_default_instance_.watch_ = 0;
  ::p4::v1::_ActionProfileGroup_Member_default_instance_.watch_port_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionProfileGroup_Member::kMemberIdFieldNumber;
const int ActionProfileGroup_Member::kWeightFieldNumber;
const int ActionProfileGroup_Member::kWatchFieldNumber;
const int ActionProfileGroup_Member::kWatchPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionProfileGroup_Member::ActionProfileGroup_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileGroup_Member.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ActionProfileGroup.Member)
}
ActionProfileGroup_Member::ActionProfileGroup_Member(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileGroup_Member.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ActionProfileGroup.Member)
}
ActionProfileGroup_Member::ActionProfileGroup_Member(const ActionProfileGroup_Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&member_id_, &from.member_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&member_id_)) + sizeof(weight_));
  clear_has_watch_kind();
  switch (from.watch_kind_case()) {
    case kWatch: {
      set_watch(from.watch());
      break;
    }
    case kWatchPort: {
      set_watch_port(from.watch_port());
      break;
    }
    case WATCH_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.ActionProfileGroup.Member)
}

void ActionProfileGroup_Member::SharedCtor() {
  ::memset(&member_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&member_id_)) + sizeof(weight_));
  clear_has_watch_kind();
}

ActionProfileGroup_Member::~ActionProfileGroup_Member() {
  // @@protoc_insertion_point(destructor:p4.v1.ActionProfileGroup.Member)
  SharedDtor();
}

void ActionProfileGroup_Member::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_watch_kind()) {
    clear_watch_kind();
  }
}

void ActionProfileGroup_Member::ArenaDtor(void* object) {
  ActionProfileGroup_Member* _this = reinterpret_cast< ActionProfileGroup_Member* >(object);
  (void)_this;
}
void ActionProfileGroup_Member::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ActionProfileGroup_Member::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionProfileGroup_Member::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionProfileGroup_Member& ActionProfileGroup_Member::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileGroup_Member.base);
  return *internal_default_instance();
}


void ActionProfileGroup_Member::clear_watch_kind() {
// @@protoc_insertion_point(one_of_clear_start:p4.v1.ActionProfileGroup.Member)
  switch (watch_kind_case()) {
    case kWatch: {
      // No need to clear
      break;
    }
    case kWatchPort: {
      watch_kind_.watch_port_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case WATCH_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = WATCH_KIND_NOT_SET;
}


void ActionProfileGroup_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ActionProfileGroup.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&member_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&member_id_)) + sizeof(weight_));
  clear_watch_kind();
  _internal_metadata_.Clear();
}

bool ActionProfileGroup_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ActionProfileGroup.Member)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 member_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 weight = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 watch = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_watch_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &watch_kind_.watch_)));
          set_has_watch();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes watch_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_watch_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ActionProfileGroup.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ActionProfileGroup.Member)
  return false;
#undef DO_
}

void ActionProfileGroup_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ActionProfileGroup.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 member_id = 1;
  if (this->member_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->member_id(), output);
  }

  // int32 weight = 2;
  if (this->weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->weight(), output);
  }

  // int32 watch = 3 [deprecated = true];
  if (has_watch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->watch(), output);
  }

  // bytes watch_port = 4;
  if (has_watch_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->watch_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ActionProfileGroup.Member)
}

::google::protobuf::uint8* ActionProfileGroup_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ActionProfileGroup.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 member_id = 1;
  if (this->member_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->member_id(), target);
  }

  // int32 weight = 2;
  if (this->weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->weight(), target);
  }

  // int32 watch = 3 [deprecated = true];
  if (has_watch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->watch(), target);
  }

  // bytes watch_port = 4;
  if (has_watch_port()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->watch_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ActionProfileGroup.Member)
  return target;
}

size_t ActionProfileGroup_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ActionProfileGroup.Member)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 member_id = 1;
  if (this->member_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->member_id());
  }

  // int32 weight = 2;
  if (this->weight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weight());
  }

  switch (watch_kind_case()) {
    // int32 watch = 3 [deprecated = true];
    case kWatch: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->watch());
      break;
    }
    // bytes watch_port = 4;
    case kWatchPort: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->watch_port());
      break;
    }
    case WATCH_KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionProfileGroup_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ActionProfileGroup.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionProfileGroup_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionProfileGroup_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ActionProfileGroup.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ActionProfileGroup.Member)
    MergeFrom(*source);
  }
}

void ActionProfileGroup_Member::MergeFrom(const ActionProfileGroup_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ActionProfileGroup.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.member_id() != 0) {
    set_member_id(from.member_id());
  }
  if (from.weight() != 0) {
    set_weight(from.weight());
  }
  switch (from.watch_kind_case()) {
    case kWatch: {
      set_watch(from.watch());
      break;
    }
    case kWatchPort: {
      set_watch_port(from.watch_port());
      break;
    }
    case WATCH_KIND_NOT_SET: {
      break;
    }
  }
}

void ActionProfileGroup_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ActionProfileGroup.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionProfileGroup_Member::CopyFrom(const ActionProfileGroup_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ActionProfileGroup.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionProfileGroup_Member::IsInitialized() const {
  return true;
}

void ActionProfileGroup_Member::Swap(ActionProfileGroup_Member* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ActionProfileGroup_Member* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ActionProfileGroup_Member::UnsafeArenaSwap(ActionProfileGroup_Member* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ActionProfileGroup_Member::InternalSwap(ActionProfileGroup_Member* other) {
  using std::swap;
  swap(member_id_, other->member_id_);
  swap(weight_, other->weight_);
  swap(watch_kind_, other->watch_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionProfileGroup_Member::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ActionProfileGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionProfileGroup::kActionProfileIdFieldNumber;
const int ActionProfileGroup::kGroupIdFieldNumber;
const int ActionProfileGroup::kMembersFieldNumber;
const int ActionProfileGroup::kMaxSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionProfileGroup::ActionProfileGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ActionProfileGroup)
}
ActionProfileGroup::ActionProfileGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  members_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileGroup.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ActionProfileGroup)
}
ActionProfileGroup::ActionProfileGroup(const ActionProfileGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&action_profile_id_, &from.action_profile_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_size_) -
    reinterpret_cast<char*>(&action_profile_id_)) + sizeof(max_size_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.ActionProfileGroup)
}

void ActionProfileGroup::SharedCtor() {
  ::memset(&action_profile_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_size_) -
      reinterpret_cast<char*>(&action_profile_id_)) + sizeof(max_size_));
}

ActionProfileGroup::~ActionProfileGroup() {
  // @@protoc_insertion_point(destructor:p4.v1.ActionProfileGroup)
  SharedDtor();
}

void ActionProfileGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ActionProfileGroup::ArenaDtor(void* object) {
  ActionProfileGroup* _this = reinterpret_cast< ActionProfileGroup* >(object);
  (void)_this;
}
void ActionProfileGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ActionProfileGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ActionProfileGroup::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionProfileGroup& ActionProfileGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ActionProfileGroup.base);
  return *internal_default_instance();
}


void ActionProfileGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ActionProfileGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  ::memset(&action_profile_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_size_) -
      reinterpret_cast<char*>(&action_profile_id_)) + sizeof(max_size_));
  _internal_metadata_.Clear();
}

bool ActionProfileGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ActionProfileGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 action_profile_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_profile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.ActionProfileGroup.Member members = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ActionProfileGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ActionProfileGroup)
  return false;
#undef DO_
}

void ActionProfileGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ActionProfileGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 action_profile_id = 1;
  if (this->action_profile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->action_profile_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // repeated .p4.v1.ActionProfileGroup.Member members = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->members(static_cast<int>(i)),
      output);
  }

  // int32 max_size = 4;
  if (this->max_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ActionProfileGroup)
}

::google::protobuf::uint8* ActionProfileGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ActionProfileGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 action_profile_id = 1;
  if (this->action_profile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->action_profile_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // repeated .p4.v1.ActionProfileGroup.Member members = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->members(static_cast<int>(i)), deterministic, target);
  }

  // int32 max_size = 4;
  if (this->max_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ActionProfileGroup)
  return target;
}

size_t ActionProfileGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ActionProfileGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.ActionProfileGroup.Member members = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  // uint32 action_profile_id = 1;
  if (this->action_profile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_profile_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // int32 max_size = 4;
  if (this->max_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionProfileGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ActionProfileGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionProfileGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionProfileGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ActionProfileGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ActionProfileGroup)
    MergeFrom(*source);
  }
}

void ActionProfileGroup::MergeFrom(const ActionProfileGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ActionProfileGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.action_profile_id() != 0) {
    set_action_profile_id(from.action_profile_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.max_size() != 0) {
    set_max_size(from.max_size());
  }
}

void ActionProfileGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ActionProfileGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionProfileGroup::CopyFrom(const ActionProfileGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ActionProfileGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionProfileGroup::IsInitialized() const {
  return true;
}

void ActionProfileGroup::Swap(ActionProfileGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ActionProfileGroup* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ActionProfileGroup::UnsafeArenaSwap(ActionProfileGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ActionProfileGroup::InternalSwap(ActionProfileGroup* other) {
  using std::swap;
  CastToBase(&members_)->InternalSwap(CastToBase(&other->members_));
  swap(action_profile_id_, other->action_profile_id_);
  swap(group_id_, other->group_id_);
  swap(max_size_, other->max_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ActionProfileGroup::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Index::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Index::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Index::Index()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Index.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.Index)
}
Index::Index(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Index.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.Index)
}
Index::Index(const Index& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.Index)
}

void Index::SharedCtor() {
  index_ = GOOGLE_LONGLONG(0);
}

Index::~Index() {
  // @@protoc_insertion_point(destructor:p4.v1.Index)
  SharedDtor();
}

void Index::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Index::ArenaDtor(void* object) {
  Index* _this = reinterpret_cast< Index* >(object);
  (void)_this;
}
void Index::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Index::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Index::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Index& Index::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Index.base);
  return *internal_default_instance();
}


void Index::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.Index)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Index::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.Index)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.Index)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.Index)
  return false;
#undef DO_
}

void Index::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.Index)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.Index)
}

::google::protobuf::uint8* Index::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.Index)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.Index)
  return target;
}

size_t Index::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.Index)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Index::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.Index)
  GOOGLE_DCHECK_NE(&from, this);
  const Index* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Index>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.Index)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.Index)
    MergeFrom(*source);
  }
}

void Index::MergeFrom(const Index& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.Index)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
}

void Index::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.Index)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Index::CopyFrom(const Index& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.Index)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Index::IsInitialized() const {
  return true;
}

void Index::Swap(Index* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Index* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Index::UnsafeArenaSwap(Index* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Index::InternalSwap(Index* other) {
  using std::swap;
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Index::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MeterEntry::InitAsDefaultInstance() {
  ::p4::v1::_MeterEntry_default_instance_._instance.get_mutable()->index_ = const_cast< ::p4::v1::Index*>(
      ::p4::v1::Index::internal_default_instance());
  ::p4::v1::_MeterEntry_default_instance_._instance.get_mutable()->config_ = const_cast< ::p4::v1::MeterConfig*>(
      ::p4::v1::MeterConfig::internal_default_instance());
}
void MeterEntry::unsafe_arena_set_allocated_index(
    ::p4::v1::Index* index) {
  if (GetArenaNoVirtual() == NULL) {
    delete index_;
  }
  index_ = index;
  if (index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.MeterEntry.index)
}
void MeterEntry::unsafe_arena_set_allocated_config(
    ::p4::v1::MeterConfig* config) {
  if (GetArenaNoVirtual() == NULL) {
    delete config_;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.MeterEntry.config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeterEntry::kMeterIdFieldNumber;
const int MeterEntry::kIndexFieldNumber;
const int MeterEntry::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeterEntry::MeterEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MeterEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.MeterEntry)
}
MeterEntry::MeterEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MeterEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.MeterEntry)
}
MeterEntry::MeterEntry(const MeterEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::p4::v1::Index(*from.index_);
  } else {
    index_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::p4::v1::MeterConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  meter_id_ = from.meter_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.MeterEntry)
}

void MeterEntry::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&meter_id_) -
      reinterpret_cast<char*>(&index_)) + sizeof(meter_id_));
}

MeterEntry::~MeterEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.MeterEntry)
  SharedDtor();
}

void MeterEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete index_;
  if (this != internal_default_instance()) delete config_;
}

void MeterEntry::ArenaDtor(void* object) {
  MeterEntry* _this = reinterpret_cast< MeterEntry* >(object);
  (void)_this;
}
void MeterEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MeterEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MeterEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeterEntry& MeterEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MeterEntry.base);
  return *internal_default_instance();
}


void MeterEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.MeterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  meter_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MeterEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.MeterEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 meter_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &meter_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.Index index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.MeterConfig config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.MeterEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.MeterEntry)
  return false;
#undef DO_
}

void MeterEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.MeterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 meter_id = 1;
  if (this->meter_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->meter_id(), output);
  }

  // .p4.v1.Index index = 2;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_index(), output);
  }

  // .p4.v1.MeterConfig config = 3;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.MeterEntry)
}

::google::protobuf::uint8* MeterEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.MeterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 meter_id = 1;
  if (this->meter_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->meter_id(), target);
  }

  // .p4.v1.Index index = 2;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_index(), deterministic, target);
  }

  // .p4.v1.MeterConfig config = 3;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.MeterEntry)
  return target;
}

size_t MeterEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.MeterEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.Index index = 2;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_);
  }

  // .p4.v1.MeterConfig config = 3;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // uint32 meter_id = 1;
  if (this->meter_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->meter_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MeterEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.MeterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const MeterEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeterEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.MeterEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.MeterEntry)
    MergeFrom(*source);
  }
}

void MeterEntry::MergeFrom(const MeterEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.MeterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::p4::v1::Index::MergeFrom(from.index());
  }
  if (from.has_config()) {
    mutable_config()->::p4::v1::MeterConfig::MergeFrom(from.config());
  }
  if (from.meter_id() != 0) {
    set_meter_id(from.meter_id());
  }
}

void MeterEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.MeterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeterEntry::CopyFrom(const MeterEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.MeterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeterEntry::IsInitialized() const {
  return true;
}

void MeterEntry::Swap(MeterEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MeterEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MeterEntry::UnsafeArenaSwap(MeterEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MeterEntry::InternalSwap(MeterEntry* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(config_, other->config_);
  swap(meter_id_, other->meter_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MeterEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DirectMeterEntry::InitAsDefaultInstance() {
  ::p4::v1::_DirectMeterEntry_default_instance_._instance.get_mutable()->table_entry_ = const_cast< ::p4::v1::TableEntry*>(
      ::p4::v1::TableEntry::internal_default_instance());
  ::p4::v1::_DirectMeterEntry_default_instance_._instance.get_mutable()->config_ = const_cast< ::p4::v1::MeterConfig*>(
      ::p4::v1::MeterConfig::internal_default_instance());
}
void DirectMeterEntry::unsafe_arena_set_allocated_table_entry(
    ::p4::v1::TableEntry* table_entry) {
  if (GetArenaNoVirtual() == NULL) {
    delete table_entry_;
  }
  table_entry_ = table_entry;
  if (table_entry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.DirectMeterEntry.table_entry)
}
void DirectMeterEntry::unsafe_arena_set_allocated_config(
    ::p4::v1::MeterConfig* config) {
  if (GetArenaNoVirtual() == NULL) {
    delete config_;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.DirectMeterEntry.config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DirectMeterEntry::kTableEntryFieldNumber;
const int DirectMeterEntry::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirectMeterEntry::DirectMeterEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DirectMeterEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.DirectMeterEntry)
}
DirectMeterEntry::DirectMeterEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DirectMeterEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.DirectMeterEntry)
}
DirectMeterEntry::DirectMeterEntry(const DirectMeterEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table_entry()) {
    table_entry_ = new ::p4::v1::TableEntry(*from.table_entry_);
  } else {
    table_entry_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::p4::v1::MeterConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.DirectMeterEntry)
}

void DirectMeterEntry::SharedCtor() {
  ::memset(&table_entry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&table_entry_)) + sizeof(config_));
}

DirectMeterEntry::~DirectMeterEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.DirectMeterEntry)
  SharedDtor();
}

void DirectMeterEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete table_entry_;
  if (this != internal_default_instance()) delete config_;
}

void DirectMeterEntry::ArenaDtor(void* object) {
  DirectMeterEntry* _this = reinterpret_cast< DirectMeterEntry* >(object);
  (void)_this;
}
void DirectMeterEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DirectMeterEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DirectMeterEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DirectMeterEntry& DirectMeterEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DirectMeterEntry.base);
  return *internal_default_instance();
}


void DirectMeterEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.DirectMeterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && table_entry_ != NULL) {
    delete table_entry_;
  }
  table_entry_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool DirectMeterEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.DirectMeterEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.TableEntry table_entry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.MeterConfig config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.DirectMeterEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.DirectMeterEntry)
  return false;
#undef DO_
}

void DirectMeterEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.DirectMeterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.TableEntry table_entry = 1;
  if (this->has_table_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_table_entry(), output);
  }

  // .p4.v1.MeterConfig config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.DirectMeterEntry)
}

::google::protobuf::uint8* DirectMeterEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.DirectMeterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.TableEntry table_entry = 1;
  if (this->has_table_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_table_entry(), deterministic, target);
  }

  // .p4.v1.MeterConfig config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.DirectMeterEntry)
  return target;
}

size_t DirectMeterEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.DirectMeterEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.TableEntry table_entry = 1;
  if (this->has_table_entry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_entry_);
  }

  // .p4.v1.MeterConfig config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirectMeterEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.DirectMeterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const DirectMeterEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DirectMeterEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.DirectMeterEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.DirectMeterEntry)
    MergeFrom(*source);
  }
}

void DirectMeterEntry::MergeFrom(const DirectMeterEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.DirectMeterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_table_entry()) {
    mutable_table_entry()->::p4::v1::TableEntry::MergeFrom(from.table_entry());
  }
  if (from.has_config()) {
    mutable_config()->::p4::v1::MeterConfig::MergeFrom(from.config());
  }
}

void DirectMeterEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.DirectMeterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirectMeterEntry::CopyFrom(const DirectMeterEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.DirectMeterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectMeterEntry::IsInitialized() const {
  return true;
}

void DirectMeterEntry::Swap(DirectMeterEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DirectMeterEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DirectMeterEntry::UnsafeArenaSwap(DirectMeterEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DirectMeterEntry::InternalSwap(DirectMeterEntry* other) {
  using std::swap;
  swap(table_entry_, other->table_entry_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DirectMeterEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MeterConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeterConfig::kCirFieldNumber;
const int MeterConfig::kCburstFieldNumber;
const int MeterConfig::kPirFieldNumber;
const int MeterConfig::kPburstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeterConfig::MeterConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MeterConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.MeterConfig)
}
MeterConfig::MeterConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MeterConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.MeterConfig)
}
MeterConfig::MeterConfig(const MeterConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cir_, &from.cir_,
    static_cast<size_t>(reinterpret_cast<char*>(&pburst_) -
    reinterpret_cast<char*>(&cir_)) + sizeof(pburst_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.MeterConfig)
}

void MeterConfig::SharedCtor() {
  ::memset(&cir_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pburst_) -
      reinterpret_cast<char*>(&cir_)) + sizeof(pburst_));
}

MeterConfig::~MeterConfig() {
  // @@protoc_insertion_point(destructor:p4.v1.MeterConfig)
  SharedDtor();
}

void MeterConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void MeterConfig::ArenaDtor(void* object) {
  MeterConfig* _this = reinterpret_cast< MeterConfig* >(object);
  (void)_this;
}
void MeterConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MeterConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MeterConfig::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeterConfig& MeterConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MeterConfig.base);
  return *internal_default_instance();
}


void MeterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.MeterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cir_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pburst_) -
      reinterpret_cast<char*>(&cir_)) + sizeof(pburst_));
  _internal_metadata_.Clear();
}

bool MeterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.MeterConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 cir = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 cburst = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cburst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 pir = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 pburst = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pburst_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.MeterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.MeterConfig)
  return false;
#undef DO_
}

void MeterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.MeterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 cir = 1;
  if (this->cir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->cir(), output);
  }

  // int64 cburst = 2;
  if (this->cburst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cburst(), output);
  }

  // int64 pir = 3;
  if (this->pir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->pir(), output);
  }

  // int64 pburst = 4;
  if (this->pburst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->pburst(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.MeterConfig)
}

::google::protobuf::uint8* MeterConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.MeterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 cir = 1;
  if (this->cir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->cir(), target);
  }

  // int64 cburst = 2;
  if (this->cburst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cburst(), target);
  }

  // int64 pir = 3;
  if (this->pir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->pir(), target);
  }

  // int64 pburst = 4;
  if (this->pburst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->pburst(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.MeterConfig)
  return target;
}

size_t MeterConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.MeterConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 cir = 1;
  if (this->cir() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cir());
  }

  // int64 cburst = 2;
  if (this->cburst() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cburst());
  }

  // int64 pir = 3;
  if (this->pir() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pir());
  }

  // int64 pburst = 4;
  if (this->pburst() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pburst());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MeterConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.MeterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MeterConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeterConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.MeterConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.MeterConfig)
    MergeFrom(*source);
  }
}

void MeterConfig::MergeFrom(const MeterConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.MeterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cir() != 0) {
    set_cir(from.cir());
  }
  if (from.cburst() != 0) {
    set_cburst(from.cburst());
  }
  if (from.pir() != 0) {
    set_pir(from.pir());
  }
  if (from.pburst() != 0) {
    set_pburst(from.pburst());
  }
}

void MeterConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.MeterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeterConfig::CopyFrom(const MeterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.MeterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeterConfig::IsInitialized() const {
  return true;
}

void MeterConfig::Swap(MeterConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MeterConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MeterConfig::UnsafeArenaSwap(MeterConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MeterConfig::InternalSwap(MeterConfig* other) {
  using std::swap;
  swap(cir_, other->cir_);
  swap(cburst_, other->cburst_);
  swap(pir_, other->pir_);
  swap(pburst_, other->pburst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MeterConfig::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CounterEntry::InitAsDefaultInstance() {
  ::p4::v1::_CounterEntry_default_instance_._instance.get_mutable()->index_ = const_cast< ::p4::v1::Index*>(
      ::p4::v1::Index::internal_default_instance());
  ::p4::v1::_CounterEntry_default_instance_._instance.get_mutable()->data_ = const_cast< ::p4::v1::CounterData*>(
      ::p4::v1::CounterData::internal_default_instance());
}
void CounterEntry::unsafe_arena_set_allocated_index(
    ::p4::v1::Index* index) {
  if (GetArenaNoVirtual() == NULL) {
    delete index_;
  }
  index_ = index;
  if (index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.CounterEntry.index)
}
void CounterEntry::unsafe_arena_set_allocated_data(
    ::p4::v1::CounterData* data) {
  if (GetArenaNoVirtual() == NULL) {
    delete data_;
  }
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.CounterEntry.data)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CounterEntry::kCounterIdFieldNumber;
const int CounterEntry::kIndexFieldNumber;
const int CounterEntry::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CounterEntry::CounterEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CounterEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.CounterEntry)
}
CounterEntry::CounterEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CounterEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.CounterEntry)
}
CounterEntry::CounterEntry(const CounterEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::p4::v1::Index(*from.index_);
  } else {
    index_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::p4::v1::CounterData(*from.data_);
  } else {
    data_ = NULL;
  }
  counter_id_ = from.counter_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.CounterEntry)
}

void CounterEntry::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&counter_id_) -
      reinterpret_cast<char*>(&index_)) + sizeof(counter_id_));
}

CounterEntry::~CounterEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.CounterEntry)
  SharedDtor();
}

void CounterEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete index_;
  if (this != internal_default_instance()) delete data_;
}

void CounterEntry::ArenaDtor(void* object) {
  CounterEntry* _this = reinterpret_cast< CounterEntry* >(object);
  (void)_this;
}
void CounterEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CounterEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CounterEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CounterEntry& CounterEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CounterEntry.base);
  return *internal_default_instance();
}


void CounterEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.CounterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  counter_id_ = 0u;
  _internal_metadata_.Clear();
}

bool CounterEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.CounterEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 counter_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &counter_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.Index index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.CounterData data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.CounterEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.CounterEntry)
  return false;
#undef DO_
}

void CounterEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.CounterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 counter_id = 1;
  if (this->counter_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->counter_id(), output);
  }

  // .p4.v1.Index index = 2;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_index(), output);
  }

  // .p4.v1.CounterData data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.CounterEntry)
}

::google::protobuf::uint8* CounterEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.CounterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 counter_id = 1;
  if (this->counter_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->counter_id(), target);
  }

  // .p4.v1.Index index = 2;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_index(), deterministic, target);
  }

  // .p4.v1.CounterData data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.CounterEntry)
  return target;
}

size_t CounterEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.CounterEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.Index index = 2;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_);
  }

  // .p4.v1.CounterData data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint32 counter_id = 1;
  if (this->counter_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->counter_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CounterEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.CounterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CounterEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CounterEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.CounterEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.CounterEntry)
    MergeFrom(*source);
  }
}

void CounterEntry::MergeFrom(const CounterEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.CounterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::p4::v1::Index::MergeFrom(from.index());
  }
  if (from.has_data()) {
    mutable_data()->::p4::v1::CounterData::MergeFrom(from.data());
  }
  if (from.counter_id() != 0) {
    set_counter_id(from.counter_id());
  }
}

void CounterEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.CounterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CounterEntry::CopyFrom(const CounterEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.CounterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CounterEntry::IsInitialized() const {
  return true;
}

void CounterEntry::Swap(CounterEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CounterEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CounterEntry::UnsafeArenaSwap(CounterEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CounterEntry::InternalSwap(CounterEntry* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(data_, other->data_);
  swap(counter_id_, other->counter_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CounterEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DirectCounterEntry::InitAsDefaultInstance() {
  ::p4::v1::_DirectCounterEntry_default_instance_._instance.get_mutable()->table_entry_ = const_cast< ::p4::v1::TableEntry*>(
      ::p4::v1::TableEntry::internal_default_instance());
  ::p4::v1::_DirectCounterEntry_default_instance_._instance.get_mutable()->data_ = const_cast< ::p4::v1::CounterData*>(
      ::p4::v1::CounterData::internal_default_instance());
}
void DirectCounterEntry::unsafe_arena_set_allocated_table_entry(
    ::p4::v1::TableEntry* table_entry) {
  if (GetArenaNoVirtual() == NULL) {
    delete table_entry_;
  }
  table_entry_ = table_entry;
  if (table_entry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.DirectCounterEntry.table_entry)
}
void DirectCounterEntry::unsafe_arena_set_allocated_data(
    ::p4::v1::CounterData* data) {
  if (GetArenaNoVirtual() == NULL) {
    delete data_;
  }
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.DirectCounterEntry.data)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DirectCounterEntry::kTableEntryFieldNumber;
const int DirectCounterEntry::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirectCounterEntry::DirectCounterEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DirectCounterEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.DirectCounterEntry)
}
DirectCounterEntry::DirectCounterEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DirectCounterEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.DirectCounterEntry)
}
DirectCounterEntry::DirectCounterEntry(const DirectCounterEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table_entry()) {
    table_entry_ = new ::p4::v1::TableEntry(*from.table_entry_);
  } else {
    table_entry_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::p4::v1::CounterData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.DirectCounterEntry)
}

void DirectCounterEntry::SharedCtor() {
  ::memset(&table_entry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&table_entry_)) + sizeof(data_));
}

DirectCounterEntry::~DirectCounterEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.DirectCounterEntry)
  SharedDtor();
}

void DirectCounterEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete table_entry_;
  if (this != internal_default_instance()) delete data_;
}

void DirectCounterEntry::ArenaDtor(void* object) {
  DirectCounterEntry* _this = reinterpret_cast< DirectCounterEntry* >(object);
  (void)_this;
}
void DirectCounterEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DirectCounterEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DirectCounterEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DirectCounterEntry& DirectCounterEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DirectCounterEntry.base);
  return *internal_default_instance();
}


void DirectCounterEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.DirectCounterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && table_entry_ != NULL) {
    delete table_entry_;
  }
  table_entry_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool DirectCounterEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.DirectCounterEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.TableEntry table_entry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.CounterData data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.DirectCounterEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.DirectCounterEntry)
  return false;
#undef DO_
}

void DirectCounterEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.DirectCounterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.TableEntry table_entry = 1;
  if (this->has_table_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_table_entry(), output);
  }

  // .p4.v1.CounterData data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.DirectCounterEntry)
}

::google::protobuf::uint8* DirectCounterEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.DirectCounterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.TableEntry table_entry = 1;
  if (this->has_table_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_table_entry(), deterministic, target);
  }

  // .p4.v1.CounterData data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.DirectCounterEntry)
  return target;
}

size_t DirectCounterEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.DirectCounterEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.TableEntry table_entry = 1;
  if (this->has_table_entry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_entry_);
  }

  // .p4.v1.CounterData data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirectCounterEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.DirectCounterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const DirectCounterEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DirectCounterEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.DirectCounterEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.DirectCounterEntry)
    MergeFrom(*source);
  }
}

void DirectCounterEntry::MergeFrom(const DirectCounterEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.DirectCounterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_table_entry()) {
    mutable_table_entry()->::p4::v1::TableEntry::MergeFrom(from.table_entry());
  }
  if (from.has_data()) {
    mutable_data()->::p4::v1::CounterData::MergeFrom(from.data());
  }
}

void DirectCounterEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.DirectCounterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirectCounterEntry::CopyFrom(const DirectCounterEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.DirectCounterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectCounterEntry::IsInitialized() const {
  return true;
}

void DirectCounterEntry::Swap(DirectCounterEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DirectCounterEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DirectCounterEntry::UnsafeArenaSwap(DirectCounterEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DirectCounterEntry::InternalSwap(DirectCounterEntry* other) {
  using std::swap;
  swap(table_entry_, other->table_entry_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DirectCounterEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CounterData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CounterData::kByteCountFieldNumber;
const int CounterData::kPacketCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CounterData::CounterData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CounterData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.CounterData)
}
CounterData::CounterData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CounterData.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.CounterData)
}
CounterData::CounterData(const CounterData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&byte_count_, &from.byte_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&packet_count_) -
    reinterpret_cast<char*>(&byte_count_)) + sizeof(packet_count_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.CounterData)
}

void CounterData::SharedCtor() {
  ::memset(&byte_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packet_count_) -
      reinterpret_cast<char*>(&byte_count_)) + sizeof(packet_count_));
}

CounterData::~CounterData() {
  // @@protoc_insertion_point(destructor:p4.v1.CounterData)
  SharedDtor();
}

void CounterData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CounterData::ArenaDtor(void* object) {
  CounterData* _this = reinterpret_cast< CounterData* >(object);
  (void)_this;
}
void CounterData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CounterData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CounterData::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CounterData& CounterData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CounterData.base);
  return *internal_default_instance();
}


void CounterData::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.CounterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&byte_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packet_count_) -
      reinterpret_cast<char*>(&byte_count_)) + sizeof(packet_count_));
  _internal_metadata_.Clear();
}

bool CounterData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.CounterData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 byte_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &byte_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 packet_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packet_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.CounterData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.CounterData)
  return false;
#undef DO_
}

void CounterData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.CounterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 byte_count = 1;
  if (this->byte_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->byte_count(), output);
  }

  // int64 packet_count = 2;
  if (this->packet_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->packet_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.CounterData)
}

::google::protobuf::uint8* CounterData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.CounterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 byte_count = 1;
  if (this->byte_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->byte_count(), target);
  }

  // int64 packet_count = 2;
  if (this->packet_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->packet_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.CounterData)
  return target;
}

size_t CounterData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.CounterData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 byte_count = 1;
  if (this->byte_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->byte_count());
  }

  // int64 packet_count = 2;
  if (this->packet_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packet_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CounterData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.CounterData)
  GOOGLE_DCHECK_NE(&from, this);
  const CounterData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CounterData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.CounterData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.CounterData)
    MergeFrom(*source);
  }
}

void CounterData::MergeFrom(const CounterData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.CounterData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.byte_count() != 0) {
    set_byte_count(from.byte_count());
  }
  if (from.packet_count() != 0) {
    set_packet_count(from.packet_count());
  }
}

void CounterData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.CounterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CounterData::CopyFrom(const CounterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.CounterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CounterData::IsInitialized() const {
  return true;
}

void CounterData::Swap(CounterData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CounterData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CounterData::UnsafeArenaSwap(CounterData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CounterData::InternalSwap(CounterData* other) {
  using std::swap;
  swap(byte_count_, other->byte_count_);
  swap(packet_count_, other->packet_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CounterData::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PacketReplicationEngineEntry::InitAsDefaultInstance() {
  ::p4::v1::_PacketReplicationEngineEntry_default_instance_.multicast_group_entry_ = const_cast< ::p4::v1::MulticastGroupEntry*>(
      ::p4::v1::MulticastGroupEntry::internal_default_instance());
  ::p4::v1::_PacketReplicationEngineEntry_default_instance_.clone_session_entry_ = const_cast< ::p4::v1::CloneSessionEntry*>(
      ::p4::v1::CloneSessionEntry::internal_default_instance());
}
void PacketReplicationEngineEntry::set_allocated_multicast_group_entry(::p4::v1::MulticastGroupEntry* multicast_group_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (multicast_group_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(multicast_group_entry);
    if (message_arena != submessage_arena) {
      multicast_group_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multicast_group_entry, submessage_arena);
    }
    set_has_multicast_group_entry();
    type_.multicast_group_entry_ = multicast_group_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.PacketReplicationEngineEntry.multicast_group_entry)
}
void PacketReplicationEngineEntry::set_allocated_clone_session_entry(::p4::v1::CloneSessionEntry* clone_session_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (clone_session_entry) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(clone_session_entry);
    if (message_arena != submessage_arena) {
      clone_session_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clone_session_entry, submessage_arena);
    }
    set_has_clone_session_entry();
    type_.clone_session_entry_ = clone_session_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.PacketReplicationEngineEntry.clone_session_entry)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketReplicationEngineEntry::kMulticastGroupEntryFieldNumber;
const int PacketReplicationEngineEntry::kCloneSessionEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketReplicationEngineEntry::PacketReplicationEngineEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketReplicationEngineEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.PacketReplicationEngineEntry)
}
PacketReplicationEngineEntry::PacketReplicationEngineEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketReplicationEngineEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.PacketReplicationEngineEntry)
}
PacketReplicationEngineEntry::PacketReplicationEngineEntry(const PacketReplicationEngineEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kMulticastGroupEntry: {
      mutable_multicast_group_entry()->::p4::v1::MulticastGroupEntry::MergeFrom(from.multicast_group_entry());
      break;
    }
    case kCloneSessionEntry: {
      mutable_clone_session_entry()->::p4::v1::CloneSessionEntry::MergeFrom(from.clone_session_entry());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.PacketReplicationEngineEntry)
}

void PacketReplicationEngineEntry::SharedCtor() {
  clear_has_type();
}

PacketReplicationEngineEntry::~PacketReplicationEngineEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.PacketReplicationEngineEntry)
  SharedDtor();
}

void PacketReplicationEngineEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_type()) {
    clear_type();
  }
}

void PacketReplicationEngineEntry::ArenaDtor(void* object) {
  PacketReplicationEngineEntry* _this = reinterpret_cast< PacketReplicationEngineEntry* >(object);
  (void)_this;
}
void PacketReplicationEngineEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PacketReplicationEngineEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PacketReplicationEngineEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketReplicationEngineEntry& PacketReplicationEngineEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketReplicationEngineEntry.base);
  return *internal_default_instance();
}


void PacketReplicationEngineEntry::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:p4.v1.PacketReplicationEngineEntry)
  switch (type_case()) {
    case kMulticastGroupEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_.multicast_group_entry_;
      }
      break;
    }
    case kCloneSessionEntry: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_.clone_session_entry_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void PacketReplicationEngineEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.PacketReplicationEngineEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool PacketReplicationEngineEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.PacketReplicationEngineEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.MulticastGroupEntry multicast_group_entry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multicast_group_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.CloneSessionEntry clone_session_entry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clone_session_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.PacketReplicationEngineEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.PacketReplicationEngineEntry)
  return false;
#undef DO_
}

void PacketReplicationEngineEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.PacketReplicationEngineEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.MulticastGroupEntry multicast_group_entry = 1;
  if (has_multicast_group_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_multicast_group_entry(), output);
  }

  // .p4.v1.CloneSessionEntry clone_session_entry = 2;
  if (has_clone_session_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_clone_session_entry(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.PacketReplicationEngineEntry)
}

::google::protobuf::uint8* PacketReplicationEngineEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.PacketReplicationEngineEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.MulticastGroupEntry multicast_group_entry = 1;
  if (has_multicast_group_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_multicast_group_entry(), deterministic, target);
  }

  // .p4.v1.CloneSessionEntry clone_session_entry = 2;
  if (has_clone_session_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_clone_session_entry(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.PacketReplicationEngineEntry)
  return target;
}

size_t PacketReplicationEngineEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.PacketReplicationEngineEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // .p4.v1.MulticastGroupEntry multicast_group_entry = 1;
    case kMulticastGroupEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.multicast_group_entry_);
      break;
    }
    // .p4.v1.CloneSessionEntry clone_session_entry = 2;
    case kCloneSessionEntry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.clone_session_entry_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PacketReplicationEngineEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.PacketReplicationEngineEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketReplicationEngineEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketReplicationEngineEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.PacketReplicationEngineEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.PacketReplicationEngineEntry)
    MergeFrom(*source);
  }
}

void PacketReplicationEngineEntry::MergeFrom(const PacketReplicationEngineEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.PacketReplicationEngineEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kMulticastGroupEntry: {
      mutable_multicast_group_entry()->::p4::v1::MulticastGroupEntry::MergeFrom(from.multicast_group_entry());
      break;
    }
    case kCloneSessionEntry: {
      mutable_clone_session_entry()->::p4::v1::CloneSessionEntry::MergeFrom(from.clone_session_entry());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void PacketReplicationEngineEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.PacketReplicationEngineEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketReplicationEngineEntry::CopyFrom(const PacketReplicationEngineEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.PacketReplicationEngineEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketReplicationEngineEntry::IsInitialized() const {
  return true;
}

void PacketReplicationEngineEntry::Swap(PacketReplicationEngineEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PacketReplicationEngineEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PacketReplicationEngineEntry::UnsafeArenaSwap(PacketReplicationEngineEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PacketReplicationEngineEntry::InternalSwap(PacketReplicationEngineEntry* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PacketReplicationEngineEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Replica::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Replica::kEgressPortFieldNumber;
const int Replica::kInstanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Replica::Replica()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Replica.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.Replica)
}
Replica::Replica(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Replica.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.Replica)
}
Replica::Replica(const Replica& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&egress_port_, &from.egress_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&instance_) -
    reinterpret_cast<char*>(&egress_port_)) + sizeof(instance_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.Replica)
}

void Replica::SharedCtor() {
  ::memset(&egress_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instance_) -
      reinterpret_cast<char*>(&egress_port_)) + sizeof(instance_));
}

Replica::~Replica() {
  // @@protoc_insertion_point(destructor:p4.v1.Replica)
  SharedDtor();
}

void Replica::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Replica::ArenaDtor(void* object) {
  Replica* _this = reinterpret_cast< Replica* >(object);
  (void)_this;
}
void Replica::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Replica::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Replica::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Replica& Replica::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Replica.base);
  return *internal_default_instance();
}


void Replica::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.Replica)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&egress_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instance_) -
      reinterpret_cast<char*>(&egress_port_)) + sizeof(instance_));
  _internal_metadata_.Clear();
}

bool Replica::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.Replica)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 egress_port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &egress_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 instance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.Replica)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.Replica)
  return false;
#undef DO_
}

void Replica::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.Replica)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 egress_port = 1;
  if (this->egress_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->egress_port(), output);
  }

  // uint32 instance = 2;
  if (this->instance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->instance(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.Replica)
}

::google::protobuf::uint8* Replica::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.Replica)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 egress_port = 1;
  if (this->egress_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->egress_port(), target);
  }

  // uint32 instance = 2;
  if (this->instance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->instance(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.Replica)
  return target;
}

size_t Replica::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.Replica)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 egress_port = 1;
  if (this->egress_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->egress_port());
  }

  // uint32 instance = 2;
  if (this->instance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->instance());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Replica::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.Replica)
  GOOGLE_DCHECK_NE(&from, this);
  const Replica* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Replica>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.Replica)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.Replica)
    MergeFrom(*source);
  }
}

void Replica::MergeFrom(const Replica& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.Replica)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.egress_port() != 0) {
    set_egress_port(from.egress_port());
  }
  if (from.instance() != 0) {
    set_instance(from.instance());
  }
}

void Replica::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.Replica)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Replica::CopyFrom(const Replica& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.Replica)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Replica::IsInitialized() const {
  return true;
}

void Replica::Swap(Replica* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Replica* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Replica::UnsafeArenaSwap(Replica* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Replica::InternalSwap(Replica* other) {
  using std::swap;
  swap(egress_port_, other->egress_port_);
  swap(instance_, other->instance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Replica::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MulticastGroupEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MulticastGroupEntry::kMulticastGroupIdFieldNumber;
const int MulticastGroupEntry::kReplicasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MulticastGroupEntry::MulticastGroupEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MulticastGroupEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.MulticastGroupEntry)
}
MulticastGroupEntry::MulticastGroupEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  replicas_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MulticastGroupEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.MulticastGroupEntry)
}
MulticastGroupEntry::MulticastGroupEntry(const MulticastGroupEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      replicas_(from.replicas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  multicast_group_id_ = from.multicast_group_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.MulticastGroupEntry)
}

void MulticastGroupEntry::SharedCtor() {
  multicast_group_id_ = 0u;
}

MulticastGroupEntry::~MulticastGroupEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.MulticastGroupEntry)
  SharedDtor();
}

void MulticastGroupEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void MulticastGroupEntry::ArenaDtor(void* object) {
  MulticastGroupEntry* _this = reinterpret_cast< MulticastGroupEntry* >(object);
  (void)_this;
}
void MulticastGroupEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MulticastGroupEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MulticastGroupEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MulticastGroupEntry& MulticastGroupEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MulticastGroupEntry.base);
  return *internal_default_instance();
}


void MulticastGroupEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.MulticastGroupEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replicas_.Clear();
  multicast_group_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MulticastGroupEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.MulticastGroupEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 multicast_group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &multicast_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.Replica replicas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replicas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.MulticastGroupEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.MulticastGroupEntry)
  return false;
#undef DO_
}

void MulticastGroupEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.MulticastGroupEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 multicast_group_id = 1;
  if (this->multicast_group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->multicast_group_id(), output);
  }

  // repeated .p4.v1.Replica replicas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replicas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->replicas(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.MulticastGroupEntry)
}

::google::protobuf::uint8* MulticastGroupEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.MulticastGroupEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 multicast_group_id = 1;
  if (this->multicast_group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->multicast_group_id(), target);
  }

  // repeated .p4.v1.Replica replicas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replicas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->replicas(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.MulticastGroupEntry)
  return target;
}

size_t MulticastGroupEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.MulticastGroupEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.Replica replicas = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->replicas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replicas(static_cast<int>(i)));
    }
  }

  // uint32 multicast_group_id = 1;
  if (this->multicast_group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->multicast_group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MulticastGroupEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.MulticastGroupEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const MulticastGroupEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MulticastGroupEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.MulticastGroupEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.MulticastGroupEntry)
    MergeFrom(*source);
  }
}

void MulticastGroupEntry::MergeFrom(const MulticastGroupEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.MulticastGroupEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replicas_.MergeFrom(from.replicas_);
  if (from.multicast_group_id() != 0) {
    set_multicast_group_id(from.multicast_group_id());
  }
}

void MulticastGroupEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.MulticastGroupEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MulticastGroupEntry::CopyFrom(const MulticastGroupEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.MulticastGroupEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MulticastGroupEntry::IsInitialized() const {
  return true;
}

void MulticastGroupEntry::Swap(MulticastGroupEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MulticastGroupEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MulticastGroupEntry::UnsafeArenaSwap(MulticastGroupEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MulticastGroupEntry::InternalSwap(MulticastGroupEntry* other) {
  using std::swap;
  CastToBase(&replicas_)->InternalSwap(CastToBase(&other->replicas_));
  swap(multicast_group_id_, other->multicast_group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MulticastGroupEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloneSessionEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloneSessionEntry::kSessionIdFieldNumber;
const int CloneSessionEntry::kReplicasFieldNumber;
const int CloneSessionEntry::kClassOfServiceFieldNumber;
const int CloneSessionEntry::kPacketLengthBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloneSessionEntry::CloneSessionEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CloneSessionEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.CloneSessionEntry)
}
CloneSessionEntry::CloneSessionEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  replicas_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CloneSessionEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.CloneSessionEntry)
}
CloneSessionEntry::CloneSessionEntry(const CloneSessionEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      replicas_(from.replicas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&packet_length_bytes_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(packet_length_bytes_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.CloneSessionEntry)
}

void CloneSessionEntry::SharedCtor() {
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packet_length_bytes_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(packet_length_bytes_));
}

CloneSessionEntry::~CloneSessionEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.CloneSessionEntry)
  SharedDtor();
}

void CloneSessionEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CloneSessionEntry::ArenaDtor(void* object) {
  CloneSessionEntry* _this = reinterpret_cast< CloneSessionEntry* >(object);
  (void)_this;
}
void CloneSessionEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CloneSessionEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloneSessionEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloneSessionEntry& CloneSessionEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CloneSessionEntry.base);
  return *internal_default_instance();
}


void CloneSessionEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.CloneSessionEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  replicas_.Clear();
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packet_length_bytes_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(packet_length_bytes_));
  _internal_metadata_.Clear();
}

bool CloneSessionEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.CloneSessionEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.Replica replicas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replicas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 class_of_service = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class_of_service_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 packet_length_bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &packet_length_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.CloneSessionEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.CloneSessionEntry)
  return false;
#undef DO_
}

void CloneSessionEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.CloneSessionEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // repeated .p4.v1.Replica replicas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replicas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->replicas(static_cast<int>(i)),
      output);
  }

  // uint32 class_of_service = 3;
  if (this->class_of_service() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->class_of_service(), output);
  }

  // int32 packet_length_bytes = 4;
  if (this->packet_length_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->packet_length_bytes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.CloneSessionEntry)
}

::google::protobuf::uint8* CloneSessionEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.CloneSessionEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // repeated .p4.v1.Replica replicas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replicas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->replicas(static_cast<int>(i)), deterministic, target);
  }

  // uint32 class_of_service = 3;
  if (this->class_of_service() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->class_of_service(), target);
  }

  // int32 packet_length_bytes = 4;
  if (this->packet_length_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->packet_length_bytes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.CloneSessionEntry)
  return target;
}

size_t CloneSessionEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.CloneSessionEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.Replica replicas = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->replicas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replicas(static_cast<int>(i)));
    }
  }

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  // uint32 class_of_service = 3;
  if (this->class_of_service() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->class_of_service());
  }

  // int32 packet_length_bytes = 4;
  if (this->packet_length_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->packet_length_bytes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloneSessionEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.CloneSessionEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CloneSessionEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloneSessionEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.CloneSessionEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.CloneSessionEntry)
    MergeFrom(*source);
  }
}

void CloneSessionEntry::MergeFrom(const CloneSessionEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.CloneSessionEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  replicas_.MergeFrom(from.replicas_);
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.class_of_service() != 0) {
    set_class_of_service(from.class_of_service());
  }
  if (from.packet_length_bytes() != 0) {
    set_packet_length_bytes(from.packet_length_bytes());
  }
}

void CloneSessionEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.CloneSessionEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloneSessionEntry::CopyFrom(const CloneSessionEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.CloneSessionEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloneSessionEntry::IsInitialized() const {
  return true;
}

void CloneSessionEntry::Swap(CloneSessionEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CloneSessionEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CloneSessionEntry::UnsafeArenaSwap(CloneSessionEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CloneSessionEntry::InternalSwap(CloneSessionEntry* other) {
  using std::swap;
  CastToBase(&replicas_)->InternalSwap(CastToBase(&other->replicas_));
  swap(session_id_, other->session_id_);
  swap(class_of_service_, other->class_of_service_);
  swap(packet_length_bytes_, other->packet_length_bytes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloneSessionEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValueSetMember::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueSetMember::kMatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueSetMember::ValueSetMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ValueSetMember.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ValueSetMember)
}
ValueSetMember::ValueSetMember(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  match_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ValueSetMember.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ValueSetMember)
}
ValueSetMember::ValueSetMember(const ValueSetMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      match_(from.match_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.v1.ValueSetMember)
}

void ValueSetMember::SharedCtor() {
}

ValueSetMember::~ValueSetMember() {
  // @@protoc_insertion_point(destructor:p4.v1.ValueSetMember)
  SharedDtor();
}

void ValueSetMember::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ValueSetMember::ArenaDtor(void* object) {
  ValueSetMember* _this = reinterpret_cast< ValueSetMember* >(object);
  (void)_this;
}
void ValueSetMember::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ValueSetMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValueSetMember::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueSetMember& ValueSetMember::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ValueSetMember.base);
  return *internal_default_instance();
}


void ValueSetMember::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ValueSetMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_.Clear();
  _internal_metadata_.Clear();
}

bool ValueSetMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ValueSetMember)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.v1.FieldMatch match = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_match()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ValueSetMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ValueSetMember)
  return false;
#undef DO_
}

void ValueSetMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ValueSetMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.FieldMatch match = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->match_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->match(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ValueSetMember)
}

::google::protobuf::uint8* ValueSetMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ValueSetMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.FieldMatch match = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->match_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->match(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ValueSetMember)
  return target;
}

size_t ValueSetMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ValueSetMember)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.FieldMatch match = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->match_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->match(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValueSetMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ValueSetMember)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueSetMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueSetMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ValueSetMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ValueSetMember)
    MergeFrom(*source);
  }
}

void ValueSetMember::MergeFrom(const ValueSetMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ValueSetMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  match_.MergeFrom(from.match_);
}

void ValueSetMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ValueSetMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueSetMember::CopyFrom(const ValueSetMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ValueSetMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueSetMember::IsInitialized() const {
  return true;
}

void ValueSetMember::Swap(ValueSetMember* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValueSetMember* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ValueSetMember::UnsafeArenaSwap(ValueSetMember* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValueSetMember::InternalSwap(ValueSetMember* other) {
  using std::swap;
  CastToBase(&match_)->InternalSwap(CastToBase(&other->match_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValueSetMember::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValueSetEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueSetEntry::kValueSetIdFieldNumber;
const int ValueSetEntry::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueSetEntry::ValueSetEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ValueSetEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ValueSetEntry)
}
ValueSetEntry::ValueSetEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  members_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ValueSetEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ValueSetEntry)
}
ValueSetEntry::ValueSetEntry(const ValueSetEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_set_id_ = from.value_set_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.ValueSetEntry)
}

void ValueSetEntry::SharedCtor() {
  value_set_id_ = 0u;
}

ValueSetEntry::~ValueSetEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.ValueSetEntry)
  SharedDtor();
}

void ValueSetEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ValueSetEntry::ArenaDtor(void* object) {
  ValueSetEntry* _this = reinterpret_cast< ValueSetEntry* >(object);
  (void)_this;
}
void ValueSetEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ValueSetEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValueSetEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueSetEntry& ValueSetEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ValueSetEntry.base);
  return *internal_default_instance();
}


void ValueSetEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ValueSetEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  value_set_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ValueSetEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ValueSetEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 value_set_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_set_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.ValueSetMember members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ValueSetEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ValueSetEntry)
  return false;
#undef DO_
}

void ValueSetEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ValueSetEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value_set_id = 1;
  if (this->value_set_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value_set_id(), output);
  }

  // repeated .p4.v1.ValueSetMember members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->members(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ValueSetEntry)
}

::google::protobuf::uint8* ValueSetEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ValueSetEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value_set_id = 1;
  if (this->value_set_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value_set_id(), target);
  }

  // repeated .p4.v1.ValueSetMember members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->members_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->members(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ValueSetEntry)
  return target;
}

size_t ValueSetEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ValueSetEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.ValueSetMember members = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->members_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->members(static_cast<int>(i)));
    }
  }

  // uint32 value_set_id = 1;
  if (this->value_set_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value_set_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValueSetEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ValueSetEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueSetEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueSetEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ValueSetEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ValueSetEntry)
    MergeFrom(*source);
  }
}

void ValueSetEntry::MergeFrom(const ValueSetEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ValueSetEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.value_set_id() != 0) {
    set_value_set_id(from.value_set_id());
  }
}

void ValueSetEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ValueSetEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueSetEntry::CopyFrom(const ValueSetEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ValueSetEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueSetEntry::IsInitialized() const {
  return true;
}

void ValueSetEntry::Swap(ValueSetEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValueSetEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ValueSetEntry::UnsafeArenaSwap(ValueSetEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValueSetEntry::InternalSwap(ValueSetEntry* other) {
  using std::swap;
  CastToBase(&members_)->InternalSwap(CastToBase(&other->members_));
  swap(value_set_id_, other->value_set_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValueSetEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterEntry::InitAsDefaultInstance() {
  ::p4::v1::_RegisterEntry_default_instance_._instance.get_mutable()->index_ = const_cast< ::p4::v1::Index*>(
      ::p4::v1::Index::internal_default_instance());
  ::p4::v1::_RegisterEntry_default_instance_._instance.get_mutable()->data_ = const_cast< ::p4::v1::P4Data*>(
      ::p4::v1::P4Data::internal_default_instance());
}
void RegisterEntry::unsafe_arena_set_allocated_index(
    ::p4::v1::Index* index) {
  if (GetArenaNoVirtual() == NULL) {
    delete index_;
  }
  index_ = index;
  if (index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.RegisterEntry.index)
}
void RegisterEntry::unsafe_arena_set_allocated_data(
    ::p4::v1::P4Data* data) {
  if (GetArenaNoVirtual() == NULL) {
    delete data_;
  }
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.RegisterEntry.data)
}
void RegisterEntry::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterEntry::kRegisterIdFieldNumber;
const int RegisterEntry::kIndexFieldNumber;
const int RegisterEntry::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterEntry::RegisterEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_RegisterEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.RegisterEntry)
}
RegisterEntry::RegisterEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_RegisterEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.RegisterEntry)
}
RegisterEntry::RegisterEntry(const RegisterEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::p4::v1::Index(*from.index_);
  } else {
    index_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::p4::v1::P4Data(*from.data_);
  } else {
    data_ = NULL;
  }
  register_id_ = from.register_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.RegisterEntry)
}

void RegisterEntry::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&register_id_) -
      reinterpret_cast<char*>(&index_)) + sizeof(register_id_));
}

RegisterEntry::~RegisterEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.RegisterEntry)
  SharedDtor();
}

void RegisterEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete index_;
  if (this != internal_default_instance()) delete data_;
}

void RegisterEntry::ArenaDtor(void* object) {
  RegisterEntry* _this = reinterpret_cast< RegisterEntry* >(object);
  (void)_this;
}
void RegisterEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegisterEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterEntry& RegisterEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_RegisterEntry.base);
  return *internal_default_instance();
}


void RegisterEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.RegisterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  register_id_ = 0u;
  _internal_metadata_.Clear();
}

bool RegisterEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.RegisterEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 register_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &register_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.Index index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.P4Data data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.RegisterEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.RegisterEntry)
  return false;
#undef DO_
}

void RegisterEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.RegisterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 register_id = 1;
  if (this->register_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->register_id(), output);
  }

  // .p4.v1.Index index = 2;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_index(), output);
  }

  // .p4.v1.P4Data data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.RegisterEntry)
}

::google::protobuf::uint8* RegisterEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.RegisterEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 register_id = 1;
  if (this->register_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->register_id(), target);
  }

  // .p4.v1.Index index = 2;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_index(), deterministic, target);
  }

  // .p4.v1.P4Data data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.RegisterEntry)
  return target;
}

size_t RegisterEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.RegisterEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.Index index = 2;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_);
  }

  // .p4.v1.P4Data data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint32 register_id = 1;
  if (this->register_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->register_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.RegisterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.RegisterEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.RegisterEntry)
    MergeFrom(*source);
  }
}

void RegisterEntry::MergeFrom(const RegisterEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.RegisterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::p4::v1::Index::MergeFrom(from.index());
  }
  if (from.has_data()) {
    mutable_data()->::p4::v1::P4Data::MergeFrom(from.data());
  }
  if (from.register_id() != 0) {
    set_register_id(from.register_id());
  }
}

void RegisterEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.RegisterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterEntry::CopyFrom(const RegisterEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.RegisterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterEntry::IsInitialized() const {
  return true;
}

void RegisterEntry::Swap(RegisterEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegisterEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegisterEntry::UnsafeArenaSwap(RegisterEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegisterEntry::InternalSwap(RegisterEntry* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(data_, other->data_);
  swap(register_id_, other->register_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigestEntry_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestEntry_Config::kMaxTimeoutNsFieldNumber;
const int DigestEntry_Config::kMaxListSizeFieldNumber;
const int DigestEntry_Config::kAckTimeoutNsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestEntry_Config::DigestEntry_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestEntry_Config.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.DigestEntry.Config)
}
DigestEntry_Config::DigestEntry_Config(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestEntry_Config.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.DigestEntry.Config)
}
DigestEntry_Config::DigestEntry_Config(const DigestEntry_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_timeout_ns_, &from.max_timeout_ns_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_list_size_) -
    reinterpret_cast<char*>(&max_timeout_ns_)) + sizeof(max_list_size_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.DigestEntry.Config)
}

void DigestEntry_Config::SharedCtor() {
  ::memset(&max_timeout_ns_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_list_size_) -
      reinterpret_cast<char*>(&max_timeout_ns_)) + sizeof(max_list_size_));
}

DigestEntry_Config::~DigestEntry_Config() {
  // @@protoc_insertion_point(destructor:p4.v1.DigestEntry.Config)
  SharedDtor();
}

void DigestEntry_Config::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DigestEntry_Config::ArenaDtor(void* object) {
  DigestEntry_Config* _this = reinterpret_cast< DigestEntry_Config* >(object);
  (void)_this;
}
void DigestEntry_Config::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DigestEntry_Config::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigestEntry_Config::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigestEntry_Config& DigestEntry_Config::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestEntry_Config.base);
  return *internal_default_instance();
}


void DigestEntry_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.DigestEntry.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&max_timeout_ns_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_list_size_) -
      reinterpret_cast<char*>(&max_timeout_ns_)) + sizeof(max_list_size_));
  _internal_metadata_.Clear();
}

bool DigestEntry_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.DigestEntry.Config)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 max_timeout_ns = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_timeout_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_list_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_list_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ack_timeout_ns = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ack_timeout_ns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.DigestEntry.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.DigestEntry.Config)
  return false;
#undef DO_
}

void DigestEntry_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.DigestEntry.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 max_timeout_ns = 1;
  if (this->max_timeout_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->max_timeout_ns(), output);
  }

  // int32 max_list_size = 2;
  if (this->max_list_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_list_size(), output);
  }

  // int64 ack_timeout_ns = 3;
  if (this->ack_timeout_ns() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->ack_timeout_ns(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.DigestEntry.Config)
}

::google::protobuf::uint8* DigestEntry_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.DigestEntry.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 max_timeout_ns = 1;
  if (this->max_timeout_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->max_timeout_ns(), target);
  }

  // int32 max_list_size = 2;
  if (this->max_list_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_list_size(), target);
  }

  // int64 ack_timeout_ns = 3;
  if (this->ack_timeout_ns() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->ack_timeout_ns(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.DigestEntry.Config)
  return target;
}

size_t DigestEntry_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.DigestEntry.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 max_timeout_ns = 1;
  if (this->max_timeout_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->max_timeout_ns());
  }

  // int64 ack_timeout_ns = 3;
  if (this->ack_timeout_ns() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ack_timeout_ns());
  }

  // int32 max_list_size = 2;
  if (this->max_list_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_list_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestEntry_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.DigestEntry.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestEntry_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigestEntry_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.DigestEntry.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.DigestEntry.Config)
    MergeFrom(*source);
  }
}

void DigestEntry_Config::MergeFrom(const DigestEntry_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.DigestEntry.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.max_timeout_ns() != 0) {
    set_max_timeout_ns(from.max_timeout_ns());
  }
  if (from.ack_timeout_ns() != 0) {
    set_ack_timeout_ns(from.ack_timeout_ns());
  }
  if (from.max_list_size() != 0) {
    set_max_list_size(from.max_list_size());
  }
}

void DigestEntry_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.DigestEntry.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestEntry_Config::CopyFrom(const DigestEntry_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.DigestEntry.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestEntry_Config::IsInitialized() const {
  return true;
}

void DigestEntry_Config::Swap(DigestEntry_Config* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DigestEntry_Config* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DigestEntry_Config::UnsafeArenaSwap(DigestEntry_Config* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DigestEntry_Config::InternalSwap(DigestEntry_Config* other) {
  using std::swap;
  swap(max_timeout_ns_, other->max_timeout_ns_);
  swap(ack_timeout_ns_, other->ack_timeout_ns_);
  swap(max_list_size_, other->max_list_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigestEntry_Config::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigestEntry::InitAsDefaultInstance() {
  ::p4::v1::_DigestEntry_default_instance_._instance.get_mutable()->config_ = const_cast< ::p4::v1::DigestEntry_Config*>(
      ::p4::v1::DigestEntry_Config::internal_default_instance());
}
void DigestEntry::unsafe_arena_set_allocated_config(
    ::p4::v1::DigestEntry_Config* config) {
  if (GetArenaNoVirtual() == NULL) {
    delete config_;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.DigestEntry.config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestEntry::kDigestIdFieldNumber;
const int DigestEntry::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestEntry::DigestEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestEntry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.DigestEntry)
}
DigestEntry::DigestEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestEntry.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.DigestEntry)
}
DigestEntry::DigestEntry(const DigestEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::p4::v1::DigestEntry_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  digest_id_ = from.digest_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.DigestEntry)
}

void DigestEntry::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&digest_id_) -
      reinterpret_cast<char*>(&config_)) + sizeof(digest_id_));
}

DigestEntry::~DigestEntry() {
  // @@protoc_insertion_point(destructor:p4.v1.DigestEntry)
  SharedDtor();
}

void DigestEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete config_;
}

void DigestEntry::ArenaDtor(void* object) {
  DigestEntry* _this = reinterpret_cast< DigestEntry* >(object);
  (void)_this;
}
void DigestEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DigestEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigestEntry::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigestEntry& DigestEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestEntry.base);
  return *internal_default_instance();
}


void DigestEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.DigestEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  digest_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DigestEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.DigestEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 digest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &digest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.DigestEntry.Config config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.DigestEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.DigestEntry)
  return false;
#undef DO_
}

void DigestEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.DigestEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 digest_id = 1;
  if (this->digest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->digest_id(), output);
  }

  // .p4.v1.DigestEntry.Config config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.DigestEntry)
}

::google::protobuf::uint8* DigestEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.DigestEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 digest_id = 1;
  if (this->digest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->digest_id(), target);
  }

  // .p4.v1.DigestEntry.Config config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.DigestEntry)
  return target;
}

size_t DigestEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.DigestEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.DigestEntry.Config config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // uint32 digest_id = 1;
  if (this->digest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->digest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.DigestEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigestEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.DigestEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.DigestEntry)
    MergeFrom(*source);
  }
}

void DigestEntry::MergeFrom(const DigestEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.DigestEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::p4::v1::DigestEntry_Config::MergeFrom(from.config());
  }
  if (from.digest_id() != 0) {
    set_digest_id(from.digest_id());
  }
}

void DigestEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.DigestEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestEntry::CopyFrom(const DigestEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.DigestEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestEntry::IsInitialized() const {
  return true;
}

void DigestEntry::Swap(DigestEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DigestEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DigestEntry::UnsafeArenaSwap(DigestEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DigestEntry::InternalSwap(DigestEntry* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(digest_id_, other->digest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigestEntry::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamMessageRequest::InitAsDefaultInstance() {
  ::p4::v1::_StreamMessageRequest_default_instance_.arbitration_ = const_cast< ::p4::v1::MasterArbitrationUpdate*>(
      ::p4::v1::MasterArbitrationUpdate::internal_default_instance());
  ::p4::v1::_StreamMessageRequest_default_instance_.packet_ = const_cast< ::p4::v1::PacketOut*>(
      ::p4::v1::PacketOut::internal_default_instance());
  ::p4::v1::_StreamMessageRequest_default_instance_.digest_ack_ = const_cast< ::p4::v1::DigestListAck*>(
      ::p4::v1::DigestListAck::internal_default_instance());
  ::p4::v1::_StreamMessageRequest_default_instance_.other_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void StreamMessageRequest::set_allocated_arbitration(::p4::v1::MasterArbitrationUpdate* arbitration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_update();
  if (arbitration) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(arbitration);
    if (message_arena != submessage_arena) {
      arbitration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arbitration, submessage_arena);
    }
    set_has_arbitration();
    update_.arbitration_ = arbitration;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageRequest.arbitration)
}
void StreamMessageRequest::set_allocated_packet(::p4::v1::PacketOut* packet) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_update();
  if (packet) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(packet);
    if (message_arena != submessage_arena) {
      packet = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packet, submessage_arena);
    }
    set_has_packet();
    update_.packet_ = packet;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageRequest.packet)
}
void StreamMessageRequest::set_allocated_digest_ack(::p4::v1::DigestListAck* digest_ack) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_update();
  if (digest_ack) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(digest_ack);
    if (message_arena != submessage_arena) {
      digest_ack = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, digest_ack, submessage_arena);
    }
    set_has_digest_ack();
    update_.digest_ack_ = digest_ack;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageRequest.digest_ack)
}
void StreamMessageRequest::set_allocated_other(::google::protobuf::Any* other) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_update();
  if (other) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      other = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, other, submessage_arena);
    }
    set_has_other();
    update_.other_ = other;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageRequest.other)
}
void StreamMessageRequest::clear_other() {
  if (has_other()) {
    if (GetArenaNoVirtual() == NULL) {
      delete update_.other_;
    }
    clear_has_update();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamMessageRequest::kArbitrationFieldNumber;
const int StreamMessageRequest::kPacketFieldNumber;
const int StreamMessageRequest::kDigestAckFieldNumber;
const int StreamMessageRequest::kOtherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamMessageRequest::StreamMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.StreamMessageRequest)
}
StreamMessageRequest::StreamMessageRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamMessageRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.StreamMessageRequest)
}
StreamMessageRequest::StreamMessageRequest(const StreamMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_update();
  switch (from.update_case()) {
    case kArbitration: {
      mutable_arbitration()->::p4::v1::MasterArbitrationUpdate::MergeFrom(from.arbitration());
      break;
    }
    case kPacket: {
      mutable_packet()->::p4::v1::PacketOut::MergeFrom(from.packet());
      break;
    }
    case kDigestAck: {
      mutable_digest_ack()->::p4::v1::DigestListAck::MergeFrom(from.digest_ack());
      break;
    }
    case kOther: {
      mutable_other()->::google::protobuf::Any::MergeFrom(from.other());
      break;
    }
    case UPDATE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.StreamMessageRequest)
}

void StreamMessageRequest::SharedCtor() {
  clear_has_update();
}

StreamMessageRequest::~StreamMessageRequest() {
  // @@protoc_insertion_point(destructor:p4.v1.StreamMessageRequest)
  SharedDtor();
}

void StreamMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_update()) {
    clear_update();
  }
}

void StreamMessageRequest::ArenaDtor(void* object) {
  StreamMessageRequest* _this = reinterpret_cast< StreamMessageRequest* >(object);
  (void)_this;
}
void StreamMessageRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void StreamMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamMessageRequest::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamMessageRequest& StreamMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamMessageRequest.base);
  return *internal_default_instance();
}


void StreamMessageRequest::clear_update() {
// @@protoc_insertion_point(one_of_clear_start:p4.v1.StreamMessageRequest)
  switch (update_case()) {
    case kArbitration: {
      if (GetArenaNoVirtual() == NULL) {
        delete update_.arbitration_;
      }
      break;
    }
    case kPacket: {
      if (GetArenaNoVirtual() == NULL) {
        delete update_.packet_;
      }
      break;
    }
    case kDigestAck: {
      if (GetArenaNoVirtual() == NULL) {
        delete update_.digest_ack_;
      }
      break;
    }
    case kOther: {
      if (GetArenaNoVirtual() == NULL) {
        delete update_.other_;
      }
      break;
    }
    case UPDATE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = UPDATE_NOT_SET;
}


void StreamMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.StreamMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_update();
  _internal_metadata_.Clear();
}

bool StreamMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.StreamMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.MasterArbitrationUpdate arbitration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arbitration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.PacketOut packet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.DigestListAck digest_ack = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digest_ack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any other = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_other()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.StreamMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.StreamMessageRequest)
  return false;
#undef DO_
}

void StreamMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.StreamMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.MasterArbitrationUpdate arbitration = 1;
  if (has_arbitration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_arbitration(), output);
  }

  // .p4.v1.PacketOut packet = 2;
  if (has_packet()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_packet(), output);
  }

  // .p4.v1.DigestListAck digest_ack = 3;
  if (has_digest_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_digest_ack(), output);
  }

  // .google.protobuf.Any other = 4;
  if (has_other()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_other(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.StreamMessageRequest)
}

::google::protobuf::uint8* StreamMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.StreamMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.MasterArbitrationUpdate arbitration = 1;
  if (has_arbitration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_arbitration(), deterministic, target);
  }

  // .p4.v1.PacketOut packet = 2;
  if (has_packet()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_packet(), deterministic, target);
  }

  // .p4.v1.DigestListAck digest_ack = 3;
  if (has_digest_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_digest_ack(), deterministic, target);
  }

  // .google.protobuf.Any other = 4;
  if (has_other()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_other(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.StreamMessageRequest)
  return target;
}

size_t StreamMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.StreamMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (update_case()) {
    // .p4.v1.MasterArbitrationUpdate arbitration = 1;
    case kArbitration: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_.arbitration_);
      break;
    }
    // .p4.v1.PacketOut packet = 2;
    case kPacket: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_.packet_);
      break;
    }
    // .p4.v1.DigestListAck digest_ack = 3;
    case kDigestAck: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_.digest_ack_);
      break;
    }
    // .google.protobuf.Any other = 4;
    case kOther: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_.other_);
      break;
    }
    case UPDATE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.StreamMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.StreamMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.StreamMessageRequest)
    MergeFrom(*source);
  }
}

void StreamMessageRequest::MergeFrom(const StreamMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.StreamMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.update_case()) {
    case kArbitration: {
      mutable_arbitration()->::p4::v1::MasterArbitrationUpdate::MergeFrom(from.arbitration());
      break;
    }
    case kPacket: {
      mutable_packet()->::p4::v1::PacketOut::MergeFrom(from.packet());
      break;
    }
    case kDigestAck: {
      mutable_digest_ack()->::p4::v1::DigestListAck::MergeFrom(from.digest_ack());
      break;
    }
    case kOther: {
      mutable_other()->::google::protobuf::Any::MergeFrom(from.other());
      break;
    }
    case UPDATE_NOT_SET: {
      break;
    }
  }
}

void StreamMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.StreamMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamMessageRequest::CopyFrom(const StreamMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.StreamMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamMessageRequest::IsInitialized() const {
  return true;
}

void StreamMessageRequest::Swap(StreamMessageRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StreamMessageRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StreamMessageRequest::UnsafeArenaSwap(StreamMessageRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StreamMessageRequest::InternalSwap(StreamMessageRequest* other) {
  using std::swap;
  swap(update_, other->update_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamMessageRequest::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PacketOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketOut::kPayloadFieldNumber;
const int PacketOut::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketOut::PacketOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketOut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.PacketOut)
}
PacketOut::PacketOut(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketOut.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.PacketOut)
}
PacketOut::PacketOut(const PacketOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metadata_(from.metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.PacketOut)
}

void PacketOut::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PacketOut::~PacketOut() {
  // @@protoc_insertion_point(destructor:p4.v1.PacketOut)
  SharedDtor();
}

void PacketOut::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PacketOut::ArenaDtor(void* object) {
  PacketOut* _this = reinterpret_cast< PacketOut* >(object);
  (void)_this;
}
void PacketOut::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PacketOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PacketOut::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketOut& PacketOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketOut.base);
  return *internal_default_instance();
}


void PacketOut::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.PacketOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool PacketOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.PacketOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes payload = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.PacketMetadata metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.PacketOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.PacketOut)
  return false;
#undef DO_
}

void PacketOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.PacketOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes payload = 1;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->payload(), output);
  }

  // repeated .p4.v1.PacketMetadata metadata = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->metadata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.PacketOut)
}

::google::protobuf::uint8* PacketOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.PacketOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes payload = 1;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->payload(), target);
  }

  // repeated .p4.v1.PacketMetadata metadata = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->metadata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.PacketOut)
  return target;
}

size_t PacketOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.PacketOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.PacketMetadata metadata = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metadata(static_cast<int>(i)));
    }
  }

  // bytes payload = 1;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PacketOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.PacketOut)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.PacketOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.PacketOut)
    MergeFrom(*source);
  }
}

void PacketOut::MergeFrom(const PacketOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.PacketOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.payload().size() > 0) {
    set_payload(from.payload());
  }
}

void PacketOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.PacketOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketOut::CopyFrom(const PacketOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.PacketOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketOut::IsInitialized() const {
  return true;
}

void PacketOut::Swap(PacketOut* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PacketOut* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PacketOut::UnsafeArenaSwap(PacketOut* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PacketOut::InternalSwap(PacketOut* other) {
  using std::swap;
  CastToBase(&metadata_)->InternalSwap(CastToBase(&other->metadata_));
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PacketOut::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigestListAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestListAck::kDigestIdFieldNumber;
const int DigestListAck::kListIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestListAck::DigestListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestListAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.DigestListAck)
}
DigestListAck::DigestListAck(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestListAck.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.DigestListAck)
}
DigestListAck::DigestListAck(const DigestListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&list_id_, &from.list_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&digest_id_) -
    reinterpret_cast<char*>(&list_id_)) + sizeof(digest_id_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.DigestListAck)
}

void DigestListAck::SharedCtor() {
  ::memset(&list_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&digest_id_) -
      reinterpret_cast<char*>(&list_id_)) + sizeof(digest_id_));
}

DigestListAck::~DigestListAck() {
  // @@protoc_insertion_point(destructor:p4.v1.DigestListAck)
  SharedDtor();
}

void DigestListAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DigestListAck::ArenaDtor(void* object) {
  DigestListAck* _this = reinterpret_cast< DigestListAck* >(object);
  (void)_this;
}
void DigestListAck::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DigestListAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigestListAck::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigestListAck& DigestListAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestListAck.base);
  return *internal_default_instance();
}


void DigestListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.DigestListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&list_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&digest_id_) -
      reinterpret_cast<char*>(&list_id_)) + sizeof(digest_id_));
  _internal_metadata_.Clear();
}

bool DigestListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.DigestListAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 digest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &digest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 list_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &list_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.DigestListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.DigestListAck)
  return false;
#undef DO_
}

void DigestListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.DigestListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 digest_id = 1;
  if (this->digest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->digest_id(), output);
  }

  // uint64 list_id = 2;
  if (this->list_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->list_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.DigestListAck)
}

::google::protobuf::uint8* DigestListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.DigestListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 digest_id = 1;
  if (this->digest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->digest_id(), target);
  }

  // uint64 list_id = 2;
  if (this->list_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->list_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.DigestListAck)
  return target;
}

size_t DigestListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.DigestListAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 list_id = 2;
  if (this->list_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->list_id());
  }

  // uint32 digest_id = 1;
  if (this->digest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->digest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.DigestListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigestListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.DigestListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.DigestListAck)
    MergeFrom(*source);
  }
}

void DigestListAck::MergeFrom(const DigestListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.DigestListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.list_id() != 0) {
    set_list_id(from.list_id());
  }
  if (from.digest_id() != 0) {
    set_digest_id(from.digest_id());
  }
}

void DigestListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.DigestListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestListAck::CopyFrom(const DigestListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.DigestListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestListAck::IsInitialized() const {
  return true;
}

void DigestListAck::Swap(DigestListAck* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DigestListAck* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DigestListAck::UnsafeArenaSwap(DigestListAck* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DigestListAck::InternalSwap(DigestListAck* other) {
  using std::swap;
  swap(list_id_, other->list_id_);
  swap(digest_id_, other->digest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigestListAck::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamMessageResponse::InitAsDefaultInstance() {
  ::p4::v1::_StreamMessageResponse_default_instance_.arbitration_ = const_cast< ::p4::v1::MasterArbitrationUpdate*>(
      ::p4::v1::MasterArbitrationUpdate::internal_default_instance());
  ::p4::v1::_StreamMessageResponse_default_instance_.packet_ = const_cast< ::p4::v1::PacketIn*>(
      ::p4::v1::PacketIn::internal_default_instance());
  ::p4::v1::_StreamMessageResponse_default_instance_.digest_ = const_cast< ::p4::v1::DigestList*>(
      ::p4::v1::DigestList::internal_default_instance());
  ::p4::v1::_StreamMessageResponse_default_instance_.idle_timeout_notification_ = const_cast< ::p4::v1::IdleTimeoutNotification*>(
      ::p4::v1::IdleTimeoutNotification::internal_default_instance());
  ::p4::v1::_StreamMessageResponse_default_instance_.other_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::p4::v1::_StreamMessageResponse_default_instance_.error_ = const_cast< ::p4::v1::StreamError*>(
      ::p4::v1::StreamError::internal_default_instance());
}
void StreamMessageResponse::set_allocated_arbitration(::p4::v1::MasterArbitrationUpdate* arbitration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_update();
  if (arbitration) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(arbitration);
    if (message_arena != submessage_arena) {
      arbitration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arbitration, submessage_arena);
    }
    set_has_arbitration();
    update_.arbitration_ = arbitration;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.arbitration)
}
void StreamMessageResponse::set_allocated_packet(::p4::v1::PacketIn* packet) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_update();
  if (packet) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(packet);
    if (message_arena != submessage_arena) {
      packet = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packet, submessage_arena);
    }
    set_has_packet();
    update_.packet_ = packet;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.packet)
}
void StreamMessageResponse::set_allocated_digest(::p4::v1::DigestList* digest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_update();
  if (digest) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(digest);
    if (message_arena != submessage_arena) {
      digest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, digest, submessage_arena);
    }
    set_has_digest();
    update_.digest_ = digest;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.digest)
}
void StreamMessageResponse::set_allocated_idle_timeout_notification(::p4::v1::IdleTimeoutNotification* idle_timeout_notification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_update();
  if (idle_timeout_notification) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(idle_timeout_notification);
    if (message_arena != submessage_arena) {
      idle_timeout_notification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, idle_timeout_notification, submessage_arena);
    }
    set_has_idle_timeout_notification();
    update_.idle_timeout_notification_ = idle_timeout_notification;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.idle_timeout_notification)
}
void StreamMessageResponse::set_allocated_other(::google::protobuf::Any* other) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_update();
  if (other) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      other = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, other, submessage_arena);
    }
    set_has_other();
    update_.other_ = other;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.other)
}
void StreamMessageResponse::clear_other() {
  if (has_other()) {
    if (GetArenaNoVirtual() == NULL) {
      delete update_.other_;
    }
    clear_has_update();
  }
}
void StreamMessageResponse::set_allocated_error(::p4::v1::StreamError* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_update();
  if (error) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(error);
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    update_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.error)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamMessageResponse::kArbitrationFieldNumber;
const int StreamMessageResponse::kPacketFieldNumber;
const int StreamMessageResponse::kDigestFieldNumber;
const int StreamMessageResponse::kIdleTimeoutNotificationFieldNumber;
const int StreamMessageResponse::kOtherFieldNumber;
const int StreamMessageResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamMessageResponse::StreamMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.StreamMessageResponse)
}
StreamMessageResponse::StreamMessageResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamMessageResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.StreamMessageResponse)
}
StreamMessageResponse::StreamMessageResponse(const StreamMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_update();
  switch (from.update_case()) {
    case kArbitration: {
      mutable_arbitration()->::p4::v1::MasterArbitrationUpdate::MergeFrom(from.arbitration());
      break;
    }
    case kPacket: {
      mutable_packet()->::p4::v1::PacketIn::MergeFrom(from.packet());
      break;
    }
    case kDigest: {
      mutable_digest()->::p4::v1::DigestList::MergeFrom(from.digest());
      break;
    }
    case kIdleTimeoutNotification: {
      mutable_idle_timeout_notification()->::p4::v1::IdleTimeoutNotification::MergeFrom(from.idle_timeout_notification());
      break;
    }
    case kOther: {
      mutable_other()->::google::protobuf::Any::MergeFrom(from.other());
      break;
    }
    case kError: {
      mutable_error()->::p4::v1::StreamError::MergeFrom(from.error());
      break;
    }
    case UPDATE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.StreamMessageResponse)
}

void StreamMessageResponse::SharedCtor() {
  clear_has_update();
}

StreamMessageResponse::~StreamMessageResponse() {
  // @@protoc_insertion_point(destructor:p4.v1.StreamMessageResponse)
  SharedDtor();
}

void StreamMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_update()) {
    clear_update();
  }
}

void StreamMessageResponse::ArenaDtor(void* object) {
  StreamMessageResponse* _this = reinterpret_cast< StreamMessageResponse* >(object);
  (void)_this;
}
void StreamMessageResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void StreamMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamMessageResponse::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamMessageResponse& StreamMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamMessageResponse.base);
  return *internal_default_instance();
}


void StreamMessageResponse::clear_update() {
// @@protoc_insertion_point(one_of_clear_start:p4.v1.StreamMessageResponse)
  switch (update_case()) {
    case kArbitration: {
      if (GetArenaNoVirtual() == NULL) {
        delete update_.arbitration_;
      }
      break;
    }
    case kPacket: {
      if (GetArenaNoVirtual() == NULL) {
        delete update_.packet_;
      }
      break;
    }
    case kDigest: {
      if (GetArenaNoVirtual() == NULL) {
        delete update_.digest_;
      }
      break;
    }
    case kIdleTimeoutNotification: {
      if (GetArenaNoVirtual() == NULL) {
        delete update_.idle_timeout_notification_;
      }
      break;
    }
    case kOther: {
      if (GetArenaNoVirtual() == NULL) {
        delete update_.other_;
      }
      break;
    }
    case kError: {
      if (GetArenaNoVirtual() == NULL) {
        delete update_.error_;
      }
      break;
    }
    case UPDATE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = UPDATE_NOT_SET;
}


void StreamMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.StreamMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_update();
  _internal_metadata_.Clear();
}

bool StreamMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.StreamMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.MasterArbitrationUpdate arbitration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arbitration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.PacketIn packet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.DigestList digest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.IdleTimeoutNotification idle_timeout_notification = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_idle_timeout_notification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any other = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_other()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.StreamError error = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.StreamMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.StreamMessageResponse)
  return false;
#undef DO_
}

void StreamMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.StreamMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.MasterArbitrationUpdate arbitration = 1;
  if (has_arbitration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_arbitration(), output);
  }

  // .p4.v1.PacketIn packet = 2;
  if (has_packet()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_packet(), output);
  }

  // .p4.v1.DigestList digest = 3;
  if (has_digest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_digest(), output);
  }

  // .p4.v1.IdleTimeoutNotification idle_timeout_notification = 4;
  if (has_idle_timeout_notification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_idle_timeout_notification(), output);
  }

  // .google.protobuf.Any other = 5;
  if (has_other()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_other(), output);
  }

  // .p4.v1.StreamError error = 6;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.StreamMessageResponse)
}

::google::protobuf::uint8* StreamMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.StreamMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.MasterArbitrationUpdate arbitration = 1;
  if (has_arbitration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_arbitration(), deterministic, target);
  }

  // .p4.v1.PacketIn packet = 2;
  if (has_packet()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_packet(), deterministic, target);
  }

  // .p4.v1.DigestList digest = 3;
  if (has_digest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_digest(), deterministic, target);
  }

  // .p4.v1.IdleTimeoutNotification idle_timeout_notification = 4;
  if (has_idle_timeout_notification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_idle_timeout_notification(), deterministic, target);
  }

  // .google.protobuf.Any other = 5;
  if (has_other()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_other(), deterministic, target);
  }

  // .p4.v1.StreamError error = 6;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.StreamMessageResponse)
  return target;
}

size_t StreamMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.StreamMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (update_case()) {
    // .p4.v1.MasterArbitrationUpdate arbitration = 1;
    case kArbitration: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_.arbitration_);
      break;
    }
    // .p4.v1.PacketIn packet = 2;
    case kPacket: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_.packet_);
      break;
    }
    // .p4.v1.DigestList digest = 3;
    case kDigest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_.digest_);
      break;
    }
    // .p4.v1.IdleTimeoutNotification idle_timeout_notification = 4;
    case kIdleTimeoutNotification: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_.idle_timeout_notification_);
      break;
    }
    // .google.protobuf.Any other = 5;
    case kOther: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_.other_);
      break;
    }
    // .p4.v1.StreamError error = 6;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *update_.error_);
      break;
    }
    case UPDATE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.StreamMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.StreamMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.StreamMessageResponse)
    MergeFrom(*source);
  }
}

void StreamMessageResponse::MergeFrom(const StreamMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.StreamMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.update_case()) {
    case kArbitration: {
      mutable_arbitration()->::p4::v1::MasterArbitrationUpdate::MergeFrom(from.arbitration());
      break;
    }
    case kPacket: {
      mutable_packet()->::p4::v1::PacketIn::MergeFrom(from.packet());
      break;
    }
    case kDigest: {
      mutable_digest()->::p4::v1::DigestList::MergeFrom(from.digest());
      break;
    }
    case kIdleTimeoutNotification: {
      mutable_idle_timeout_notification()->::p4::v1::IdleTimeoutNotification::MergeFrom(from.idle_timeout_notification());
      break;
    }
    case kOther: {
      mutable_other()->::google::protobuf::Any::MergeFrom(from.other());
      break;
    }
    case kError: {
      mutable_error()->::p4::v1::StreamError::MergeFrom(from.error());
      break;
    }
    case UPDATE_NOT_SET: {
      break;
    }
  }
}

void StreamMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.StreamMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamMessageResponse::CopyFrom(const StreamMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.StreamMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamMessageResponse::IsInitialized() const {
  return true;
}

void StreamMessageResponse::Swap(StreamMessageResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StreamMessageResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StreamMessageResponse::UnsafeArenaSwap(StreamMessageResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StreamMessageResponse::InternalSwap(StreamMessageResponse* other) {
  using std::swap;
  swap(update_, other->update_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamMessageResponse::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PacketIn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketIn::kPayloadFieldNumber;
const int PacketIn::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketIn::PacketIn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketIn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.PacketIn)
}
PacketIn::PacketIn(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketIn.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.PacketIn)
}
PacketIn::PacketIn(const PacketIn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metadata_(from.metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.PacketIn)
}

void PacketIn::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PacketIn::~PacketIn() {
  // @@protoc_insertion_point(destructor:p4.v1.PacketIn)
  SharedDtor();
}

void PacketIn::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PacketIn::ArenaDtor(void* object) {
  PacketIn* _this = reinterpret_cast< PacketIn* >(object);
  (void)_this;
}
void PacketIn::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PacketIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PacketIn::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketIn& PacketIn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketIn.base);
  return *internal_default_instance();
}


void PacketIn::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.PacketIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool PacketIn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.PacketIn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes payload = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.PacketMetadata metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.PacketIn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.PacketIn)
  return false;
#undef DO_
}

void PacketIn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.PacketIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes payload = 1;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->payload(), output);
  }

  // repeated .p4.v1.PacketMetadata metadata = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->metadata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.PacketIn)
}

::google::protobuf::uint8* PacketIn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.PacketIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes payload = 1;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->payload(), target);
  }

  // repeated .p4.v1.PacketMetadata metadata = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->metadata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.PacketIn)
  return target;
}

size_t PacketIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.PacketIn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.PacketMetadata metadata = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metadata(static_cast<int>(i)));
    }
  }

  // bytes payload = 1;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PacketIn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.PacketIn)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketIn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketIn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.PacketIn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.PacketIn)
    MergeFrom(*source);
  }
}

void PacketIn::MergeFrom(const PacketIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.PacketIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.payload().size() > 0) {
    set_payload(from.payload());
  }
}

void PacketIn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.PacketIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketIn::CopyFrom(const PacketIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.PacketIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketIn::IsInitialized() const {
  return true;
}

void PacketIn::Swap(PacketIn* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PacketIn* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PacketIn::UnsafeArenaSwap(PacketIn* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PacketIn::InternalSwap(PacketIn* other) {
  using std::swap;
  CastToBase(&metadata_)->InternalSwap(CastToBase(&other->metadata_));
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PacketIn::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigestList::InitAsDefaultInstance() {
}
void DigestList::clear_data() {
  data_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestList::kDigestIdFieldNumber;
const int DigestList::kListIdFieldNumber;
const int DigestList::kDataFieldNumber;
const int DigestList::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestList::DigestList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.DigestList)
}
DigestList::DigestList(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  data_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestList.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.DigestList)
}
DigestList::DigestList(const DigestList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&list_id_, &from.list_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&digest_id_) -
    reinterpret_cast<char*>(&list_id_)) + sizeof(digest_id_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.DigestList)
}

void DigestList::SharedCtor() {
  ::memset(&list_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&digest_id_) -
      reinterpret_cast<char*>(&list_id_)) + sizeof(digest_id_));
}

DigestList::~DigestList() {
  // @@protoc_insertion_point(destructor:p4.v1.DigestList)
  SharedDtor();
}

void DigestList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DigestList::ArenaDtor(void* object) {
  DigestList* _this = reinterpret_cast< DigestList* >(object);
  (void)_this;
}
void DigestList::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DigestList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigestList::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigestList& DigestList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestList.base);
  return *internal_default_instance();
}


void DigestList::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.DigestList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  ::memset(&list_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&digest_id_) -
      reinterpret_cast<char*>(&list_id_)) + sizeof(digest_id_));
  _internal_metadata_.Clear();
}

bool DigestList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.DigestList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 digest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &digest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 list_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &list_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.v1.P4Data data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.DigestList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.DigestList)
  return false;
#undef DO_
}

void DigestList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.DigestList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 digest_id = 1;
  if (this->digest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->digest_id(), output);
  }

  // uint64 list_id = 2;
  if (this->list_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->list_id(), output);
  }

  // repeated .p4.v1.P4Data data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->data(static_cast<int>(i)),
      output);
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.DigestList)
}

::google::protobuf::uint8* DigestList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.DigestList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 digest_id = 1;
  if (this->digest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->digest_id(), target);
  }

  // uint64 list_id = 2;
  if (this->list_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->list_id(), target);
  }

  // repeated .p4.v1.P4Data data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->data(static_cast<int>(i)), deterministic, target);
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.DigestList)
  return target;
}

size_t DigestList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.DigestList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.P4Data data = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  // uint64 list_id = 2;
  if (this->list_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->list_id());
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // uint32 digest_id = 1;
  if (this->digest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->digest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.DigestList)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigestList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.DigestList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.DigestList)
    MergeFrom(*source);
  }
}

void DigestList::MergeFrom(const DigestList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.DigestList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.list_id() != 0) {
    set_list_id(from.list_id());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.digest_id() != 0) {
    set_digest_id(from.digest_id());
  }
}

void DigestList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.DigestList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestList::CopyFrom(const DigestList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.DigestList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestList::IsInitialized() const {
  return true;
}

void DigestList::Swap(DigestList* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DigestList* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DigestList::UnsafeArenaSwap(DigestList* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DigestList::InternalSwap(DigestList* other) {
  using std::swap;
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  swap(list_id_, other->list_id_);
  swap(timestamp_, other->timestamp_);
  swap(digest_id_, other->digest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigestList::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PacketMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketMetadata::kMetadataIdFieldNumber;
const int PacketMetadata::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketMetadata::PacketMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.PacketMetadata)
}
PacketMetadata::PacketMetadata(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketMetadata.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.PacketMetadata)
}
PacketMetadata::PacketMetadata(const PacketMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value(),
      GetArenaNoVirtual());
  }
  metadata_id_ = from.metadata_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.PacketMetadata)
}

void PacketMetadata::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_id_ = 0u;
}

PacketMetadata::~PacketMetadata() {
  // @@protoc_insertion_point(destructor:p4.v1.PacketMetadata)
  SharedDtor();
}

void PacketMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PacketMetadata::ArenaDtor(void* object) {
  PacketMetadata* _this = reinterpret_cast< PacketMetadata* >(object);
  (void)_this;
}
void PacketMetadata::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PacketMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PacketMetadata::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketMetadata& PacketMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketMetadata.base);
  return *internal_default_instance();
}


void PacketMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.PacketMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  metadata_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PacketMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.PacketMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 metadata_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &metadata_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.PacketMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.PacketMetadata)
  return false;
#undef DO_
}

void PacketMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.PacketMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 metadata_id = 1;
  if (this->metadata_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->metadata_id(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.PacketMetadata)
}

::google::protobuf::uint8* PacketMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.PacketMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 metadata_id = 1;
  if (this->metadata_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->metadata_id(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.PacketMetadata)
  return target;
}

size_t PacketMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.PacketMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // uint32 metadata_id = 1;
  if (this->metadata_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->metadata_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PacketMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.PacketMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.PacketMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.PacketMetadata)
    MergeFrom(*source);
  }
}

void PacketMetadata::MergeFrom(const PacketMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.PacketMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    set_value(from.value());
  }
  if (from.metadata_id() != 0) {
    set_metadata_id(from.metadata_id());
  }
}

void PacketMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.PacketMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketMetadata::CopyFrom(const PacketMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.PacketMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketMetadata::IsInitialized() const {
  return true;
}

void PacketMetadata::Swap(PacketMetadata* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PacketMetadata* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PacketMetadata::UnsafeArenaSwap(PacketMetadata* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PacketMetadata::InternalSwap(PacketMetadata* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(metadata_id_, other->metadata_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PacketMetadata::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MasterArbitrationUpdate::InitAsDefaultInstance() {
  ::p4::v1::_MasterArbitrationUpdate_default_instance_._instance.get_mutable()->role_ = const_cast< ::p4::v1::Role*>(
      ::p4::v1::Role::internal_default_instance());
  ::p4::v1::_MasterArbitrationUpdate_default_instance_._instance.get_mutable()->election_id_ = const_cast< ::p4::v1::Uint128*>(
      ::p4::v1::Uint128::internal_default_instance());
  ::p4::v1::_MasterArbitrationUpdate_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void MasterArbitrationUpdate::unsafe_arena_set_allocated_role(
    ::p4::v1::Role* role) {
  if (GetArenaNoVirtual() == NULL) {
    delete role_;
  }
  role_ = role;
  if (role) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.MasterArbitrationUpdate.role)
}
void MasterArbitrationUpdate::unsafe_arena_set_allocated_election_id(
    ::p4::v1::Uint128* election_id) {
  if (GetArenaNoVirtual() == NULL) {
    delete election_id_;
  }
  election_id_ = election_id;
  if (election_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.MasterArbitrationUpdate.election_id)
}
void MasterArbitrationUpdate::unsafe_arena_set_allocated_status(
    ::google::rpc::Status* status) {
  if (GetArenaNoVirtual() == NULL) {
    delete status_;
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.MasterArbitrationUpdate.status)
}
void MasterArbitrationUpdate::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterArbitrationUpdate::kDeviceIdFieldNumber;
const int MasterArbitrationUpdate::kRoleFieldNumber;
const int MasterArbitrationUpdate::kElectionIdFieldNumber;
const int MasterArbitrationUpdate::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterArbitrationUpdate::MasterArbitrationUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MasterArbitrationUpdate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.MasterArbitrationUpdate)
}
MasterArbitrationUpdate::MasterArbitrationUpdate(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MasterArbitrationUpdate.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.MasterArbitrationUpdate)
}
MasterArbitrationUpdate::MasterArbitrationUpdate(const MasterArbitrationUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_role()) {
    role_ = new ::p4::v1::Role(*from.role_);
  } else {
    role_ = NULL;
  }
  if (from.has_election_id()) {
    election_id_ = new ::p4::v1::Uint128(*from.election_id_);
  } else {
    election_id_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  device_id_ = from.device_id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.MasterArbitrationUpdate)
}

void MasterArbitrationUpdate::SharedCtor() {
  ::memset(&role_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&device_id_) -
      reinterpret_cast<char*>(&role_)) + sizeof(device_id_));
}

MasterArbitrationUpdate::~MasterArbitrationUpdate() {
  // @@protoc_insertion_point(destructor:p4.v1.MasterArbitrationUpdate)
  SharedDtor();
}

void MasterArbitrationUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete role_;
  if (this != internal_default_instance()) delete election_id_;
  if (this != internal_default_instance()) delete status_;
}

void MasterArbitrationUpdate::ArenaDtor(void* object) {
  MasterArbitrationUpdate* _this = reinterpret_cast< MasterArbitrationUpdate* >(object);
  (void)_this;
}
void MasterArbitrationUpdate::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void MasterArbitrationUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MasterArbitrationUpdate::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MasterArbitrationUpdate& MasterArbitrationUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_MasterArbitrationUpdate.base);
  return *internal_default_instance();
}


void MasterArbitrationUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.MasterArbitrationUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && role_ != NULL) {
    delete role_;
  }
  role_ = NULL;
  if (GetArenaNoVirtual() == NULL && election_id_ != NULL) {
    delete election_id_;
  }
  election_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  device_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MasterArbitrationUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.MasterArbitrationUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 device_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &device_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.Role role = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_role()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.Uint128 election_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_election_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.MasterArbitrationUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.MasterArbitrationUpdate)
  return false;
#undef DO_
}

void MasterArbitrationUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.MasterArbitrationUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->device_id(), output);
  }

  // .p4.v1.Role role = 2;
  if (this->has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_role(), output);
  }

  // .p4.v1.Uint128 election_id = 3;
  if (this->has_election_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_election_id(), output);
  }

  // .google.rpc.Status status = 4;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.MasterArbitrationUpdate)
}

::google::protobuf::uint8* MasterArbitrationUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.MasterArbitrationUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->device_id(), target);
  }

  // .p4.v1.Role role = 2;
  if (this->has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_role(), deterministic, target);
  }

  // .p4.v1.Uint128 election_id = 3;
  if (this->has_election_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_election_id(), deterministic, target);
  }

  // .google.rpc.Status status = 4;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.MasterArbitrationUpdate)
  return target;
}

size_t MasterArbitrationUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.MasterArbitrationUpdate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.Role role = 2;
  if (this->has_role()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *role_);
  }

  // .p4.v1.Uint128 election_id = 3;
  if (this->has_election_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *election_id_);
  }

  // .google.rpc.Status status = 4;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->device_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterArbitrationUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.MasterArbitrationUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterArbitrationUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MasterArbitrationUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.MasterArbitrationUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.MasterArbitrationUpdate)
    MergeFrom(*source);
  }
}

void MasterArbitrationUpdate::MergeFrom(const MasterArbitrationUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.MasterArbitrationUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_role()) {
    mutable_role()->::p4::v1::Role::MergeFrom(from.role());
  }
  if (from.has_election_id()) {
    mutable_election_id()->::p4::v1::Uint128::MergeFrom(from.election_id());
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
  if (from.device_id() != 0) {
    set_device_id(from.device_id());
  }
}

void MasterArbitrationUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.MasterArbitrationUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterArbitrationUpdate::CopyFrom(const MasterArbitrationUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.MasterArbitrationUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterArbitrationUpdate::IsInitialized() const {
  return true;
}

void MasterArbitrationUpdate::Swap(MasterArbitrationUpdate* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    MasterArbitrationUpdate* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void MasterArbitrationUpdate::UnsafeArenaSwap(MasterArbitrationUpdate* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void MasterArbitrationUpdate::InternalSwap(MasterArbitrationUpdate* other) {
  using std::swap;
  swap(role_, other->role_);
  swap(election_id_, other->election_id_);
  swap(status_, other->status_);
  swap(device_id_, other->device_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MasterArbitrationUpdate::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Role::InitAsDefaultInstance() {
  ::p4::v1::_Role_default_instance_._instance.get_mutable()->config_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void Role::unsafe_arena_set_allocated_config(
    ::google::protobuf::Any* config) {
  if (GetArenaNoVirtual() == NULL) {
    delete config_;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.Role.config)
}
void Role::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Role::kIdFieldNumber;
const int Role::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Role::Role()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Role.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.Role)
}
Role::Role(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Role.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.Role)
}
Role::Role(const Role& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::google::protobuf::Any(*from.config_);
  } else {
    config_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.Role)
}

void Role::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&config_)) + sizeof(id_));
}

Role::~Role() {
  // @@protoc_insertion_point(destructor:p4.v1.Role)
  SharedDtor();
}

void Role::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete config_;
}

void Role::ArenaDtor(void* object) {
  Role* _this = reinterpret_cast< Role* >(object);
  (void)_this;
}
void Role::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Role::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Role::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Role& Role::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Role.base);
  return *internal_default_instance();
}


void Role::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Role::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.Role)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.Role)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.Role)
  return false;
#undef DO_
}

void Role::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // .google.protobuf.Any config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.Role)
}

::google::protobuf::uint8* Role::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // .google.protobuf.Any config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.Role)
  return target;
}

size_t Role::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.Role)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Role::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.Role)
  GOOGLE_DCHECK_NE(&from, this);
  const Role* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Role>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.Role)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.Role)
    MergeFrom(*source);
  }
}

void Role::MergeFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.Role)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::google::protobuf::Any::MergeFrom(from.config());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Role::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role::CopyFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role::IsInitialized() const {
  return true;
}

void Role::Swap(Role* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Role* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Role::UnsafeArenaSwap(Role* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Role::InternalSwap(Role* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Role::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IdleTimeoutNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdleTimeoutNotification::kTableEntryFieldNumber;
const int IdleTimeoutNotification::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdleTimeoutNotification::IdleTimeoutNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_IdleTimeoutNotification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.IdleTimeoutNotification)
}
IdleTimeoutNotification::IdleTimeoutNotification(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  table_entry_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_IdleTimeoutNotification.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.IdleTimeoutNotification)
}
IdleTimeoutNotification::IdleTimeoutNotification(const IdleTimeoutNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      table_entry_(from.table_entry_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.IdleTimeoutNotification)
}

void IdleTimeoutNotification::SharedCtor() {
  timestamp_ = GOOGLE_LONGLONG(0);
}

IdleTimeoutNotification::~IdleTimeoutNotification() {
  // @@protoc_insertion_point(destructor:p4.v1.IdleTimeoutNotification)
  SharedDtor();
}

void IdleTimeoutNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void IdleTimeoutNotification::ArenaDtor(void* object) {
  IdleTimeoutNotification* _this = reinterpret_cast< IdleTimeoutNotification* >(object);
  (void)_this;
}
void IdleTimeoutNotification::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void IdleTimeoutNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IdleTimeoutNotification::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdleTimeoutNotification& IdleTimeoutNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_IdleTimeoutNotification.base);
  return *internal_default_instance();
}


void IdleTimeoutNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.IdleTimeoutNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_entry_.Clear();
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool IdleTimeoutNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.IdleTimeoutNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.v1.TableEntry table_entry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_table_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.IdleTimeoutNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.IdleTimeoutNotification)
  return false;
#undef DO_
}

void IdleTimeoutNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.IdleTimeoutNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.TableEntry table_entry = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_entry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->table_entry(static_cast<int>(i)),
      output);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.IdleTimeoutNotification)
}

::google::protobuf::uint8* IdleTimeoutNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.IdleTimeoutNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .p4.v1.TableEntry table_entry = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_entry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->table_entry(static_cast<int>(i)), deterministic, target);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.IdleTimeoutNotification)
  return target;
}

size_t IdleTimeoutNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.IdleTimeoutNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .p4.v1.TableEntry table_entry = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->table_entry_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->table_entry(static_cast<int>(i)));
    }
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdleTimeoutNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.IdleTimeoutNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const IdleTimeoutNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdleTimeoutNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.IdleTimeoutNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.IdleTimeoutNotification)
    MergeFrom(*source);
  }
}

void IdleTimeoutNotification::MergeFrom(const IdleTimeoutNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.IdleTimeoutNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  table_entry_.MergeFrom(from.table_entry_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void IdleTimeoutNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.IdleTimeoutNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdleTimeoutNotification::CopyFrom(const IdleTimeoutNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.IdleTimeoutNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdleTimeoutNotification::IsInitialized() const {
  return true;
}

void IdleTimeoutNotification::Swap(IdleTimeoutNotification* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    IdleTimeoutNotification* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void IdleTimeoutNotification::UnsafeArenaSwap(IdleTimeoutNotification* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void IdleTimeoutNotification::InternalSwap(IdleTimeoutNotification* other) {
  using std::swap;
  CastToBase(&table_entry_)->InternalSwap(CastToBase(&other->table_entry_));
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IdleTimeoutNotification::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamError::InitAsDefaultInstance() {
  ::p4::v1::_StreamError_default_instance_.packet_out_ = const_cast< ::p4::v1::PacketOutError*>(
      ::p4::v1::PacketOutError::internal_default_instance());
  ::p4::v1::_StreamError_default_instance_.digest_list_ack_ = const_cast< ::p4::v1::DigestListAckError*>(
      ::p4::v1::DigestListAckError::internal_default_instance());
  ::p4::v1::_StreamError_default_instance_.other_ = const_cast< ::p4::v1::StreamOtherError*>(
      ::p4::v1::StreamOtherError::internal_default_instance());
}
void StreamError::set_allocated_packet_out(::p4::v1::PacketOutError* packet_out) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (packet_out) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(packet_out);
    if (message_arena != submessage_arena) {
      packet_out = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, packet_out, submessage_arena);
    }
    set_has_packet_out();
    details_.packet_out_ = packet_out;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamError.packet_out)
}
void StreamError::set_allocated_digest_list_ack(::p4::v1::DigestListAckError* digest_list_ack) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (digest_list_ack) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(digest_list_ack);
    if (message_arena != submessage_arena) {
      digest_list_ack = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, digest_list_ack, submessage_arena);
    }
    set_has_digest_list_ack();
    details_.digest_list_ack_ = digest_list_ack;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamError.digest_list_ack)
}
void StreamError::set_allocated_other(::p4::v1::StreamOtherError* other) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_details();
  if (other) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(other);
    if (message_arena != submessage_arena) {
      other = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, other, submessage_arena);
    }
    set_has_other();
    details_.other_ = other;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamError.other)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamError::kCanonicalCodeFieldNumber;
const int StreamError::kMessageFieldNumber;
const int StreamError::kSpaceFieldNumber;
const int StreamError::kCodeFieldNumber;
const int StreamError::kPacketOutFieldNumber;
const int StreamError::kDigestListAckFieldNumber;
const int StreamError::kOtherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamError::StreamError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.StreamError)
}
StreamError::StreamError(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamError.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.StreamError)
}
StreamError::StreamError(const StreamError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message(),
      GetArenaNoVirtual());
  }
  space_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.space().size() > 0) {
    space_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.space(),
      GetArenaNoVirtual());
  }
  ::memcpy(&canonical_code_, &from.canonical_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&canonical_code_)) + sizeof(code_));
  clear_has_details();
  switch (from.details_case()) {
    case kPacketOut: {
      mutable_packet_out()->::p4::v1::PacketOutError::MergeFrom(from.packet_out());
      break;
    }
    case kDigestListAck: {
      mutable_digest_list_ack()->::p4::v1::DigestListAckError::MergeFrom(from.digest_list_ack());
      break;
    }
    case kOther: {
      mutable_other()->::p4::v1::StreamOtherError::MergeFrom(from.other());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.StreamError)
}

void StreamError::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  space_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&canonical_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&canonical_code_)) + sizeof(code_));
  clear_has_details();
}

StreamError::~StreamError() {
  // @@protoc_insertion_point(destructor:p4.v1.StreamError)
  SharedDtor();
}

void StreamError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  space_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_details()) {
    clear_details();
  }
}

void StreamError::ArenaDtor(void* object) {
  StreamError* _this = reinterpret_cast< StreamError* >(object);
  (void)_this;
}
void StreamError::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void StreamError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamError::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamError& StreamError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamError.base);
  return *internal_default_instance();
}


void StreamError::clear_details() {
// @@protoc_insertion_point(one_of_clear_start:p4.v1.StreamError)
  switch (details_case()) {
    case kPacketOut: {
      if (GetArenaNoVirtual() == NULL) {
        delete details_.packet_out_;
      }
      break;
    }
    case kDigestListAck: {
      if (GetArenaNoVirtual() == NULL) {
        delete details_.digest_list_ack_;
      }
      break;
    }
    case kOther: {
      if (GetArenaNoVirtual() == NULL) {
        delete details_.other_;
      }
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAILS_NOT_SET;
}


void StreamError::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.StreamError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  space_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&canonical_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&canonical_code_)) + sizeof(code_));
  clear_details();
  _internal_metadata_.Clear();
}

bool StreamError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.StreamError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 canonical_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &canonical_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.v1.StreamError.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string space = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_space()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->space().data(), static_cast<int>(this->space().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.v1.StreamError.space"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.PacketOutError packet_out = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packet_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.DigestListAckError digest_list_ack = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digest_list_ack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.StreamOtherError other = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_other()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.StreamError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.StreamError)
  return false;
#undef DO_
}

void StreamError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.StreamError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 canonical_code = 1;
  if (this->canonical_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->canonical_code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.StreamError.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // string space = 3;
  if (this->space().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->space().data(), static_cast<int>(this->space().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.StreamError.space");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->space(), output);
  }

  // int32 code = 4;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->code(), output);
  }

  // .p4.v1.PacketOutError packet_out = 5;
  if (has_packet_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_packet_out(), output);
  }

  // .p4.v1.DigestListAckError digest_list_ack = 6;
  if (has_digest_list_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_digest_list_ack(), output);
  }

  // .p4.v1.StreamOtherError other = 7;
  if (has_other()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_other(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.StreamError)
}

::google::protobuf::uint8* StreamError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.StreamError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 canonical_code = 1;
  if (this->canonical_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->canonical_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.StreamError.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // string space = 3;
  if (this->space().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->space().data(), static_cast<int>(this->space().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.StreamError.space");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->space(), target);
  }

  // int32 code = 4;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->code(), target);
  }

  // .p4.v1.PacketOutError packet_out = 5;
  if (has_packet_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_packet_out(), deterministic, target);
  }

  // .p4.v1.DigestListAckError digest_list_ack = 6;
  if (has_digest_list_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_digest_list_ack(), deterministic, target);
  }

  // .p4.v1.StreamOtherError other = 7;
  if (has_other()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_other(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.StreamError)
  return target;
}

size_t StreamError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.StreamError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string space = 3;
  if (this->space().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->space());
  }

  // int32 canonical_code = 1;
  if (this->canonical_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->canonical_code());
  }

  // int32 code = 4;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  switch (details_case()) {
    // .p4.v1.PacketOutError packet_out = 5;
    case kPacketOut: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.packet_out_);
      break;
    }
    // .p4.v1.DigestListAckError digest_list_ack = 6;
    case kDigestListAck: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.digest_list_ack_);
      break;
    }
    // .p4.v1.StreamOtherError other = 7;
    case kOther: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *details_.other_);
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.StreamError)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.StreamError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.StreamError)
    MergeFrom(*source);
  }
}

void StreamError::MergeFrom(const StreamError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.StreamError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    set_message(from.message());
  }
  if (from.space().size() > 0) {
    set_space(from.space());
  }
  if (from.canonical_code() != 0) {
    set_canonical_code(from.canonical_code());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  switch (from.details_case()) {
    case kPacketOut: {
      mutable_packet_out()->::p4::v1::PacketOutError::MergeFrom(from.packet_out());
      break;
    }
    case kDigestListAck: {
      mutable_digest_list_ack()->::p4::v1::DigestListAckError::MergeFrom(from.digest_list_ack());
      break;
    }
    case kOther: {
      mutable_other()->::p4::v1::StreamOtherError::MergeFrom(from.other());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
}

void StreamError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.StreamError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamError::CopyFrom(const StreamError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.StreamError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamError::IsInitialized() const {
  return true;
}

void StreamError::Swap(StreamError* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StreamError* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StreamError::UnsafeArenaSwap(StreamError* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StreamError::InternalSwap(StreamError* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  space_.Swap(&other->space_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(canonical_code_, other->canonical_code_);
  swap(code_, other->code_);
  swap(details_, other->details_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamError::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PacketOutError::InitAsDefaultInstance() {
  ::p4::v1::_PacketOutError_default_instance_._instance.get_mutable()->packet_out_ = const_cast< ::p4::v1::PacketOut*>(
      ::p4::v1::PacketOut::internal_default_instance());
}
void PacketOutError::unsafe_arena_set_allocated_packet_out(
    ::p4::v1::PacketOut* packet_out) {
  if (GetArenaNoVirtual() == NULL) {
    delete packet_out_;
  }
  packet_out_ = packet_out;
  if (packet_out) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.PacketOutError.packet_out)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketOutError::kPacketOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketOutError::PacketOutError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketOutError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.PacketOutError)
}
PacketOutError::PacketOutError(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketOutError.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.PacketOutError)
}
PacketOutError::PacketOutError(const PacketOutError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_packet_out()) {
    packet_out_ = new ::p4::v1::PacketOut(*from.packet_out_);
  } else {
    packet_out_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.PacketOutError)
}

void PacketOutError::SharedCtor() {
  packet_out_ = NULL;
}

PacketOutError::~PacketOutError() {
  // @@protoc_insertion_point(destructor:p4.v1.PacketOutError)
  SharedDtor();
}

void PacketOutError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete packet_out_;
}

void PacketOutError::ArenaDtor(void* object) {
  PacketOutError* _this = reinterpret_cast< PacketOutError* >(object);
  (void)_this;
}
void PacketOutError::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PacketOutError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PacketOutError::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketOutError& PacketOutError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_PacketOutError.base);
  return *internal_default_instance();
}


void PacketOutError::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.PacketOutError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && packet_out_ != NULL) {
    delete packet_out_;
  }
  packet_out_ = NULL;
  _internal_metadata_.Clear();
}

bool PacketOutError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.PacketOutError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.PacketOut packet_out = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packet_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.PacketOutError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.PacketOutError)
  return false;
#undef DO_
}

void PacketOutError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.PacketOutError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.PacketOut packet_out = 1;
  if (this->has_packet_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_packet_out(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.PacketOutError)
}

::google::protobuf::uint8* PacketOutError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.PacketOutError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.PacketOut packet_out = 1;
  if (this->has_packet_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_packet_out(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.PacketOutError)
  return target;
}

size_t PacketOutError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.PacketOutError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.PacketOut packet_out = 1;
  if (this->has_packet_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *packet_out_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PacketOutError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.PacketOutError)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketOutError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketOutError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.PacketOutError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.PacketOutError)
    MergeFrom(*source);
  }
}

void PacketOutError::MergeFrom(const PacketOutError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.PacketOutError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_packet_out()) {
    mutable_packet_out()->::p4::v1::PacketOut::MergeFrom(from.packet_out());
  }
}

void PacketOutError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.PacketOutError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketOutError::CopyFrom(const PacketOutError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.PacketOutError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketOutError::IsInitialized() const {
  return true;
}

void PacketOutError::Swap(PacketOutError* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PacketOutError* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void PacketOutError::UnsafeArenaSwap(PacketOutError* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PacketOutError::InternalSwap(PacketOutError* other) {
  using std::swap;
  swap(packet_out_, other->packet_out_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PacketOutError::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigestListAckError::InitAsDefaultInstance() {
  ::p4::v1::_DigestListAckError_default_instance_._instance.get_mutable()->digest_list_ack_ = const_cast< ::p4::v1::DigestListAck*>(
      ::p4::v1::DigestListAck::internal_default_instance());
}
void DigestListAckError::unsafe_arena_set_allocated_digest_list_ack(
    ::p4::v1::DigestListAck* digest_list_ack) {
  if (GetArenaNoVirtual() == NULL) {
    delete digest_list_ack_;
  }
  digest_list_ack_ = digest_list_ack;
  if (digest_list_ack) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.DigestListAckError.digest_list_ack)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigestListAckError::kDigestListAckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigestListAckError::DigestListAckError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestListAckError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.DigestListAckError)
}
DigestListAckError::DigestListAckError(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestListAckError.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.DigestListAckError)
}
DigestListAckError::DigestListAckError(const DigestListAckError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_digest_list_ack()) {
    digest_list_ack_ = new ::p4::v1::DigestListAck(*from.digest_list_ack_);
  } else {
    digest_list_ack_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.DigestListAckError)
}

void DigestListAckError::SharedCtor() {
  digest_list_ack_ = NULL;
}

DigestListAckError::~DigestListAckError() {
  // @@protoc_insertion_point(destructor:p4.v1.DigestListAckError)
  SharedDtor();
}

void DigestListAckError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete digest_list_ack_;
}

void DigestListAckError::ArenaDtor(void* object) {
  DigestListAckError* _this = reinterpret_cast< DigestListAckError* >(object);
  (void)_this;
}
void DigestListAckError::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DigestListAckError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigestListAckError::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigestListAckError& DigestListAckError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_DigestListAckError.base);
  return *internal_default_instance();
}


void DigestListAckError::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.DigestListAckError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && digest_list_ack_ != NULL) {
    delete digest_list_ack_;
  }
  digest_list_ack_ = NULL;
  _internal_metadata_.Clear();
}

bool DigestListAckError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.DigestListAckError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.DigestListAck digest_list_ack = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digest_list_ack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.DigestListAckError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.DigestListAckError)
  return false;
#undef DO_
}

void DigestListAckError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.DigestListAckError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.DigestListAck digest_list_ack = 1;
  if (this->has_digest_list_ack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_digest_list_ack(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.DigestListAckError)
}

::google::protobuf::uint8* DigestListAckError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.DigestListAckError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.DigestListAck digest_list_ack = 1;
  if (this->has_digest_list_ack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_digest_list_ack(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.DigestListAckError)
  return target;
}

size_t DigestListAckError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.DigestListAckError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.DigestListAck digest_list_ack = 1;
  if (this->has_digest_list_ack()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *digest_list_ack_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigestListAckError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.DigestListAckError)
  GOOGLE_DCHECK_NE(&from, this);
  const DigestListAckError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigestListAckError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.DigestListAckError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.DigestListAckError)
    MergeFrom(*source);
  }
}

void DigestListAckError::MergeFrom(const DigestListAckError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.DigestListAckError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_digest_list_ack()) {
    mutable_digest_list_ack()->::p4::v1::DigestListAck::MergeFrom(from.digest_list_ack());
  }
}

void DigestListAckError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.DigestListAckError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigestListAckError::CopyFrom(const DigestListAckError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.DigestListAckError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigestListAckError::IsInitialized() const {
  return true;
}

void DigestListAckError::Swap(DigestListAckError* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DigestListAckError* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DigestListAckError::UnsafeArenaSwap(DigestListAckError* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DigestListAckError::InternalSwap(DigestListAckError* other) {
  using std::swap;
  swap(digest_list_ack_, other->digest_list_ack_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigestListAckError::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamOtherError::InitAsDefaultInstance() {
  ::p4::v1::_StreamOtherError_default_instance_._instance.get_mutable()->other_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void StreamOtherError::unsafe_arena_set_allocated_other(
    ::google::protobuf::Any* other) {
  if (GetArenaNoVirtual() == NULL) {
    delete other_;
  }
  other_ = other;
  if (other) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.StreamOtherError.other)
}
void StreamOtherError::clear_other() {
  if (GetArenaNoVirtual() == NULL && other_ != NULL) {
    delete other_;
  }
  other_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamOtherError::kOtherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamOtherError::StreamOtherError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamOtherError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.StreamOtherError)
}
StreamOtherError::StreamOtherError(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamOtherError.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.StreamOtherError)
}
StreamOtherError::StreamOtherError(const StreamOtherError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_other()) {
    other_ = new ::google::protobuf::Any(*from.other_);
  } else {
    other_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.StreamOtherError)
}

void StreamOtherError::SharedCtor() {
  other_ = NULL;
}

StreamOtherError::~StreamOtherError() {
  // @@protoc_insertion_point(destructor:p4.v1.StreamOtherError)
  SharedDtor();
}

void StreamOtherError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete other_;
}

void StreamOtherError::ArenaDtor(void* object) {
  StreamOtherError* _this = reinterpret_cast< StreamOtherError* >(object);
  (void)_this;
}
void StreamOtherError::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void StreamOtherError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamOtherError::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamOtherError& StreamOtherError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_StreamOtherError.base);
  return *internal_default_instance();
}


void StreamOtherError::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.StreamOtherError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && other_ != NULL) {
    delete other_;
  }
  other_ = NULL;
  _internal_metadata_.Clear();
}

bool StreamOtherError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.StreamOtherError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any other = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_other()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.StreamOtherError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.StreamOtherError)
  return false;
#undef DO_
}

void StreamOtherError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.StreamOtherError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any other = 1;
  if (this->has_other()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_other(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.StreamOtherError)
}

::google::protobuf::uint8* StreamOtherError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.StreamOtherError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any other = 1;
  if (this->has_other()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_other(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.StreamOtherError)
  return target;
}

size_t StreamOtherError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.StreamOtherError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any other = 1;
  if (this->has_other()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *other_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamOtherError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.StreamOtherError)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamOtherError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamOtherError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.StreamOtherError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.StreamOtherError)
    MergeFrom(*source);
  }
}

void StreamOtherError::MergeFrom(const StreamOtherError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.StreamOtherError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_other()) {
    mutable_other()->::google::protobuf::Any::MergeFrom(from.other());
  }
}

void StreamOtherError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.StreamOtherError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamOtherError::CopyFrom(const StreamOtherError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.StreamOtherError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamOtherError::IsInitialized() const {
  return true;
}

void StreamOtherError::Swap(StreamOtherError* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StreamOtherError* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StreamOtherError::UnsafeArenaSwap(StreamOtherError* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StreamOtherError::InternalSwap(StreamOtherError* other) {
  using std::swap;
  swap(other_, other->other_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamOtherError::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Uint128::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uint128::kHighFieldNumber;
const int Uint128::kLowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uint128::Uint128()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Uint128.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.Uint128)
}
Uint128::Uint128(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Uint128.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.Uint128)
}
Uint128::Uint128(const Uint128& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&high_, &from.high_,
    static_cast<size_t>(reinterpret_cast<char*>(&low_) -
    reinterpret_cast<char*>(&high_)) + sizeof(low_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.Uint128)
}

void Uint128::SharedCtor() {
  ::memset(&high_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_) -
      reinterpret_cast<char*>(&high_)) + sizeof(low_));
}

Uint128::~Uint128() {
  // @@protoc_insertion_point(destructor:p4.v1.Uint128)
  SharedDtor();
}

void Uint128::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Uint128::ArenaDtor(void* object) {
  Uint128* _this = reinterpret_cast< Uint128* >(object);
  (void)_this;
}
void Uint128::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Uint128::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Uint128::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uint128& Uint128::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Uint128.base);
  return *internal_default_instance();
}


void Uint128::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.Uint128)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&high_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_) -
      reinterpret_cast<char*>(&high_)) + sizeof(low_));
  _internal_metadata_.Clear();
}

bool Uint128::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.Uint128)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 high = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 low = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.Uint128)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.Uint128)
  return false;
#undef DO_
}

void Uint128::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.Uint128)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 high = 1;
  if (this->high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->high(), output);
  }

  // uint64 low = 2;
  if (this->low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->low(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.Uint128)
}

::google::protobuf::uint8* Uint128::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.Uint128)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 high = 1;
  if (this->high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->high(), target);
  }

  // uint64 low = 2;
  if (this->low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->low(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.Uint128)
  return target;
}

size_t Uint128::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.Uint128)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 high = 1;
  if (this->high() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->high());
  }

  // uint64 low = 2;
  if (this->low() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->low());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uint128::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.Uint128)
  GOOGLE_DCHECK_NE(&from, this);
  const Uint128* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uint128>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.Uint128)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.Uint128)
    MergeFrom(*source);
  }
}

void Uint128::MergeFrom(const Uint128& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.Uint128)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.high() != 0) {
    set_high(from.high());
  }
  if (from.low() != 0) {
    set_low(from.low());
  }
}

void Uint128::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.Uint128)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uint128::CopyFrom(const Uint128& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.Uint128)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uint128::IsInitialized() const {
  return true;
}

void Uint128::Swap(Uint128* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Uint128* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Uint128::UnsafeArenaSwap(Uint128* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Uint128::InternalSwap(Uint128* other) {
  using std::swap;
  swap(high_, other->high_);
  swap(low_, other->low_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Uint128::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetForwardingPipelineConfigRequest::InitAsDefaultInstance() {
  ::p4::v1::_SetForwardingPipelineConfigRequest_default_instance_._instance.get_mutable()->election_id_ = const_cast< ::p4::v1::Uint128*>(
      ::p4::v1::Uint128::internal_default_instance());
  ::p4::v1::_SetForwardingPipelineConfigRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::p4::v1::ForwardingPipelineConfig*>(
      ::p4::v1::ForwardingPipelineConfig::internal_default_instance());
}
void SetForwardingPipelineConfigRequest::unsafe_arena_set_allocated_election_id(
    ::p4::v1::Uint128* election_id) {
  if (GetArenaNoVirtual() == NULL) {
    delete election_id_;
  }
  election_id_ = election_id;
  if (election_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.SetForwardingPipelineConfigRequest.election_id)
}
void SetForwardingPipelineConfigRequest::unsafe_arena_set_allocated_config(
    ::p4::v1::ForwardingPipelineConfig* config) {
  if (GetArenaNoVirtual() == NULL) {
    delete config_;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.SetForwardingPipelineConfigRequest.config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetForwardingPipelineConfigRequest::kDeviceIdFieldNumber;
const int SetForwardingPipelineConfigRequest::kRoleIdFieldNumber;
const int SetForwardingPipelineConfigRequest::kElectionIdFieldNumber;
const int SetForwardingPipelineConfigRequest::kActionFieldNumber;
const int SetForwardingPipelineConfigRequest::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetForwardingPipelineConfigRequest::SetForwardingPipelineConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_SetForwardingPipelineConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.SetForwardingPipelineConfigRequest)
}
SetForwardingPipelineConfigRequest::SetForwardingPipelineConfigRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_SetForwardingPipelineConfigRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.SetForwardingPipelineConfigRequest)
}
SetForwardingPipelineConfigRequest::SetForwardingPipelineConfigRequest(const SetForwardingPipelineConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_election_id()) {
    election_id_ = new ::p4::v1::Uint128(*from.election_id_);
  } else {
    election_id_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::p4::v1::ForwardingPipelineConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  ::memcpy(&device_id_, &from.device_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&device_id_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.SetForwardingPipelineConfigRequest)
}

void SetForwardingPipelineConfigRequest::SharedCtor() {
  ::memset(&election_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&election_id_)) + sizeof(action_));
}

SetForwardingPipelineConfigRequest::~SetForwardingPipelineConfigRequest() {
  // @@protoc_insertion_point(destructor:p4.v1.SetForwardingPipelineConfigRequest)
  SharedDtor();
}

void SetForwardingPipelineConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete election_id_;
  if (this != internal_default_instance()) delete config_;
}

void SetForwardingPipelineConfigRequest::ArenaDtor(void* object) {
  SetForwardingPipelineConfigRequest* _this = reinterpret_cast< SetForwardingPipelineConfigRequest* >(object);
  (void)_this;
}
void SetForwardingPipelineConfigRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SetForwardingPipelineConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetForwardingPipelineConfigRequest::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetForwardingPipelineConfigRequest& SetForwardingPipelineConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_SetForwardingPipelineConfigRequest.base);
  return *internal_default_instance();
}


void SetForwardingPipelineConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.SetForwardingPipelineConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && election_id_ != NULL) {
    delete election_id_;
  }
  election_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  ::memset(&device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&device_id_)) + sizeof(action_));
  _internal_metadata_.Clear();
}

bool SetForwardingPipelineConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.SetForwardingPipelineConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 device_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &device_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 role_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.Uint128 election_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_election_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.SetForwardingPipelineConfigRequest.Action action = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::p4::v1::SetForwardingPipelineConfigRequest_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.ForwardingPipelineConfig config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.SetForwardingPipelineConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.SetForwardingPipelineConfigRequest)
  return false;
#undef DO_
}

void SetForwardingPipelineConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.SetForwardingPipelineConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->device_id(), output);
  }

  // uint64 role_id = 2;
  if (this->role_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->role_id(), output);
  }

  // .p4.v1.Uint128 election_id = 3;
  if (this->has_election_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_election_id(), output);
  }

  // .p4.v1.SetForwardingPipelineConfigRequest.Action action = 4;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->action(), output);
  }

  // .p4.v1.ForwardingPipelineConfig config = 5;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.SetForwardingPipelineConfigRequest)
}

::google::protobuf::uint8* SetForwardingPipelineConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.SetForwardingPipelineConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->device_id(), target);
  }

  // uint64 role_id = 2;
  if (this->role_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->role_id(), target);
  }

  // .p4.v1.Uint128 election_id = 3;
  if (this->has_election_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_election_id(), deterministic, target);
  }

  // .p4.v1.SetForwardingPipelineConfigRequest.Action action = 4;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->action(), target);
  }

  // .p4.v1.ForwardingPipelineConfig config = 5;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.SetForwardingPipelineConfigRequest)
  return target;
}

size_t SetForwardingPipelineConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.SetForwardingPipelineConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.Uint128 election_id = 3;
  if (this->has_election_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *election_id_);
  }

  // .p4.v1.ForwardingPipelineConfig config = 5;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->device_id());
  }

  // uint64 role_id = 2;
  if (this->role_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->role_id());
  }

  // .p4.v1.SetForwardingPipelineConfigRequest.Action action = 4;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetForwardingPipelineConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.SetForwardingPipelineConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetForwardingPipelineConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetForwardingPipelineConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.SetForwardingPipelineConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.SetForwardingPipelineConfigRequest)
    MergeFrom(*source);
  }
}

void SetForwardingPipelineConfigRequest::MergeFrom(const SetForwardingPipelineConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.SetForwardingPipelineConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_election_id()) {
    mutable_election_id()->::p4::v1::Uint128::MergeFrom(from.election_id());
  }
  if (from.has_config()) {
    mutable_config()->::p4::v1::ForwardingPipelineConfig::MergeFrom(from.config());
  }
  if (from.device_id() != 0) {
    set_device_id(from.device_id());
  }
  if (from.role_id() != 0) {
    set_role_id(from.role_id());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void SetForwardingPipelineConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.SetForwardingPipelineConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetForwardingPipelineConfigRequest::CopyFrom(const SetForwardingPipelineConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.SetForwardingPipelineConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetForwardingPipelineConfigRequest::IsInitialized() const {
  return true;
}

void SetForwardingPipelineConfigRequest::Swap(SetForwardingPipelineConfigRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SetForwardingPipelineConfigRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SetForwardingPipelineConfigRequest::UnsafeArenaSwap(SetForwardingPipelineConfigRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SetForwardingPipelineConfigRequest::InternalSwap(SetForwardingPipelineConfigRequest* other) {
  using std::swap;
  swap(election_id_, other->election_id_);
  swap(config_, other->config_);
  swap(device_id_, other->device_id_);
  swap(role_id_, other->role_id_);
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetForwardingPipelineConfigRequest::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetForwardingPipelineConfigResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetForwardingPipelineConfigResponse::SetForwardingPipelineConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_SetForwardingPipelineConfigResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.SetForwardingPipelineConfigResponse)
}
SetForwardingPipelineConfigResponse::SetForwardingPipelineConfigResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_SetForwardingPipelineConfigResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.SetForwardingPipelineConfigResponse)
}
SetForwardingPipelineConfigResponse::SetForwardingPipelineConfigResponse(const SetForwardingPipelineConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.v1.SetForwardingPipelineConfigResponse)
}

void SetForwardingPipelineConfigResponse::SharedCtor() {
}

SetForwardingPipelineConfigResponse::~SetForwardingPipelineConfigResponse() {
  // @@protoc_insertion_point(destructor:p4.v1.SetForwardingPipelineConfigResponse)
  SharedDtor();
}

void SetForwardingPipelineConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void SetForwardingPipelineConfigResponse::ArenaDtor(void* object) {
  SetForwardingPipelineConfigResponse* _this = reinterpret_cast< SetForwardingPipelineConfigResponse* >(object);
  (void)_this;
}
void SetForwardingPipelineConfigResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SetForwardingPipelineConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetForwardingPipelineConfigResponse::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetForwardingPipelineConfigResponse& SetForwardingPipelineConfigResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_SetForwardingPipelineConfigResponse.base);
  return *internal_default_instance();
}


void SetForwardingPipelineConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.SetForwardingPipelineConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SetForwardingPipelineConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.SetForwardingPipelineConfigResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.SetForwardingPipelineConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.SetForwardingPipelineConfigResponse)
  return false;
#undef DO_
}

void SetForwardingPipelineConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.SetForwardingPipelineConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.SetForwardingPipelineConfigResponse)
}

::google::protobuf::uint8* SetForwardingPipelineConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.SetForwardingPipelineConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.SetForwardingPipelineConfigResponse)
  return target;
}

size_t SetForwardingPipelineConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.SetForwardingPipelineConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetForwardingPipelineConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.SetForwardingPipelineConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetForwardingPipelineConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetForwardingPipelineConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.SetForwardingPipelineConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.SetForwardingPipelineConfigResponse)
    MergeFrom(*source);
  }
}

void SetForwardingPipelineConfigResponse::MergeFrom(const SetForwardingPipelineConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.SetForwardingPipelineConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetForwardingPipelineConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.SetForwardingPipelineConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetForwardingPipelineConfigResponse::CopyFrom(const SetForwardingPipelineConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.SetForwardingPipelineConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetForwardingPipelineConfigResponse::IsInitialized() const {
  return true;
}

void SetForwardingPipelineConfigResponse::Swap(SetForwardingPipelineConfigResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SetForwardingPipelineConfigResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SetForwardingPipelineConfigResponse::UnsafeArenaSwap(SetForwardingPipelineConfigResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SetForwardingPipelineConfigResponse::InternalSwap(SetForwardingPipelineConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetForwardingPipelineConfigResponse::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardingPipelineConfig_Cookie::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardingPipelineConfig_Cookie::kCookieFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardingPipelineConfig_Cookie::ForwardingPipelineConfig_Cookie()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ForwardingPipelineConfig_Cookie.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ForwardingPipelineConfig.Cookie)
}
ForwardingPipelineConfig_Cookie::ForwardingPipelineConfig_Cookie(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ForwardingPipelineConfig_Cookie.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ForwardingPipelineConfig.Cookie)
}
ForwardingPipelineConfig_Cookie::ForwardingPipelineConfig_Cookie(const ForwardingPipelineConfig_Cookie& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cookie_ = from.cookie_;
  // @@protoc_insertion_point(copy_constructor:p4.v1.ForwardingPipelineConfig.Cookie)
}

void ForwardingPipelineConfig_Cookie::SharedCtor() {
  cookie_ = GOOGLE_ULONGLONG(0);
}

ForwardingPipelineConfig_Cookie::~ForwardingPipelineConfig_Cookie() {
  // @@protoc_insertion_point(destructor:p4.v1.ForwardingPipelineConfig.Cookie)
  SharedDtor();
}

void ForwardingPipelineConfig_Cookie::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ForwardingPipelineConfig_Cookie::ArenaDtor(void* object) {
  ForwardingPipelineConfig_Cookie* _this = reinterpret_cast< ForwardingPipelineConfig_Cookie* >(object);
  (void)_this;
}
void ForwardingPipelineConfig_Cookie::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ForwardingPipelineConfig_Cookie::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardingPipelineConfig_Cookie::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardingPipelineConfig_Cookie& ForwardingPipelineConfig_Cookie::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ForwardingPipelineConfig_Cookie.base);
  return *internal_default_instance();
}


void ForwardingPipelineConfig_Cookie::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ForwardingPipelineConfig.Cookie)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cookie_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ForwardingPipelineConfig_Cookie::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ForwardingPipelineConfig.Cookie)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 cookie = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cookie_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ForwardingPipelineConfig.Cookie)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ForwardingPipelineConfig.Cookie)
  return false;
#undef DO_
}

void ForwardingPipelineConfig_Cookie::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ForwardingPipelineConfig.Cookie)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cookie = 1;
  if (this->cookie() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cookie(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ForwardingPipelineConfig.Cookie)
}

::google::protobuf::uint8* ForwardingPipelineConfig_Cookie::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ForwardingPipelineConfig.Cookie)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cookie = 1;
  if (this->cookie() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cookie(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ForwardingPipelineConfig.Cookie)
  return target;
}

size_t ForwardingPipelineConfig_Cookie::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ForwardingPipelineConfig.Cookie)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 cookie = 1;
  if (this->cookie() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cookie());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardingPipelineConfig_Cookie::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ForwardingPipelineConfig.Cookie)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardingPipelineConfig_Cookie* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardingPipelineConfig_Cookie>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ForwardingPipelineConfig.Cookie)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ForwardingPipelineConfig.Cookie)
    MergeFrom(*source);
  }
}

void ForwardingPipelineConfig_Cookie::MergeFrom(const ForwardingPipelineConfig_Cookie& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ForwardingPipelineConfig.Cookie)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cookie() != 0) {
    set_cookie(from.cookie());
  }
}

void ForwardingPipelineConfig_Cookie::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ForwardingPipelineConfig.Cookie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardingPipelineConfig_Cookie::CopyFrom(const ForwardingPipelineConfig_Cookie& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ForwardingPipelineConfig.Cookie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardingPipelineConfig_Cookie::IsInitialized() const {
  return true;
}

void ForwardingPipelineConfig_Cookie::Swap(ForwardingPipelineConfig_Cookie* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ForwardingPipelineConfig_Cookie* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ForwardingPipelineConfig_Cookie::UnsafeArenaSwap(ForwardingPipelineConfig_Cookie* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ForwardingPipelineConfig_Cookie::InternalSwap(ForwardingPipelineConfig_Cookie* other) {
  using std::swap;
  swap(cookie_, other->cookie_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardingPipelineConfig_Cookie::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardingPipelineConfig::InitAsDefaultInstance() {
  ::p4::v1::_ForwardingPipelineConfig_default_instance_._instance.get_mutable()->p4info_ = const_cast< ::p4::config::v1::P4Info*>(
      ::p4::config::v1::P4Info::internal_default_instance());
  ::p4::v1::_ForwardingPipelineConfig_default_instance_._instance.get_mutable()->cookie_ = const_cast< ::p4::v1::ForwardingPipelineConfig_Cookie*>(
      ::p4::v1::ForwardingPipelineConfig_Cookie::internal_default_instance());
}
void ForwardingPipelineConfig::unsafe_arena_set_allocated_p4info(
    ::p4::config::v1::P4Info* p4info) {
  if (GetArenaNoVirtual() == NULL) {
    delete p4info_;
  }
  p4info_ = p4info;
  if (p4info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.ForwardingPipelineConfig.p4info)
}
void ForwardingPipelineConfig::clear_p4info() {
  if (GetArenaNoVirtual() == NULL && p4info_ != NULL) {
    delete p4info_;
  }
  p4info_ = NULL;
}
void ForwardingPipelineConfig::unsafe_arena_set_allocated_cookie(
    ::p4::v1::ForwardingPipelineConfig_Cookie* cookie) {
  if (GetArenaNoVirtual() == NULL) {
    delete cookie_;
  }
  cookie_ = cookie;
  if (cookie) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.ForwardingPipelineConfig.cookie)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardingPipelineConfig::kP4InfoFieldNumber;
const int ForwardingPipelineConfig::kP4DeviceConfigFieldNumber;
const int ForwardingPipelineConfig::kCookieFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardingPipelineConfig::ForwardingPipelineConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ForwardingPipelineConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.ForwardingPipelineConfig)
}
ForwardingPipelineConfig::ForwardingPipelineConfig(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ForwardingPipelineConfig.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.ForwardingPipelineConfig)
}
ForwardingPipelineConfig::ForwardingPipelineConfig(const ForwardingPipelineConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  p4_device_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.p4_device_config().size() > 0) {
    p4_device_config_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p4_device_config(),
      GetArenaNoVirtual());
  }
  if (from.has_p4info()) {
    p4info_ = new ::p4::config::v1::P4Info(*from.p4info_);
  } else {
    p4info_ = NULL;
  }
  if (from.has_cookie()) {
    cookie_ = new ::p4::v1::ForwardingPipelineConfig_Cookie(*from.cookie_);
  } else {
    cookie_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.ForwardingPipelineConfig)
}

void ForwardingPipelineConfig::SharedCtor() {
  p4_device_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&p4info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cookie_) -
      reinterpret_cast<char*>(&p4info_)) + sizeof(cookie_));
}

ForwardingPipelineConfig::~ForwardingPipelineConfig() {
  // @@protoc_insertion_point(destructor:p4.v1.ForwardingPipelineConfig)
  SharedDtor();
}

void ForwardingPipelineConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  p4_device_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete p4info_;
  if (this != internal_default_instance()) delete cookie_;
}

void ForwardingPipelineConfig::ArenaDtor(void* object) {
  ForwardingPipelineConfig* _this = reinterpret_cast< ForwardingPipelineConfig* >(object);
  (void)_this;
}
void ForwardingPipelineConfig::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ForwardingPipelineConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardingPipelineConfig::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardingPipelineConfig& ForwardingPipelineConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_ForwardingPipelineConfig.base);
  return *internal_default_instance();
}


void ForwardingPipelineConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.ForwardingPipelineConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  p4_device_config_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && p4info_ != NULL) {
    delete p4info_;
  }
  p4info_ = NULL;
  if (GetArenaNoVirtual() == NULL && cookie_ != NULL) {
    delete cookie_;
  }
  cookie_ = NULL;
  _internal_metadata_.Clear();
}

bool ForwardingPipelineConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.ForwardingPipelineConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.P4Info p4info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_p4info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes p4_device_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_p4_device_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.ForwardingPipelineConfig.Cookie cookie = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cookie()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.ForwardingPipelineConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.ForwardingPipelineConfig)
  return false;
#undef DO_
}

void ForwardingPipelineConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.ForwardingPipelineConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.config.v1.P4Info p4info = 1;
  if (this->has_p4info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_p4info(), output);
  }

  // bytes p4_device_config = 2;
  if (this->p4_device_config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->p4_device_config(), output);
  }

  // .p4.v1.ForwardingPipelineConfig.Cookie cookie = 3;
  if (this->has_cookie()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cookie(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.ForwardingPipelineConfig)
}

::google::protobuf::uint8* ForwardingPipelineConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.ForwardingPipelineConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.config.v1.P4Info p4info = 1;
  if (this->has_p4info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_p4info(), deterministic, target);
  }

  // bytes p4_device_config = 2;
  if (this->p4_device_config().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->p4_device_config(), target);
  }

  // .p4.v1.ForwardingPipelineConfig.Cookie cookie = 3;
  if (this->has_cookie()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cookie(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.ForwardingPipelineConfig)
  return target;
}

size_t ForwardingPipelineConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.ForwardingPipelineConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes p4_device_config = 2;
  if (this->p4_device_config().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->p4_device_config());
  }

  // .p4.config.v1.P4Info p4info = 1;
  if (this->has_p4info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *p4info_);
  }

  // .p4.v1.ForwardingPipelineConfig.Cookie cookie = 3;
  if (this->has_cookie()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cookie_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardingPipelineConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.ForwardingPipelineConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardingPipelineConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardingPipelineConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.ForwardingPipelineConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.ForwardingPipelineConfig)
    MergeFrom(*source);
  }
}

void ForwardingPipelineConfig::MergeFrom(const ForwardingPipelineConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.ForwardingPipelineConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.p4_device_config().size() > 0) {
    set_p4_device_config(from.p4_device_config());
  }
  if (from.has_p4info()) {
    mutable_p4info()->::p4::config::v1::P4Info::MergeFrom(from.p4info());
  }
  if (from.has_cookie()) {
    mutable_cookie()->::p4::v1::ForwardingPipelineConfig_Cookie::MergeFrom(from.cookie());
  }
}

void ForwardingPipelineConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.ForwardingPipelineConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardingPipelineConfig::CopyFrom(const ForwardingPipelineConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.ForwardingPipelineConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardingPipelineConfig::IsInitialized() const {
  return true;
}

void ForwardingPipelineConfig::Swap(ForwardingPipelineConfig* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ForwardingPipelineConfig* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ForwardingPipelineConfig::UnsafeArenaSwap(ForwardingPipelineConfig* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ForwardingPipelineConfig::InternalSwap(ForwardingPipelineConfig* other) {
  using std::swap;
  p4_device_config_.Swap(&other->p4_device_config_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(p4info_, other->p4info_);
  swap(cookie_, other->cookie_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardingPipelineConfig::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetForwardingPipelineConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetForwardingPipelineConfigRequest::kDeviceIdFieldNumber;
const int GetForwardingPipelineConfigRequest::kResponseTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetForwardingPipelineConfigRequest::GetForwardingPipelineConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_GetForwardingPipelineConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.GetForwardingPipelineConfigRequest)
}
GetForwardingPipelineConfigRequest::GetForwardingPipelineConfigRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_GetForwardingPipelineConfigRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.GetForwardingPipelineConfigRequest)
}
GetForwardingPipelineConfigRequest::GetForwardingPipelineConfigRequest(const GetForwardingPipelineConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&device_id_, &from.device_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_type_) -
    reinterpret_cast<char*>(&device_id_)) + sizeof(response_type_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.GetForwardingPipelineConfigRequest)
}

void GetForwardingPipelineConfigRequest::SharedCtor() {
  ::memset(&device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_type_) -
      reinterpret_cast<char*>(&device_id_)) + sizeof(response_type_));
}

GetForwardingPipelineConfigRequest::~GetForwardingPipelineConfigRequest() {
  // @@protoc_insertion_point(destructor:p4.v1.GetForwardingPipelineConfigRequest)
  SharedDtor();
}

void GetForwardingPipelineConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void GetForwardingPipelineConfigRequest::ArenaDtor(void* object) {
  GetForwardingPipelineConfigRequest* _this = reinterpret_cast< GetForwardingPipelineConfigRequest* >(object);
  (void)_this;
}
void GetForwardingPipelineConfigRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetForwardingPipelineConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetForwardingPipelineConfigRequest::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetForwardingPipelineConfigRequest& GetForwardingPipelineConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_GetForwardingPipelineConfigRequest.base);
  return *internal_default_instance();
}


void GetForwardingPipelineConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.GetForwardingPipelineConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&device_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_type_) -
      reinterpret_cast<char*>(&device_id_)) + sizeof(response_type_));
  _internal_metadata_.Clear();
}

bool GetForwardingPipelineConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.GetForwardingPipelineConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 device_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &device_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.v1.GetForwardingPipelineConfigRequest.ResponseType response_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response_type(static_cast< ::p4::v1::GetForwardingPipelineConfigRequest_ResponseType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.GetForwardingPipelineConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.GetForwardingPipelineConfigRequest)
  return false;
#undef DO_
}

void GetForwardingPipelineConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.GetForwardingPipelineConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->device_id(), output);
  }

  // .p4.v1.GetForwardingPipelineConfigRequest.ResponseType response_type = 2;
  if (this->response_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->response_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.GetForwardingPipelineConfigRequest)
}

::google::protobuf::uint8* GetForwardingPipelineConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.GetForwardingPipelineConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->device_id(), target);
  }

  // .p4.v1.GetForwardingPipelineConfigRequest.ResponseType response_type = 2;
  if (this->response_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->response_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.GetForwardingPipelineConfigRequest)
  return target;
}

size_t GetForwardingPipelineConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.GetForwardingPipelineConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 device_id = 1;
  if (this->device_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->device_id());
  }

  // .p4.v1.GetForwardingPipelineConfigRequest.ResponseType response_type = 2;
  if (this->response_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetForwardingPipelineConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.GetForwardingPipelineConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetForwardingPipelineConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetForwardingPipelineConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.GetForwardingPipelineConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.GetForwardingPipelineConfigRequest)
    MergeFrom(*source);
  }
}

void GetForwardingPipelineConfigRequest::MergeFrom(const GetForwardingPipelineConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.GetForwardingPipelineConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_id() != 0) {
    set_device_id(from.device_id());
  }
  if (from.response_type() != 0) {
    set_response_type(from.response_type());
  }
}

void GetForwardingPipelineConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.GetForwardingPipelineConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetForwardingPipelineConfigRequest::CopyFrom(const GetForwardingPipelineConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.GetForwardingPipelineConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetForwardingPipelineConfigRequest::IsInitialized() const {
  return true;
}

void GetForwardingPipelineConfigRequest::Swap(GetForwardingPipelineConfigRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetForwardingPipelineConfigRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetForwardingPipelineConfigRequest::UnsafeArenaSwap(GetForwardingPipelineConfigRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetForwardingPipelineConfigRequest::InternalSwap(GetForwardingPipelineConfigRequest* other) {
  using std::swap;
  swap(device_id_, other->device_id_);
  swap(response_type_, other->response_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetForwardingPipelineConfigRequest::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetForwardingPipelineConfigResponse::InitAsDefaultInstance() {
  ::p4::v1::_GetForwardingPipelineConfigResponse_default_instance_._instance.get_mutable()->config_ = const_cast< ::p4::v1::ForwardingPipelineConfig*>(
      ::p4::v1::ForwardingPipelineConfig::internal_default_instance());
}
void GetForwardingPipelineConfigResponse::unsafe_arena_set_allocated_config(
    ::p4::v1::ForwardingPipelineConfig* config) {
  if (GetArenaNoVirtual() == NULL) {
    delete config_;
  }
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.GetForwardingPipelineConfigResponse.config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetForwardingPipelineConfigResponse::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetForwardingPipelineConfigResponse::GetForwardingPipelineConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_GetForwardingPipelineConfigResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.GetForwardingPipelineConfigResponse)
}
GetForwardingPipelineConfigResponse::GetForwardingPipelineConfigResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_GetForwardingPipelineConfigResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.GetForwardingPipelineConfigResponse)
}
GetForwardingPipelineConfigResponse::GetForwardingPipelineConfigResponse(const GetForwardingPipelineConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::p4::v1::ForwardingPipelineConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.GetForwardingPipelineConfigResponse)
}

void GetForwardingPipelineConfigResponse::SharedCtor() {
  config_ = NULL;
}

GetForwardingPipelineConfigResponse::~GetForwardingPipelineConfigResponse() {
  // @@protoc_insertion_point(destructor:p4.v1.GetForwardingPipelineConfigResponse)
  SharedDtor();
}

void GetForwardingPipelineConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete config_;
}

void GetForwardingPipelineConfigResponse::ArenaDtor(void* object) {
  GetForwardingPipelineConfigResponse* _this = reinterpret_cast< GetForwardingPipelineConfigResponse* >(object);
  (void)_this;
}
void GetForwardingPipelineConfigResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetForwardingPipelineConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetForwardingPipelineConfigResponse::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetForwardingPipelineConfigResponse& GetForwardingPipelineConfigResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_GetForwardingPipelineConfigResponse.base);
  return *internal_default_instance();
}


void GetForwardingPipelineConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.GetForwardingPipelineConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool GetForwardingPipelineConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.GetForwardingPipelineConfigResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.v1.ForwardingPipelineConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.GetForwardingPipelineConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.GetForwardingPipelineConfigResponse)
  return false;
#undef DO_
}

void GetForwardingPipelineConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.GetForwardingPipelineConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.ForwardingPipelineConfig config = 1;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.GetForwardingPipelineConfigResponse)
}

::google::protobuf::uint8* GetForwardingPipelineConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.GetForwardingPipelineConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .p4.v1.ForwardingPipelineConfig config = 1;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.GetForwardingPipelineConfigResponse)
  return target;
}

size_t GetForwardingPipelineConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.GetForwardingPipelineConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .p4.v1.ForwardingPipelineConfig config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetForwardingPipelineConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.GetForwardingPipelineConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetForwardingPipelineConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetForwardingPipelineConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.GetForwardingPipelineConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.GetForwardingPipelineConfigResponse)
    MergeFrom(*source);
  }
}

void GetForwardingPipelineConfigResponse::MergeFrom(const GetForwardingPipelineConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.GetForwardingPipelineConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::p4::v1::ForwardingPipelineConfig::MergeFrom(from.config());
  }
}

void GetForwardingPipelineConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.GetForwardingPipelineConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetForwardingPipelineConfigResponse::CopyFrom(const GetForwardingPipelineConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.GetForwardingPipelineConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetForwardingPipelineConfigResponse::IsInitialized() const {
  return true;
}

void GetForwardingPipelineConfigResponse::Swap(GetForwardingPipelineConfigResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetForwardingPipelineConfigResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetForwardingPipelineConfigResponse::UnsafeArenaSwap(GetForwardingPipelineConfigResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetForwardingPipelineConfigResponse::InternalSwap(GetForwardingPipelineConfigResponse* other) {
  using std::swap;
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetForwardingPipelineConfigResponse::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error::InitAsDefaultInstance() {
  ::p4::v1::_Error_default_instance_._instance.get_mutable()->details_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void Error::unsafe_arena_set_allocated_details(
    ::google::protobuf::Any* details) {
  if (GetArenaNoVirtual() == NULL) {
    delete details_;
  }
  details_ = details;
  if (details) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:p4.v1.Error.details)
}
void Error::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) {
    delete details_;
  }
  details_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kCanonicalCodeFieldNumber;
const int Error::kMessageFieldNumber;
const int Error::kSpaceFieldNumber;
const int Error::kCodeFieldNumber;
const int Error::kDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Error.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.Error)
}
Error::Error(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Error.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message(),
      GetArenaNoVirtual());
  }
  space_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.space().size() > 0) {
    space_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.space(),
      GetArenaNoVirtual());
  }
  if (from.has_details()) {
    details_ = new ::google::protobuf::Any(*from.details_);
  } else {
    details_ = NULL;
  }
  ::memcpy(&canonical_code_, &from.canonical_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&canonical_code_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:p4.v1.Error)
}

void Error::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  space_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&details_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&details_)) + sizeof(code_));
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:p4.v1.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  space_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete details_;
}

void Error::ArenaDtor(void* object) {
  Error* _this = reinterpret_cast< Error* >(object);
  (void)_this;
}
void Error::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_Error.base);
  return *internal_default_instance();
}


void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  space_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && details_ != NULL) {
    delete details_;
  }
  details_ = NULL;
  ::memset(&canonical_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&canonical_code_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.Error)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 canonical_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &canonical_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.v1.Error.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string space = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_space()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->space().data(), static_cast<int>(this->space().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.v1.Error.space"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any details = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 canonical_code = 1;
  if (this->canonical_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->canonical_code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.Error.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // string space = 3;
  if (this->space().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->space().data(), static_cast<int>(this->space().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.Error.space");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->space(), output);
  }

  // int32 code = 4;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->code(), output);
  }

  // .google.protobuf.Any details = 5;
  if (this->has_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_details(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 canonical_code = 1;
  if (this->canonical_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->canonical_code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.Error.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // string space = 3;
  if (this->space().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->space().data(), static_cast<int>(this->space().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.Error.space");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->space(), target);
  }

  // int32 code = 4;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->code(), target);
  }

  // .google.protobuf.Any details = 5;
  if (this->has_details()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_details(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.Error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string space = 3;
  if (this->space().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->space());
  }

  // .google.protobuf.Any details = 5;
  if (this->has_details()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *details_);
  }

  // int32 canonical_code = 1;
  if (this->canonical_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->canonical_code());
  }

  // int32 code = 4;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    set_message(from.message());
  }
  if (from.space().size() > 0) {
    set_space(from.space());
  }
  if (from.has_details()) {
    mutable_details()->::google::protobuf::Any::MergeFrom(from.details());
  }
  if (from.canonical_code() != 0) {
    set_canonical_code(from.canonical_code());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Error* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Error::UnsafeArenaSwap(Error* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  space_.Swap(&other->space_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(details_, other->details_);
  swap(canonical_code_, other->canonical_code_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CapabilitiesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CapabilitiesRequest::CapabilitiesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CapabilitiesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.CapabilitiesRequest)
}
CapabilitiesRequest::CapabilitiesRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CapabilitiesRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.CapabilitiesRequest)
}
CapabilitiesRequest::CapabilitiesRequest(const CapabilitiesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.v1.CapabilitiesRequest)
}

void CapabilitiesRequest::SharedCtor() {
}

CapabilitiesRequest::~CapabilitiesRequest() {
  // @@protoc_insertion_point(destructor:p4.v1.CapabilitiesRequest)
  SharedDtor();
}

void CapabilitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CapabilitiesRequest::ArenaDtor(void* object) {
  CapabilitiesRequest* _this = reinterpret_cast< CapabilitiesRequest* >(object);
  (void)_this;
}
void CapabilitiesRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CapabilitiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CapabilitiesRequest::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CapabilitiesRequest& CapabilitiesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CapabilitiesRequest.base);
  return *internal_default_instance();
}


void CapabilitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.CapabilitiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CapabilitiesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.CapabilitiesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.CapabilitiesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.CapabilitiesRequest)
  return false;
#undef DO_
}

void CapabilitiesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.CapabilitiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.CapabilitiesRequest)
}

::google::protobuf::uint8* CapabilitiesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.CapabilitiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.CapabilitiesRequest)
  return target;
}

size_t CapabilitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.CapabilitiesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CapabilitiesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.CapabilitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CapabilitiesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CapabilitiesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.CapabilitiesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.CapabilitiesRequest)
    MergeFrom(*source);
  }
}

void CapabilitiesRequest::MergeFrom(const CapabilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.CapabilitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CapabilitiesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.CapabilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CapabilitiesRequest::CopyFrom(const CapabilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.CapabilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapabilitiesRequest::IsInitialized() const {
  return true;
}

void CapabilitiesRequest::Swap(CapabilitiesRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CapabilitiesRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CapabilitiesRequest::UnsafeArenaSwap(CapabilitiesRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CapabilitiesRequest::InternalSwap(CapabilitiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CapabilitiesRequest::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CapabilitiesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CapabilitiesResponse::kP4RuntimeApiVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CapabilitiesResponse::CapabilitiesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CapabilitiesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.v1.CapabilitiesResponse)
}
CapabilitiesResponse::CapabilitiesResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CapabilitiesResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:p4.v1.CapabilitiesResponse)
}
CapabilitiesResponse::CapabilitiesResponse(const CapabilitiesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  p4runtime_api_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.p4runtime_api_version().size() > 0) {
    p4runtime_api_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p4runtime_api_version(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:p4.v1.CapabilitiesResponse)
}

void CapabilitiesResponse::SharedCtor() {
  p4runtime_api_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CapabilitiesResponse::~CapabilitiesResponse() {
  // @@protoc_insertion_point(destructor:p4.v1.CapabilitiesResponse)
  SharedDtor();
}

void CapabilitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  p4runtime_api_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CapabilitiesResponse::ArenaDtor(void* object) {
  CapabilitiesResponse* _this = reinterpret_cast< CapabilitiesResponse* >(object);
  (void)_this;
}
void CapabilitiesResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CapabilitiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CapabilitiesResponse::descriptor() {
  ::protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CapabilitiesResponse& CapabilitiesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2fv1_2fp4runtime_2eproto::scc_info_CapabilitiesResponse.base);
  return *internal_default_instance();
}


void CapabilitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.v1.CapabilitiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  p4runtime_api_version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool CapabilitiesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.v1.CapabilitiesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string p4runtime_api_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_p4runtime_api_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->p4runtime_api_version().data(), static_cast<int>(this->p4runtime_api_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.v1.CapabilitiesResponse.p4runtime_api_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.v1.CapabilitiesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.v1.CapabilitiesResponse)
  return false;
#undef DO_
}

void CapabilitiesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.v1.CapabilitiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string p4runtime_api_version = 1;
  if (this->p4runtime_api_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->p4runtime_api_version().data(), static_cast<int>(this->p4runtime_api_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.CapabilitiesResponse.p4runtime_api_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->p4runtime_api_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.v1.CapabilitiesResponse)
}

::google::protobuf::uint8* CapabilitiesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.v1.CapabilitiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string p4runtime_api_version = 1;
  if (this->p4runtime_api_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->p4runtime_api_version().data(), static_cast<int>(this->p4runtime_api_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.v1.CapabilitiesResponse.p4runtime_api_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->p4runtime_api_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.v1.CapabilitiesResponse)
  return target;
}

size_t CapabilitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.v1.CapabilitiesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string p4runtime_api_version = 1;
  if (this->p4runtime_api_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->p4runtime_api_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CapabilitiesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.v1.CapabilitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CapabilitiesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CapabilitiesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.v1.CapabilitiesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.v1.CapabilitiesResponse)
    MergeFrom(*source);
  }
}

void CapabilitiesResponse::MergeFrom(const CapabilitiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.v1.CapabilitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.p4runtime_api_version().size() > 0) {
    set_p4runtime_api_version(from.p4runtime_api_version());
  }
}

void CapabilitiesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.v1.CapabilitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CapabilitiesResponse::CopyFrom(const CapabilitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.v1.CapabilitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapabilitiesResponse::IsInitialized() const {
  return true;
}

void CapabilitiesResponse::Swap(CapabilitiesResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CapabilitiesResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CapabilitiesResponse::UnsafeArenaSwap(CapabilitiesResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CapabilitiesResponse::InternalSwap(CapabilitiesResponse* other) {
  using std::swap;
  p4runtime_api_version_.Swap(&other->p4runtime_api_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CapabilitiesResponse::GetMetadata() const {
  protobuf_p4_2fv1_2fp4runtime_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2fv1_2fp4runtime_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace p4
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::WriteRequest* Arena::CreateMaybeMessage< ::p4::v1::WriteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::WriteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::WriteResponse* Arena::CreateMaybeMessage< ::p4::v1::WriteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::WriteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ReadRequest* Arena::CreateMaybeMessage< ::p4::v1::ReadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ReadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ReadResponse* Arena::CreateMaybeMessage< ::p4::v1::ReadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ReadResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::Update* Arena::CreateMaybeMessage< ::p4::v1::Update >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::Update >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::Entity* Arena::CreateMaybeMessage< ::p4::v1::Entity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::Entity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ExternEntry* Arena::CreateMaybeMessage< ::p4::v1::ExternEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ExternEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::TableEntry_IdleTimeout* Arena::CreateMaybeMessage< ::p4::v1::TableEntry_IdleTimeout >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::TableEntry_IdleTimeout >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::TableEntry* Arena::CreateMaybeMessage< ::p4::v1::TableEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::TableEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::FieldMatch_Exact* Arena::CreateMaybeMessage< ::p4::v1::FieldMatch_Exact >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::FieldMatch_Exact >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::FieldMatch_Ternary* Arena::CreateMaybeMessage< ::p4::v1::FieldMatch_Ternary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::FieldMatch_Ternary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::FieldMatch_LPM* Arena::CreateMaybeMessage< ::p4::v1::FieldMatch_LPM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::FieldMatch_LPM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::FieldMatch_Range* Arena::CreateMaybeMessage< ::p4::v1::FieldMatch_Range >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::FieldMatch_Range >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::FieldMatch_Optional* Arena::CreateMaybeMessage< ::p4::v1::FieldMatch_Optional >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::FieldMatch_Optional >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::FieldMatch* Arena::CreateMaybeMessage< ::p4::v1::FieldMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::FieldMatch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::TableAction* Arena::CreateMaybeMessage< ::p4::v1::TableAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::TableAction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::Action_Param* Arena::CreateMaybeMessage< ::p4::v1::Action_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::Action_Param >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::Action* Arena::CreateMaybeMessage< ::p4::v1::Action >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::Action >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ActionProfileActionSet* Arena::CreateMaybeMessage< ::p4::v1::ActionProfileActionSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ActionProfileActionSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ActionProfileAction* Arena::CreateMaybeMessage< ::p4::v1::ActionProfileAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ActionProfileAction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ActionProfileMember* Arena::CreateMaybeMessage< ::p4::v1::ActionProfileMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ActionProfileMember >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ActionProfileGroup_Member* Arena::CreateMaybeMessage< ::p4::v1::ActionProfileGroup_Member >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ActionProfileGroup_Member >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ActionProfileGroup* Arena::CreateMaybeMessage< ::p4::v1::ActionProfileGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ActionProfileGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::Index* Arena::CreateMaybeMessage< ::p4::v1::Index >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::Index >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::MeterEntry* Arena::CreateMaybeMessage< ::p4::v1::MeterEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::MeterEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::DirectMeterEntry* Arena::CreateMaybeMessage< ::p4::v1::DirectMeterEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::DirectMeterEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::MeterConfig* Arena::CreateMaybeMessage< ::p4::v1::MeterConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::MeterConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::CounterEntry* Arena::CreateMaybeMessage< ::p4::v1::CounterEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::CounterEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::DirectCounterEntry* Arena::CreateMaybeMessage< ::p4::v1::DirectCounterEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::DirectCounterEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::CounterData* Arena::CreateMaybeMessage< ::p4::v1::CounterData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::CounterData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::PacketReplicationEngineEntry* Arena::CreateMaybeMessage< ::p4::v1::PacketReplicationEngineEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::PacketReplicationEngineEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::Replica* Arena::CreateMaybeMessage< ::p4::v1::Replica >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::Replica >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::MulticastGroupEntry* Arena::CreateMaybeMessage< ::p4::v1::MulticastGroupEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::MulticastGroupEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::CloneSessionEntry* Arena::CreateMaybeMessage< ::p4::v1::CloneSessionEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::CloneSessionEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ValueSetMember* Arena::CreateMaybeMessage< ::p4::v1::ValueSetMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ValueSetMember >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ValueSetEntry* Arena::CreateMaybeMessage< ::p4::v1::ValueSetEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ValueSetEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::RegisterEntry* Arena::CreateMaybeMessage< ::p4::v1::RegisterEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::RegisterEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::DigestEntry_Config* Arena::CreateMaybeMessage< ::p4::v1::DigestEntry_Config >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::DigestEntry_Config >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::DigestEntry* Arena::CreateMaybeMessage< ::p4::v1::DigestEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::DigestEntry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::StreamMessageRequest* Arena::CreateMaybeMessage< ::p4::v1::StreamMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::StreamMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::PacketOut* Arena::CreateMaybeMessage< ::p4::v1::PacketOut >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::PacketOut >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::DigestListAck* Arena::CreateMaybeMessage< ::p4::v1::DigestListAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::DigestListAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::StreamMessageResponse* Arena::CreateMaybeMessage< ::p4::v1::StreamMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::StreamMessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::PacketIn* Arena::CreateMaybeMessage< ::p4::v1::PacketIn >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::PacketIn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::DigestList* Arena::CreateMaybeMessage< ::p4::v1::DigestList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::DigestList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::PacketMetadata* Arena::CreateMaybeMessage< ::p4::v1::PacketMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::PacketMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::MasterArbitrationUpdate* Arena::CreateMaybeMessage< ::p4::v1::MasterArbitrationUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::MasterArbitrationUpdate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::Role* Arena::CreateMaybeMessage< ::p4::v1::Role >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::Role >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::IdleTimeoutNotification* Arena::CreateMaybeMessage< ::p4::v1::IdleTimeoutNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::IdleTimeoutNotification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::StreamError* Arena::CreateMaybeMessage< ::p4::v1::StreamError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::StreamError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::PacketOutError* Arena::CreateMaybeMessage< ::p4::v1::PacketOutError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::PacketOutError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::DigestListAckError* Arena::CreateMaybeMessage< ::p4::v1::DigestListAckError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::DigestListAckError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::StreamOtherError* Arena::CreateMaybeMessage< ::p4::v1::StreamOtherError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::StreamOtherError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::Uint128* Arena::CreateMaybeMessage< ::p4::v1::Uint128 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::Uint128 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::SetForwardingPipelineConfigRequest* Arena::CreateMaybeMessage< ::p4::v1::SetForwardingPipelineConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::SetForwardingPipelineConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::SetForwardingPipelineConfigResponse* Arena::CreateMaybeMessage< ::p4::v1::SetForwardingPipelineConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::SetForwardingPipelineConfigResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ForwardingPipelineConfig_Cookie* Arena::CreateMaybeMessage< ::p4::v1::ForwardingPipelineConfig_Cookie >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ForwardingPipelineConfig_Cookie >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::ForwardingPipelineConfig* Arena::CreateMaybeMessage< ::p4::v1::ForwardingPipelineConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::ForwardingPipelineConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::GetForwardingPipelineConfigRequest* Arena::CreateMaybeMessage< ::p4::v1::GetForwardingPipelineConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::GetForwardingPipelineConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::GetForwardingPipelineConfigResponse* Arena::CreateMaybeMessage< ::p4::v1::GetForwardingPipelineConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::GetForwardingPipelineConfigResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::Error* Arena::CreateMaybeMessage< ::p4::v1::Error >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::Error >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::CapabilitiesRequest* Arena::CreateMaybeMessage< ::p4::v1::CapabilitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::CapabilitiesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::v1::CapabilitiesResponse* Arena::CreateMaybeMessage< ::p4::v1::CapabilitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::p4::v1::CapabilitiesResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
