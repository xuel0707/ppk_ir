// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p4/tmp/p4config.proto

#include "p4/tmp/p4config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_p4_2ftmp_2fp4config_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2ftmp_2fp4config_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_P4DeviceConfig_Extras_KvEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_p4_2ftmp_2fp4config_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_P4DeviceConfig_Extras;
}  // namespace protobuf_p4_2ftmp_2fp4config_2eproto
namespace p4 {
namespace tmp {
class P4DeviceConfig_Extras_KvEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<P4DeviceConfig_Extras_KvEntry_DoNotUse>
      _instance;
} _P4DeviceConfig_Extras_KvEntry_DoNotUse_default_instance_;
class P4DeviceConfig_ExtrasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<P4DeviceConfig_Extras>
      _instance;
} _P4DeviceConfig_Extras_default_instance_;
class P4DeviceConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<P4DeviceConfig>
      _instance;
} _P4DeviceConfig_default_instance_;
}  // namespace tmp
}  // namespace p4
namespace protobuf_p4_2ftmp_2fp4config_2eproto {
static void InitDefaultsP4DeviceConfig_Extras_KvEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::tmp::_P4DeviceConfig_Extras_KvEntry_DoNotUse_default_instance_;
    new (ptr) ::p4::tmp::P4DeviceConfig_Extras_KvEntry_DoNotUse();
  }
  ::p4::tmp::P4DeviceConfig_Extras_KvEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_P4DeviceConfig_Extras_KvEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsP4DeviceConfig_Extras_KvEntry_DoNotUse}, {}};

static void InitDefaultsP4DeviceConfig_Extras() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::tmp::_P4DeviceConfig_Extras_default_instance_;
    new (ptr) ::p4::tmp::P4DeviceConfig_Extras();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::tmp::P4DeviceConfig_Extras::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_P4DeviceConfig_Extras =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsP4DeviceConfig_Extras}, {
      &protobuf_p4_2ftmp_2fp4config_2eproto::scc_info_P4DeviceConfig_Extras_KvEntry_DoNotUse.base,}};

static void InitDefaultsP4DeviceConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::p4::tmp::_P4DeviceConfig_default_instance_;
    new (ptr) ::p4::tmp::P4DeviceConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::p4::tmp::P4DeviceConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_P4DeviceConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsP4DeviceConfig}, {
      &protobuf_p4_2ftmp_2fp4config_2eproto::scc_info_P4DeviceConfig_Extras.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_P4DeviceConfig_Extras_KvEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_P4DeviceConfig_Extras.base);
  ::google::protobuf::internal::InitSCC(&scc_info_P4DeviceConfig.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::tmp::P4DeviceConfig_Extras_KvEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::tmp::P4DeviceConfig_Extras_KvEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::tmp::P4DeviceConfig_Extras_KvEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::tmp::P4DeviceConfig_Extras_KvEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::tmp::P4DeviceConfig_Extras, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::tmp::P4DeviceConfig_Extras, kv_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::tmp::P4DeviceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::tmp::P4DeviceConfig, reassign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::tmp::P4DeviceConfig, extras_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::p4::tmp::P4DeviceConfig, device_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::p4::tmp::P4DeviceConfig_Extras_KvEntry_DoNotUse)},
  { 9, -1, sizeof(::p4::tmp::P4DeviceConfig_Extras)},
  { 15, -1, sizeof(::p4::tmp::P4DeviceConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::tmp::_P4DeviceConfig_Extras_KvEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::tmp::_P4DeviceConfig_Extras_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::p4::tmp::_P4DeviceConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "p4/tmp/p4config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025p4/tmp/p4config.proto\022\006p4.tmp\"\316\001\n\016P4De"
      "viceConfig\022\020\n\010reassign\030\001 \001(\010\022-\n\006extras\030\002"
      " \001(\0132\035.p4.tmp.P4DeviceConfig.Extras\022\023\n\013d"
      "evice_data\030\003 \001(\014\032f\n\006Extras\0221\n\002kv\030\001 \003(\0132%"
      ".p4.tmp.P4DeviceConfig.Extras.KvEntry\032)\n"
      "\007KvEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 248);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "p4/tmp/p4config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_p4_2ftmp_2fp4config_2eproto
namespace p4 {
namespace tmp {

// ===================================================================

P4DeviceConfig_Extras_KvEntry_DoNotUse::P4DeviceConfig_Extras_KvEntry_DoNotUse() {}
P4DeviceConfig_Extras_KvEntry_DoNotUse::P4DeviceConfig_Extras_KvEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void P4DeviceConfig_Extras_KvEntry_DoNotUse::MergeFrom(const P4DeviceConfig_Extras_KvEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata P4DeviceConfig_Extras_KvEntry_DoNotUse::GetMetadata() const {
  ::protobuf_p4_2ftmp_2fp4config_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2ftmp_2fp4config_2eproto::file_level_metadata[0];
}
void P4DeviceConfig_Extras_KvEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void P4DeviceConfig_Extras::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4DeviceConfig_Extras::kKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4DeviceConfig_Extras::P4DeviceConfig_Extras()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2ftmp_2fp4config_2eproto::scc_info_P4DeviceConfig_Extras.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.tmp.P4DeviceConfig.Extras)
}
P4DeviceConfig_Extras::P4DeviceConfig_Extras(const P4DeviceConfig_Extras& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kv_.MergeFrom(from.kv_);
  // @@protoc_insertion_point(copy_constructor:p4.tmp.P4DeviceConfig.Extras)
}

void P4DeviceConfig_Extras::SharedCtor() {
}

P4DeviceConfig_Extras::~P4DeviceConfig_Extras() {
  // @@protoc_insertion_point(destructor:p4.tmp.P4DeviceConfig.Extras)
  SharedDtor();
}

void P4DeviceConfig_Extras::SharedDtor() {
}

void P4DeviceConfig_Extras::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* P4DeviceConfig_Extras::descriptor() {
  ::protobuf_p4_2ftmp_2fp4config_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2ftmp_2fp4config_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const P4DeviceConfig_Extras& P4DeviceConfig_Extras::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2ftmp_2fp4config_2eproto::scc_info_P4DeviceConfig_Extras.base);
  return *internal_default_instance();
}


void P4DeviceConfig_Extras::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.tmp.P4DeviceConfig.Extras)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kv_.Clear();
  _internal_metadata_.Clear();
}

bool P4DeviceConfig_Extras::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.tmp.P4DeviceConfig.Extras)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> kv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          P4DeviceConfig_Extras_KvEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              P4DeviceConfig_Extras_KvEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&kv_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.tmp.P4DeviceConfig.Extras.KvEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.tmp.P4DeviceConfig.Extras.KvEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.tmp.P4DeviceConfig.Extras)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.tmp.P4DeviceConfig.Extras)
  return false;
#undef DO_
}

void P4DeviceConfig_Extras::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.tmp.P4DeviceConfig.Extras)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> kv = 1;
  if (!this->kv().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.tmp.P4DeviceConfig.Extras.KvEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.tmp.P4DeviceConfig.Extras.KvEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->kv().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->kv().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<P4DeviceConfig_Extras_KvEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(kv_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<P4DeviceConfig_Extras_KvEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it) {
        entry.reset(kv_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.tmp.P4DeviceConfig.Extras)
}

::google::protobuf::uint8* P4DeviceConfig_Extras::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.tmp.P4DeviceConfig.Extras)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> kv = 1;
  if (!this->kv().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.tmp.P4DeviceConfig.Extras.KvEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.tmp.P4DeviceConfig.Extras.KvEntry.value");
      }
    };

    if (deterministic &&
        this->kv().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->kv().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<P4DeviceConfig_Extras_KvEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(kv_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<P4DeviceConfig_Extras_KvEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kv().begin();
          it != this->kv().end(); ++it) {
        entry.reset(kv_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.tmp.P4DeviceConfig.Extras)
  return target;
}

size_t P4DeviceConfig_Extras::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.tmp.P4DeviceConfig.Extras)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> kv = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->kv_size());
  {
    ::std::unique_ptr<P4DeviceConfig_Extras_KvEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->kv().begin();
        it != this->kv().end(); ++it) {
      entry.reset(kv_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void P4DeviceConfig_Extras::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.tmp.P4DeviceConfig.Extras)
  GOOGLE_DCHECK_NE(&from, this);
  const P4DeviceConfig_Extras* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4DeviceConfig_Extras>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.tmp.P4DeviceConfig.Extras)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.tmp.P4DeviceConfig.Extras)
    MergeFrom(*source);
  }
}

void P4DeviceConfig_Extras::MergeFrom(const P4DeviceConfig_Extras& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.tmp.P4DeviceConfig.Extras)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kv_.MergeFrom(from.kv_);
}

void P4DeviceConfig_Extras::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.tmp.P4DeviceConfig.Extras)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4DeviceConfig_Extras::CopyFrom(const P4DeviceConfig_Extras& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.tmp.P4DeviceConfig.Extras)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4DeviceConfig_Extras::IsInitialized() const {
  return true;
}

void P4DeviceConfig_Extras::Swap(P4DeviceConfig_Extras* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4DeviceConfig_Extras::InternalSwap(P4DeviceConfig_Extras* other) {
  using std::swap;
  kv_.Swap(&other->kv_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata P4DeviceConfig_Extras::GetMetadata() const {
  protobuf_p4_2ftmp_2fp4config_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2ftmp_2fp4config_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void P4DeviceConfig::InitAsDefaultInstance() {
  ::p4::tmp::_P4DeviceConfig_default_instance_._instance.get_mutable()->extras_ = const_cast< ::p4::tmp::P4DeviceConfig_Extras*>(
      ::p4::tmp::P4DeviceConfig_Extras::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4DeviceConfig::kReassignFieldNumber;
const int P4DeviceConfig::kExtrasFieldNumber;
const int P4DeviceConfig::kDeviceDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4DeviceConfig::P4DeviceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_p4_2ftmp_2fp4config_2eproto::scc_info_P4DeviceConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.tmp.P4DeviceConfig)
}
P4DeviceConfig::P4DeviceConfig(const P4DeviceConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_data().size() > 0) {
    device_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_data_);
  }
  if (from.has_extras()) {
    extras_ = new ::p4::tmp::P4DeviceConfig_Extras(*from.extras_);
  } else {
    extras_ = NULL;
  }
  reassign_ = from.reassign_;
  // @@protoc_insertion_point(copy_constructor:p4.tmp.P4DeviceConfig)
}

void P4DeviceConfig::SharedCtor() {
  device_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&extras_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reassign_) -
      reinterpret_cast<char*>(&extras_)) + sizeof(reassign_));
}

P4DeviceConfig::~P4DeviceConfig() {
  // @@protoc_insertion_point(destructor:p4.tmp.P4DeviceConfig)
  SharedDtor();
}

void P4DeviceConfig::SharedDtor() {
  device_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete extras_;
}

void P4DeviceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* P4DeviceConfig::descriptor() {
  ::protobuf_p4_2ftmp_2fp4config_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2ftmp_2fp4config_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const P4DeviceConfig& P4DeviceConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_p4_2ftmp_2fp4config_2eproto::scc_info_P4DeviceConfig.base);
  return *internal_default_instance();
}


void P4DeviceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.tmp.P4DeviceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && extras_ != NULL) {
    delete extras_;
  }
  extras_ = NULL;
  reassign_ = false;
  _internal_metadata_.Clear();
}

bool P4DeviceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.tmp.P4DeviceConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool reassign = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reassign_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.tmp.P4DeviceConfig.Extras extras = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extras()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes device_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_device_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.tmp.P4DeviceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.tmp.P4DeviceConfig)
  return false;
#undef DO_
}

void P4DeviceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.tmp.P4DeviceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reassign = 1;
  if (this->reassign() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->reassign(), output);
  }

  // .p4.tmp.P4DeviceConfig.Extras extras = 2;
  if (this->has_extras()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_extras(), output);
  }

  // bytes device_data = 3;
  if (this->device_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->device_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:p4.tmp.P4DeviceConfig)
}

::google::protobuf::uint8* P4DeviceConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.tmp.P4DeviceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool reassign = 1;
  if (this->reassign() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->reassign(), target);
  }

  // .p4.tmp.P4DeviceConfig.Extras extras = 2;
  if (this->has_extras()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_extras(), deterministic, target);
  }

  // bytes device_data = 3;
  if (this->device_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->device_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:p4.tmp.P4DeviceConfig)
  return target;
}

size_t P4DeviceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.tmp.P4DeviceConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes device_data = 3;
  if (this->device_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->device_data());
  }

  // .p4.tmp.P4DeviceConfig.Extras extras = 2;
  if (this->has_extras()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *extras_);
  }

  // bool reassign = 1;
  if (this->reassign() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void P4DeviceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.tmp.P4DeviceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const P4DeviceConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4DeviceConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.tmp.P4DeviceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.tmp.P4DeviceConfig)
    MergeFrom(*source);
  }
}

void P4DeviceConfig::MergeFrom(const P4DeviceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.tmp.P4DeviceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_data().size() > 0) {

    device_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_data_);
  }
  if (from.has_extras()) {
    mutable_extras()->::p4::tmp::P4DeviceConfig_Extras::MergeFrom(from.extras());
  }
  if (from.reassign() != 0) {
    set_reassign(from.reassign());
  }
}

void P4DeviceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.tmp.P4DeviceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4DeviceConfig::CopyFrom(const P4DeviceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.tmp.P4DeviceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4DeviceConfig::IsInitialized() const {
  return true;
}

void P4DeviceConfig::Swap(P4DeviceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4DeviceConfig::InternalSwap(P4DeviceConfig* other) {
  using std::swap;
  device_data_.Swap(&other->device_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(extras_, other->extras_);
  swap(reassign_, other->reassign_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata P4DeviceConfig::GetMetadata() const {
  protobuf_p4_2ftmp_2fp4config_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_p4_2ftmp_2fp4config_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tmp
}  // namespace p4
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::tmp::P4DeviceConfig_Extras_KvEntry_DoNotUse* Arena::CreateMaybeMessage< ::p4::tmp::P4DeviceConfig_Extras_KvEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::p4::tmp::P4DeviceConfig_Extras_KvEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::tmp::P4DeviceConfig_Extras* Arena::CreateMaybeMessage< ::p4::tmp::P4DeviceConfig_Extras >(Arena* arena) {
  return Arena::CreateInternal< ::p4::tmp::P4DeviceConfig_Extras >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::p4::tmp::P4DeviceConfig* Arena::CreateMaybeMessage< ::p4::tmp::P4DeviceConfig >(Arena* arena) {
  return Arena::CreateInternal< ::p4::tmp::P4DeviceConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
