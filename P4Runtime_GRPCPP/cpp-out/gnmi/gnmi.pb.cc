// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gnmi/gnmi.proto

#include "gnmi/gnmi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_gnmi_2fgnmi_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Decimal64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModelData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PathElem_KeyEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Poll;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QOSMarking;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Alias;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AliasList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Error;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Path;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PathElem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Subscription;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Notification;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ScalarArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UpdateResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Update;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gnmi_2fgnmi_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_SubscriptionList;
}  // namespace protobuf_gnmi_2fgnmi_2eproto
namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace gnmi {
class NotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Notification>
      _instance;
} _Notification_default_instance_;
class UpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Update>
      _instance;
} _Update_default_instance_;
class TypedValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TypedValue>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr string_val_;
  ::google::protobuf::int64 int_val_;
  ::google::protobuf::uint64 uint_val_;
  bool bool_val_;
  ::google::protobuf::internal::ArenaStringPtr bytes_val_;
  float float_val_;
  const ::gnmi::Decimal64* decimal_val_;
  const ::gnmi::ScalarArray* leaflist_val_;
  const ::google::protobuf::Any* any_val_;
  ::google::protobuf::internal::ArenaStringPtr json_val_;
  ::google::protobuf::internal::ArenaStringPtr json_ietf_val_;
  ::google::protobuf::internal::ArenaStringPtr ascii_val_;
} _TypedValue_default_instance_;
class PathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Path>
      _instance;
} _Path_default_instance_;
class PathElem_KeyEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathElem_KeyEntry_DoNotUse>
      _instance;
} _PathElem_KeyEntry_DoNotUse_default_instance_;
class PathElemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathElem>
      _instance;
} _PathElem_default_instance_;
class ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value>
      _instance;
} _Value_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error>
      _instance;
} _Error_default_instance_;
class Decimal64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Decimal64>
      _instance;
} _Decimal64_default_instance_;
class ScalarArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScalarArray>
      _instance;
} _ScalarArray_default_instance_;
class SubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRequest>
      _instance;
  const ::gnmi::SubscriptionList* subscribe_;
  const ::gnmi::Poll* poll_;
  const ::gnmi::AliasList* aliases_;
} _SubscribeRequest_default_instance_;
class PollDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Poll>
      _instance;
} _Poll_default_instance_;
class SubscribeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeResponse>
      _instance;
  const ::gnmi::Notification* update_;
  bool sync_response_;
  const ::gnmi::Error* error_;
} _SubscribeResponse_default_instance_;
class SubscriptionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscriptionList>
      _instance;
} _SubscriptionList_default_instance_;
class SubscriptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Subscription>
      _instance;
} _Subscription_default_instance_;
class QOSMarkingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QOSMarking>
      _instance;
} _QOSMarking_default_instance_;
class AliasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Alias>
      _instance;
} _Alias_default_instance_;
class AliasListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AliasList>
      _instance;
} _AliasList_default_instance_;
class SetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetRequest>
      _instance;
} _SetRequest_default_instance_;
class SetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetResponse>
      _instance;
} _SetResponse_default_instance_;
class UpdateResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateResult>
      _instance;
} _UpdateResult_default_instance_;
class GetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRequest>
      _instance;
} _GetRequest_default_instance_;
class GetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetResponse>
      _instance;
} _GetResponse_default_instance_;
class CapabilityRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CapabilityRequest>
      _instance;
} _CapabilityRequest_default_instance_;
class CapabilityResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CapabilityResponse>
      _instance;
} _CapabilityResponse_default_instance_;
class ModelDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelData>
      _instance;
} _ModelData_default_instance_;
}  // namespace gnmi
namespace protobuf_gnmi_2fgnmi_2eproto {
static void InitDefaultsNotification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_Notification_default_instance_;
    new (ptr) ::gnmi::Notification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::Notification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Notification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsNotification}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Update.base,}};

static void InitDefaultsUpdate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_Update_default_instance_;
    new (ptr) ::gnmi::Update();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::Update::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Update =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUpdate}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Value.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_ScalarArray.base,}};

static void InitDefaultsPath() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_Path_default_instance_;
    new (ptr) ::gnmi::Path();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::Path::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Path =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPath}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_PathElem.base,}};

static void InitDefaultsPathElem_KeyEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_PathElem_KeyEntry_DoNotUse_default_instance_;
    new (ptr) ::gnmi::PathElem_KeyEntry_DoNotUse();
  }
  ::gnmi::PathElem_KeyEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PathElem_KeyEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPathElem_KeyEntry_DoNotUse}, {}};

static void InitDefaultsPathElem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_PathElem_default_instance_;
    new (ptr) ::gnmi::PathElem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::PathElem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PathElem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPathElem}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_PathElem_KeyEntry_DoNotUse.base,}};

static void InitDefaultsValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_Value_default_instance_;
    new (ptr) ::gnmi::Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue}, {}};

static void InitDefaultsError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_Error_default_instance_;
    new (ptr) ::gnmi::Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::Error::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Error =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsError}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsDecimal64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_Decimal64_default_instance_;
    new (ptr) ::gnmi::Decimal64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::Decimal64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Decimal64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDecimal64}, {}};

static void InitDefaultsScalarArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_TypedValue_default_instance_;
    new (ptr) ::gnmi::TypedValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::gnmi::_ScalarArray_default_instance_;
    new (ptr) ::gnmi::ScalarArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::TypedValue::InitAsDefaultInstance();
  ::gnmi::ScalarArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ScalarArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsScalarArray}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Decimal64.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsSubscribeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_SubscribeRequest_default_instance_;
    new (ptr) ::gnmi::SubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::SubscribeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SubscribeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSubscribeRequest}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_SubscriptionList.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Poll.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_AliasList.base,}};

static void InitDefaultsPoll() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_Poll_default_instance_;
    new (ptr) ::gnmi::Poll();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::Poll::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Poll =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoll}, {}};

static void InitDefaultsSubscribeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_SubscribeResponse_default_instance_;
    new (ptr) ::gnmi::SubscribeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::SubscribeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SubscribeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSubscribeResponse}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Notification.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Error.base,}};

static void InitDefaultsSubscriptionList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_SubscriptionList_default_instance_;
    new (ptr) ::gnmi::SubscriptionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::SubscriptionList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_SubscriptionList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsSubscriptionList}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Subscription.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_QOSMarking.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_ModelData.base,}};

static void InitDefaultsSubscription() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_Subscription_default_instance_;
    new (ptr) ::gnmi::Subscription();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::Subscription::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Subscription =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSubscription}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base,}};

static void InitDefaultsQOSMarking() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_QOSMarking_default_instance_;
    new (ptr) ::gnmi::QOSMarking();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::QOSMarking::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QOSMarking =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQOSMarking}, {}};

static void InitDefaultsAlias() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_Alias_default_instance_;
    new (ptr) ::gnmi::Alias();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::Alias::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Alias =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAlias}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base,}};

static void InitDefaultsAliasList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_AliasList_default_instance_;
    new (ptr) ::gnmi::AliasList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::AliasList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AliasList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAliasList}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Alias.base,}};

static void InitDefaultsSetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_SetRequest_default_instance_;
    new (ptr) ::gnmi::SetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::SetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSetRequest}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Update.base,}};

static void InitDefaultsSetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_SetResponse_default_instance_;
    new (ptr) ::gnmi::SetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::SetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSetResponse}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_UpdateResult.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Error.base,}};

static void InitDefaultsUpdateResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_UpdateResult_default_instance_;
    new (ptr) ::gnmi::UpdateResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::UpdateResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UpdateResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUpdateResult}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Error.base,}};

static void InitDefaultsGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_GetRequest_default_instance_;
    new (ptr) ::gnmi::GetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::GetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetRequest}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_ModelData.base,}};

static void InitDefaultsGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_GetResponse_default_instance_;
    new (ptr) ::gnmi::GetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::GetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetResponse}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Notification.base,
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Error.base,}};

static void InitDefaultsCapabilityRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_CapabilityRequest_default_instance_;
    new (ptr) ::gnmi::CapabilityRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::CapabilityRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CapabilityRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCapabilityRequest}, {}};

static void InitDefaultsCapabilityResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_CapabilityResponse_default_instance_;
    new (ptr) ::gnmi::CapabilityResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::CapabilityResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CapabilityResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCapabilityResponse}, {
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_ModelData.base,}};

static void InitDefaultsModelData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnmi::_ModelData_default_instance_;
    new (ptr) ::gnmi::ModelData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnmi::ModelData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModelData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModelData}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Notification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Update.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Path.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PathElem_KeyEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PathElem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Value.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Error.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Decimal64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScalarArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Poll.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscriptionList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Subscription.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QOSMarking.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Alias.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AliasList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CapabilityRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CapabilityResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelData.base);
}

::google::protobuf::Metadata file_level_metadata[26];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Notification, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Notification, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Notification, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Notification, update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Notification, delete__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Update, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Update, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Update, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Update, val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Update, duplicates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::TypedValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::TypedValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::gnmi::TypedValueDefaultTypeInternal, string_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, int_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, uint_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, bool_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, bytes_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, float_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, decimal_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, leaflist_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, any_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, json_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, json_ietf_val_),
  offsetof(::gnmi::TypedValueDefaultTypeInternal, ascii_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::TypedValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Path, element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Path, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Path, elem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Path, target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::PathElem_KeyEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::PathElem_KeyEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::PathElem_KeyEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::PathElem_KeyEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::PathElem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::PathElem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::PathElem, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Value, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Value, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Error, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Error, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Error, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Decimal64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Decimal64, digits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Decimal64, precision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::ScalarArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::ScalarArray, element_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscribeRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::gnmi::SubscribeRequestDefaultTypeInternal, subscribe_),
  offsetof(::gnmi::SubscribeRequestDefaultTypeInternal, poll_),
  offsetof(::gnmi::SubscribeRequestDefaultTypeInternal, aliases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscribeRequest, request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Poll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscribeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscribeResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::gnmi::SubscribeResponseDefaultTypeInternal, update_),
  offsetof(::gnmi::SubscribeResponseDefaultTypeInternal, sync_response_),
  offsetof(::gnmi::SubscribeResponseDefaultTypeInternal, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscribeResponse, response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscriptionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscriptionList, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscriptionList, subscription_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscriptionList, use_aliases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscriptionList, qos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscriptionList, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscriptionList, allow_aggregation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscriptionList, use_models_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscriptionList, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SubscriptionList, updates_only_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Subscription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Subscription, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Subscription, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Subscription, sample_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Subscription, suppress_redundant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Subscription, heartbeat_interval_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::QOSMarking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::QOSMarking, marking_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Alias, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Alias, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::Alias, alias_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::AliasList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::AliasList, alias_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SetRequest, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SetRequest, delete__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SetRequest, replace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SetRequest, update_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SetResponse, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SetResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SetResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::SetResponse, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::UpdateResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::UpdateResult, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::UpdateResult, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::UpdateResult, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::UpdateResult, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::GetRequest, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::GetRequest, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::GetRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::GetRequest, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::GetRequest, use_models_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::GetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::GetResponse, notification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::GetResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::CapabilityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::CapabilityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::CapabilityResponse, supported_models_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::CapabilityResponse, supported_encodings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::CapabilityResponse, gnmi_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::ModelData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::ModelData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::ModelData, organization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gnmi::ModelData, version_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gnmi::Notification)},
  { 10, -1, sizeof(::gnmi::Update)},
  { 19, -1, sizeof(::gnmi::TypedValue)},
  { 37, -1, sizeof(::gnmi::Path)},
  { 46, 53, sizeof(::gnmi::PathElem_KeyEntry_DoNotUse)},
  { 55, -1, sizeof(::gnmi::PathElem)},
  { 62, -1, sizeof(::gnmi::Value)},
  { 69, -1, sizeof(::gnmi::Error)},
  { 77, -1, sizeof(::gnmi::Decimal64)},
  { 84, -1, sizeof(::gnmi::ScalarArray)},
  { 90, -1, sizeof(::gnmi::SubscribeRequest)},
  { 99, -1, sizeof(::gnmi::Poll)},
  { 104, -1, sizeof(::gnmi::SubscribeResponse)},
  { 113, -1, sizeof(::gnmi::SubscriptionList)},
  { 127, -1, sizeof(::gnmi::Subscription)},
  { 137, -1, sizeof(::gnmi::QOSMarking)},
  { 143, -1, sizeof(::gnmi::Alias)},
  { 150, -1, sizeof(::gnmi::AliasList)},
  { 156, -1, sizeof(::gnmi::SetRequest)},
  { 165, -1, sizeof(::gnmi::SetResponse)},
  { 174, -1, sizeof(::gnmi::UpdateResult)},
  { 183, -1, sizeof(::gnmi::GetRequest)},
  { 193, -1, sizeof(::gnmi::GetResponse)},
  { 200, -1, sizeof(::gnmi::CapabilityRequest)},
  { 205, -1, sizeof(::gnmi::CapabilityResponse)},
  { 213, -1, sizeof(::gnmi::ModelData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_Update_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_TypedValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_Path_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_PathElem_KeyEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_PathElem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_Decimal64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_ScalarArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_SubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_Poll_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_SubscribeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_SubscriptionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_Subscription_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_QOSMarking_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_Alias_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_AliasList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_SetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_SetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_UpdateResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_GetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_GetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_CapabilityRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_CapabilityResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gnmi::_ModelData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gnmi/gnmi.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017gnmi/gnmi.proto\022\004gnmi\032\031google/protobuf"
      "/any.proto\032 google/protobuf/descriptor.p"
      "roto\"\206\001\n\014Notification\022\021\n\ttimestamp\030\001 \001(\003"
      "\022\032\n\006prefix\030\002 \001(\0132\n.gnmi.Path\022\r\n\005alias\030\003 "
      "\001(\t\022\034\n\006update\030\004 \003(\0132\014.gnmi.Update\022\032\n\006del"
      "ete\030\005 \003(\0132\n.gnmi.Path\"u\n\006Update\022\030\n\004path\030"
      "\001 \001(\0132\n.gnmi.Path\022\036\n\005value\030\002 \001(\0132\013.gnmi."
      "ValueB\002\030\001\022\035\n\003val\030\003 \001(\0132\020.gnmi.TypedValue"
      "\022\022\n\nduplicates\030\004 \001(\r\"\316\002\n\nTypedValue\022\024\n\ns"
      "tring_val\030\001 \001(\tH\000\022\021\n\007int_val\030\002 \001(\003H\000\022\022\n\010"
      "uint_val\030\003 \001(\004H\000\022\022\n\010bool_val\030\004 \001(\010H\000\022\023\n\t"
      "bytes_val\030\005 \001(\014H\000\022\023\n\tfloat_val\030\006 \001(\002H\000\022&"
      "\n\013decimal_val\030\007 \001(\0132\017.gnmi.Decimal64H\000\022)"
      "\n\014leaflist_val\030\010 \001(\0132\021.gnmi.ScalarArrayH"
      "\000\022\'\n\007any_val\030\t \001(\0132\024.google.protobuf.Any"
      "H\000\022\022\n\010json_val\030\n \001(\014H\000\022\027\n\rjson_ietf_val\030"
      "\013 \001(\014H\000\022\023\n\tascii_val\030\014 \001(\tH\000B\007\n\005value\"Y\n"
      "\004Path\022\023\n\007element\030\001 \003(\tB\002\030\001\022\016\n\006origin\030\002 \001"
      "(\t\022\034\n\004elem\030\003 \003(\0132\016.gnmi.PathElem\022\016\n\006targ"
      "et\030\004 \001(\t\"j\n\010PathElem\022\014\n\004name\030\001 \001(\t\022$\n\003ke"
      "y\030\002 \003(\0132\027.gnmi.PathElem.KeyEntry\032*\n\010KeyE"
      "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"8\n\005"
      "Value\022\r\n\005value\030\001 \001(\014\022\034\n\004type\030\002 \001(\0162\016.gnm"
      "i.Encoding:\002\030\001\"N\n\005Error\022\014\n\004code\030\001 \001(\r\022\017\n"
      "\007message\030\002 \001(\t\022\"\n\004data\030\003 \001(\0132\024.google.pr"
      "otobuf.Any:\002\030\001\".\n\tDecimal64\022\016\n\006digits\030\001 "
      "\001(\003\022\021\n\tprecision\030\002 \001(\r\"0\n\013ScalarArray\022!\n"
      "\007element\030\001 \003(\0132\020.gnmi.TypedValue\"\212\001\n\020Sub"
      "scribeRequest\022+\n\tsubscribe\030\001 \001(\0132\026.gnmi."
      "SubscriptionListH\000\022\032\n\004poll\030\003 \001(\0132\n.gnmi."
      "PollH\000\022\"\n\007aliases\030\004 \001(\0132\017.gnmi.AliasList"
      "H\000B\t\n\007request\"\006\n\004Poll\"\200\001\n\021SubscribeRespo"
      "nse\022$\n\006update\030\001 \001(\0132\022.gnmi.NotificationH"
      "\000\022\027\n\rsync_response\030\003 \001(\010H\000\022 \n\005error\030\004 \001("
      "\0132\013.gnmi.ErrorB\002\030\001H\000B\n\n\010response\"\327\002\n\020Sub"
      "scriptionList\022\032\n\006prefix\030\001 \001(\0132\n.gnmi.Pat"
      "h\022(\n\014subscription\030\002 \003(\0132\022.gnmi.Subscript"
      "ion\022\023\n\013use_aliases\030\003 \001(\010\022\035\n\003qos\030\004 \001(\0132\020."
      "gnmi.QOSMarking\022)\n\004mode\030\005 \001(\0162\033.gnmi.Sub"
      "scriptionList.Mode\022\031\n\021allow_aggregation\030"
      "\006 \001(\010\022#\n\nuse_models\030\007 \003(\0132\017.gnmi.ModelDa"
      "ta\022 \n\010encoding\030\010 \001(\0162\016.gnmi.Encoding\022\024\n\014"
      "updates_only\030\t \001(\010\"&\n\004Mode\022\n\n\006STREAM\020\000\022\010"
      "\n\004ONCE\020\001\022\010\n\004POLL\020\002\"\237\001\n\014Subscription\022\030\n\004p"
      "ath\030\001 \001(\0132\n.gnmi.Path\022$\n\004mode\030\002 \001(\0162\026.gn"
      "mi.SubscriptionMode\022\027\n\017sample_interval\030\003"
      " \001(\004\022\032\n\022suppress_redundant\030\004 \001(\010\022\032\n\022hear"
      "tbeat_interval\030\005 \001(\004\"\035\n\nQOSMarking\022\017\n\007ma"
      "rking\030\001 \001(\r\"0\n\005Alias\022\030\n\004path\030\001 \001(\0132\n.gnm"
      "i.Path\022\r\n\005alias\030\002 \001(\t\"\'\n\tAliasList\022\032\n\005al"
      "ias\030\001 \003(\0132\013.gnmi.Alias\"\201\001\n\nSetRequest\022\032\n"
      "\006prefix\030\001 \001(\0132\n.gnmi.Path\022\032\n\006delete\030\002 \003("
      "\0132\n.gnmi.Path\022\035\n\007replace\030\003 \003(\0132\014.gnmi.Up"
      "date\022\034\n\006update\030\004 \003(\0132\014.gnmi.Update\"\204\001\n\013S"
      "etResponse\022\032\n\006prefix\030\001 \001(\0132\n.gnmi.Path\022$"
      "\n\010response\030\002 \003(\0132\022.gnmi.UpdateResult\022 \n\007"
      "message\030\003 \001(\0132\013.gnmi.ErrorB\002\030\001\022\021\n\ttimest"
      "amp\030\004 \001(\003\"\312\001\n\014UpdateResult\022\025\n\ttimestamp\030"
      "\001 \001(\003B\002\030\001\022\030\n\004path\030\002 \001(\0132\n.gnmi.Path\022 \n\007m"
      "essage\030\003 \001(\0132\013.gnmi.ErrorB\002\030\001\022(\n\002op\030\004 \001("
      "\0162\034.gnmi.UpdateResult.Operation\"=\n\tOpera"
      "tion\022\013\n\007INVALID\020\000\022\n\n\006DELETE\020\001\022\013\n\007REPLACE"
      "\020\002\022\n\n\006UPDATE\020\003\"\357\001\n\nGetRequest\022\032\n\006prefix\030"
      "\001 \001(\0132\n.gnmi.Path\022\030\n\004path\030\002 \003(\0132\n.gnmi.P"
      "ath\022\'\n\004type\030\003 \001(\0162\031.gnmi.GetRequest.Data"
      "Type\022 \n\010encoding\030\005 \001(\0162\016.gnmi.Encoding\022#"
      "\n\nuse_models\030\006 \003(\0132\017.gnmi.ModelData\";\n\010D"
      "ataType\022\007\n\003ALL\020\000\022\n\n\006CONFIG\020\001\022\t\n\005STATE\020\002\022"
      "\017\n\013OPERATIONAL\020\003\"W\n\013GetResponse\022(\n\014notif"
      "ication\030\001 \003(\0132\022.gnmi.Notification\022\036\n\005err"
      "or\030\002 \001(\0132\013.gnmi.ErrorB\002\030\001\"\023\n\021CapabilityR"
      "equest\"\202\001\n\022CapabilityResponse\022)\n\020support"
      "ed_models\030\001 \003(\0132\017.gnmi.ModelData\022+\n\023supp"
      "orted_encodings\030\002 \003(\0162\016.gnmi.Encoding\022\024\n"
      "\014gNMI_version\030\003 \001(\t\"@\n\tModelData\022\014\n\004name"
      "\030\001 \001(\t\022\024\n\014organization\030\002 \001(\t\022\017\n\007version\030"
      "\003 \001(\t*D\n\010Encoding\022\010\n\004JSON\020\000\022\t\n\005BYTES\020\001\022\t"
      "\n\005PROTO\020\002\022\t\n\005ASCII\020\003\022\r\n\tJSON_IETF\020\004*A\n\020S"
      "ubscriptionMode\022\022\n\016TARGET_DEFINED\020\000\022\r\n\tO"
      "N_CHANGE\020\001\022\n\n\006SAMPLE\020\0022\343\001\n\004gNMI\022A\n\014Capab"
      "ilities\022\027.gnmi.CapabilityRequest\032\030.gnmi."
      "CapabilityResponse\022*\n\003Get\022\020.gnmi.GetRequ"
      "est\032\021.gnmi.GetResponse\022*\n\003Set\022\020.gnmi.Set"
      "Request\032\021.gnmi.SetResponse\022@\n\tSubscribe\022"
      "\026.gnmi.SubscribeRequest\032\027.gnmi.Subscribe"
      "Response(\0010\001:3\n\014gnmi_service\022\034.google.pr"
      "otobuf.FileOptions\030\351\007 \001(\tB\010\312>\0050.5.0b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3483);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gnmi/gnmi.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gnmi_2fgnmi_2eproto
namespace gnmi {
const ::google::protobuf::EnumDescriptor* SubscriptionList_Mode_descriptor() {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2fgnmi_2eproto::file_level_enum_descriptors[0];
}
bool SubscriptionList_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SubscriptionList_Mode SubscriptionList::STREAM;
const SubscriptionList_Mode SubscriptionList::ONCE;
const SubscriptionList_Mode SubscriptionList::POLL;
const SubscriptionList_Mode SubscriptionList::Mode_MIN;
const SubscriptionList_Mode SubscriptionList::Mode_MAX;
const int SubscriptionList::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UpdateResult_Operation_descriptor() {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2fgnmi_2eproto::file_level_enum_descriptors[1];
}
bool UpdateResult_Operation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UpdateResult_Operation UpdateResult::INVALID;
const UpdateResult_Operation UpdateResult::DELETE;
const UpdateResult_Operation UpdateResult::REPLACE;
const UpdateResult_Operation UpdateResult::UPDATE;
const UpdateResult_Operation UpdateResult::Operation_MIN;
const UpdateResult_Operation UpdateResult::Operation_MAX;
const int UpdateResult::Operation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetRequest_DataType_descriptor() {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2fgnmi_2eproto::file_level_enum_descriptors[2];
}
bool GetRequest_DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetRequest_DataType GetRequest::ALL;
const GetRequest_DataType GetRequest::CONFIG;
const GetRequest_DataType GetRequest::STATE;
const GetRequest_DataType GetRequest::OPERATIONAL;
const GetRequest_DataType GetRequest::DataType_MIN;
const GetRequest_DataType GetRequest::DataType_MAX;
const int GetRequest::DataType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Encoding_descriptor() {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2fgnmi_2eproto::file_level_enum_descriptors[3];
}
bool Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SubscriptionMode_descriptor() {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2fgnmi_2eproto::file_level_enum_descriptors[4];
}
bool SubscriptionMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Notification::InitAsDefaultInstance() {
  ::gnmi::_Notification_default_instance_._instance.get_mutable()->prefix_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Notification::kTimestampFieldNumber;
const int Notification::kPrefixFieldNumber;
const int Notification::kAliasFieldNumber;
const int Notification::kUpdateFieldNumber;
const int Notification::kDeleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Notification::Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Notification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Notification)
}
Notification::Notification(const Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      update_(from.update_),
      delete__(from.delete__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alias().size() > 0) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_prefix()) {
    prefix_ = new ::gnmi::Path(*from.prefix_);
  } else {
    prefix_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:gnmi.Notification)
}

void Notification::SharedCtor() {
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&prefix_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&prefix_)) + sizeof(timestamp_));
}

Notification::~Notification() {
  // @@protoc_insertion_point(destructor:gnmi.Notification)
  SharedDtor();
}

void Notification::SharedDtor() {
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete prefix_;
}

void Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Notification::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Notification& Notification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_Notification.base);
  return *internal_default_instance();
}


void Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  update_.Clear();
  delete__.Clear();
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) {
    delete prefix_;
  }
  prefix_ = NULL;
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Notification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Path prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alias = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), static_cast<int>(this->alias().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Notification.alias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Update update = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Path delete = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_delete_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Notification)
  return false;
#undef DO_
}

void Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // .gnmi.Path prefix = 2;
  if (this->has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_prefix(), output);
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Notification.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->alias(), output);
  }

  // repeated .gnmi.Update update = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->update_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->update(static_cast<int>(i)),
      output);
  }

  // repeated .gnmi.Path delete = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delete__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->delete_(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.Notification)
}

::google::protobuf::uint8* Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // .gnmi.Path prefix = 2;
  if (this->has_prefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_prefix(), deterministic, target);
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Notification.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->alias(), target);
  }

  // repeated .gnmi.Update update = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->update_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->update(static_cast<int>(i)), deterministic, target);
  }

  // repeated .gnmi.Path delete = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delete__size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->delete_(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Notification)
  return target;
}

size_t Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Notification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gnmi.Update update = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->update_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->update(static_cast<int>(i)));
    }
  }

  // repeated .gnmi.Path delete = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->delete__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->delete_(static_cast<int>(i)));
    }
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // .gnmi.Path prefix = 2;
  if (this->has_prefix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prefix_);
  }

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Notification)
    MergeFrom(*source);
  }
}

void Notification::MergeFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  update_.MergeFrom(from.update_);
  delete__.MergeFrom(from.delete__);
  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_prefix()) {
    mutable_prefix()->::gnmi::Path::MergeFrom(from.prefix());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notification::CopyFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notification::IsInitialized() const {
  return true;
}

void Notification::Swap(Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Notification::InternalSwap(Notification* other) {
  using std::swap;
  CastToBase(&update_)->InternalSwap(CastToBase(&other->update_));
  CastToBase(&delete__)->InternalSwap(CastToBase(&other->delete__));
  alias_.Swap(&other->alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(prefix_, other->prefix_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Notification::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Update::InitAsDefaultInstance() {
  ::gnmi::_Update_default_instance_._instance.get_mutable()->path_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  ::gnmi::_Update_default_instance_._instance.get_mutable()->value_ = const_cast< ::gnmi::Value*>(
      ::gnmi::Value::internal_default_instance());
  ::gnmi::_Update_default_instance_._instance.get_mutable()->val_ = const_cast< ::gnmi::TypedValue*>(
      ::gnmi::TypedValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Update::kPathFieldNumber;
const int Update::kValueFieldNumber;
const int Update::kValFieldNumber;
const int Update::kDuplicatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Update::Update()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Update.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Update)
}
Update::Update(const Update& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_path()) {
    path_ = new ::gnmi::Path(*from.path_);
  } else {
    path_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::gnmi::Value(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_val()) {
    val_ = new ::gnmi::TypedValue(*from.val_);
  } else {
    val_ = NULL;
  }
  duplicates_ = from.duplicates_;
  // @@protoc_insertion_point(copy_constructor:gnmi.Update)
}

void Update::SharedCtor() {
  ::memset(&path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duplicates_) -
      reinterpret_cast<char*>(&path_)) + sizeof(duplicates_));
}

Update::~Update() {
  // @@protoc_insertion_point(destructor:gnmi.Update)
  SharedDtor();
}

void Update::SharedDtor() {
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete value_;
  if (this != internal_default_instance()) delete val_;
}

void Update::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Update::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Update& Update::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_Update.base);
  return *internal_default_instance();
}


void Update::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && val_ != NULL) {
    delete val_;
  }
  val_ = NULL;
  duplicates_ = 0u;
  _internal_metadata_.Clear();
}

bool Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Update)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Value value = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.TypedValue val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 duplicates = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duplicates_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Update)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Update)
  return false;
#undef DO_
}

void Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_path(), output);
  }

  // .gnmi.Value value = 2 [deprecated = true];
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  // .gnmi.TypedValue val = 3;
  if (this->has_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_val(), output);
  }

  // uint32 duplicates = 4;
  if (this->duplicates() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->duplicates(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.Update)
}

::google::protobuf::uint8* Update::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_path(), deterministic, target);
  }

  // .gnmi.Value value = 2 [deprecated = true];
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  // .gnmi.TypedValue val = 3;
  if (this->has_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_val(), deterministic, target);
  }

  // uint32 duplicates = 4;
  if (this->duplicates() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->duplicates(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Update)
  return target;
}

size_t Update::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Update)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gnmi.Path path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .gnmi.Value value = 2 [deprecated = true];
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // .gnmi.TypedValue val = 3;
  if (this->has_val()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *val_);
  }

  // uint32 duplicates = 4;
  if (this->duplicates() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->duplicates());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Update::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Update)
  GOOGLE_DCHECK_NE(&from, this);
  const Update* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Update>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Update)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Update)
    MergeFrom(*source);
  }
}

void Update::MergeFrom(const Update& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Update)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    mutable_path()->::gnmi::Path::MergeFrom(from.path());
  }
  if (from.has_value()) {
    mutable_value()->::gnmi::Value::MergeFrom(from.value());
  }
  if (from.has_val()) {
    mutable_val()->::gnmi::TypedValue::MergeFrom(from.val());
  }
  if (from.duplicates() != 0) {
    set_duplicates(from.duplicates());
  }
}

void Update::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Update::CopyFrom(const Update& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Update::IsInitialized() const {
  return true;
}

void Update::Swap(Update* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Update::InternalSwap(Update* other) {
  using std::swap;
  swap(path_, other->path_);
  swap(value_, other->value_);
  swap(val_, other->val_);
  swap(duplicates_, other->duplicates_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Update::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TypedValue::InitAsDefaultInstance() {
  ::gnmi::_TypedValue_default_instance_.string_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::gnmi::_TypedValue_default_instance_.int_val_ = GOOGLE_LONGLONG(0);
  ::gnmi::_TypedValue_default_instance_.uint_val_ = GOOGLE_ULONGLONG(0);
  ::gnmi::_TypedValue_default_instance_.bool_val_ = false;
  ::gnmi::_TypedValue_default_instance_.bytes_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::gnmi::_TypedValue_default_instance_.float_val_ = 0;
  ::gnmi::_TypedValue_default_instance_.decimal_val_ = const_cast< ::gnmi::Decimal64*>(
      ::gnmi::Decimal64::internal_default_instance());
  ::gnmi::_TypedValue_default_instance_.leaflist_val_ = const_cast< ::gnmi::ScalarArray*>(
      ::gnmi::ScalarArray::internal_default_instance());
  ::gnmi::_TypedValue_default_instance_.any_val_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::gnmi::_TypedValue_default_instance_.json_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::gnmi::_TypedValue_default_instance_.json_ietf_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::gnmi::_TypedValue_default_instance_.ascii_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TypedValue::set_allocated_decimal_val(::gnmi::Decimal64* decimal_val) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (decimal_val) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal_val = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal_val, submessage_arena);
    }
    set_has_decimal_val();
    value_.decimal_val_ = decimal_val;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.decimal_val)
}
void TypedValue::set_allocated_leaflist_val(::gnmi::ScalarArray* leaflist_val) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (leaflist_val) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      leaflist_val = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, leaflist_val, submessage_arena);
    }
    set_has_leaflist_val();
    value_.leaflist_val_ = leaflist_val;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.leaflist_val)
}
void TypedValue::set_allocated_any_val(::google::protobuf::Any* any_val) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (any_val) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      any_val = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, any_val, submessage_arena);
    }
    set_has_any_val();
    value_.any_val_ = any_val;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.any_val)
}
void TypedValue::clear_any_val() {
  if (has_any_val()) {
    delete value_.any_val_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypedValue::kStringValFieldNumber;
const int TypedValue::kIntValFieldNumber;
const int TypedValue::kUintValFieldNumber;
const int TypedValue::kBoolValFieldNumber;
const int TypedValue::kBytesValFieldNumber;
const int TypedValue::kFloatValFieldNumber;
const int TypedValue::kDecimalValFieldNumber;
const int TypedValue::kLeaflistValFieldNumber;
const int TypedValue::kAnyValFieldNumber;
const int TypedValue::kJsonValFieldNumber;
const int TypedValue::kJsonIetfValFieldNumber;
const int TypedValue::kAsciiValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypedValue::TypedValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_ScalarArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.TypedValue)
}
TypedValue::TypedValue(const TypedValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kStringVal: {
      set_string_val(from.string_val());
      break;
    }
    case kIntVal: {
      set_int_val(from.int_val());
      break;
    }
    case kUintVal: {
      set_uint_val(from.uint_val());
      break;
    }
    case kBoolVal: {
      set_bool_val(from.bool_val());
      break;
    }
    case kBytesVal: {
      set_bytes_val(from.bytes_val());
      break;
    }
    case kFloatVal: {
      set_float_val(from.float_val());
      break;
    }
    case kDecimalVal: {
      mutable_decimal_val()->::gnmi::Decimal64::MergeFrom(from.decimal_val());
      break;
    }
    case kLeaflistVal: {
      mutable_leaflist_val()->::gnmi::ScalarArray::MergeFrom(from.leaflist_val());
      break;
    }
    case kAnyVal: {
      mutable_any_val()->::google::protobuf::Any::MergeFrom(from.any_val());
      break;
    }
    case kJsonVal: {
      set_json_val(from.json_val());
      break;
    }
    case kJsonIetfVal: {
      set_json_ietf_val(from.json_ietf_val());
      break;
    }
    case kAsciiVal: {
      set_ascii_val(from.ascii_val());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.TypedValue)
}

void TypedValue::SharedCtor() {
  clear_has_value();
}

TypedValue::~TypedValue() {
  // @@protoc_insertion_point(destructor:gnmi.TypedValue)
  SharedDtor();
}

void TypedValue::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void TypedValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TypedValue::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TypedValue& TypedValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_ScalarArray.base);
  return *internal_default_instance();
}


void TypedValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:gnmi.TypedValue)
  switch (value_case()) {
    case kStringVal: {
      value_.string_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIntVal: {
      // No need to clear
      break;
    }
    case kUintVal: {
      // No need to clear
      break;
    }
    case kBoolVal: {
      // No need to clear
      break;
    }
    case kBytesVal: {
      value_.bytes_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFloatVal: {
      // No need to clear
      break;
    }
    case kDecimalVal: {
      delete value_.decimal_val_;
      break;
    }
    case kLeaflistVal: {
      delete value_.leaflist_val_;
      break;
    }
    case kAnyVal: {
      delete value_.any_val_;
      break;
    }
    case kJsonVal: {
      value_.json_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kJsonIetfVal: {
      value_.json_ietf_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kAsciiVal: {
      value_.ascii_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TypedValue::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.TypedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool TypedValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.TypedValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string string_val = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_val().data(), static_cast<int>(this->string_val().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.TypedValue.string_val"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int_val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int_val_)));
          set_has_int_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uint_val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.uint_val_)));
          set_has_uint_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_val = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_val_)));
          set_has_bool_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bytes_val = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_val = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.float_val_)));
          set_has_float_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Decimal64 decimal_val = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.ScalarArray leaflist_val = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_leaflist_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any any_val = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_any_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes json_val = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_json_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes json_ietf_val = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_json_ietf_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ascii_val = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ascii_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ascii_val().data(), static_cast<int>(this->ascii_val().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.TypedValue.ascii_val"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.TypedValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.TypedValue)
  return false;
#undef DO_
}

void TypedValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.TypedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_val = 1;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_val().data(), static_cast<int>(this->string_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.TypedValue.string_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_val(), output);
  }

  // int64 int_val = 2;
  if (has_int_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int_val(), output);
  }

  // uint64 uint_val = 3;
  if (has_uint_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uint_val(), output);
  }

  // bool bool_val = 4;
  if (has_bool_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bool_val(), output);
  }

  // bytes bytes_val = 5;
  if (has_bytes_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->bytes_val(), output);
  }

  // float float_val = 6;
  if (has_float_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->float_val(), output);
  }

  // .gnmi.Decimal64 decimal_val = 7;
  if (has_decimal_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_decimal_val(), output);
  }

  // .gnmi.ScalarArray leaflist_val = 8;
  if (has_leaflist_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_leaflist_val(), output);
  }

  // .google.protobuf.Any any_val = 9;
  if (has_any_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_any_val(), output);
  }

  // bytes json_val = 10;
  if (has_json_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->json_val(), output);
  }

  // bytes json_ietf_val = 11;
  if (has_json_ietf_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->json_ietf_val(), output);
  }

  // string ascii_val = 12;
  if (has_ascii_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ascii_val().data(), static_cast<int>(this->ascii_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.TypedValue.ascii_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->ascii_val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.TypedValue)
}

::google::protobuf::uint8* TypedValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.TypedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_val = 1;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_val().data(), static_cast<int>(this->string_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.TypedValue.string_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_val(), target);
  }

  // int64 int_val = 2;
  if (has_int_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int_val(), target);
  }

  // uint64 uint_val = 3;
  if (has_uint_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uint_val(), target);
  }

  // bool bool_val = 4;
  if (has_bool_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bool_val(), target);
  }

  // bytes bytes_val = 5;
  if (has_bytes_val()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->bytes_val(), target);
  }

  // float float_val = 6;
  if (has_float_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->float_val(), target);
  }

  // .gnmi.Decimal64 decimal_val = 7;
  if (has_decimal_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_decimal_val(), deterministic, target);
  }

  // .gnmi.ScalarArray leaflist_val = 8;
  if (has_leaflist_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_leaflist_val(), deterministic, target);
  }

  // .google.protobuf.Any any_val = 9;
  if (has_any_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_any_val(), deterministic, target);
  }

  // bytes json_val = 10;
  if (has_json_val()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->json_val(), target);
  }

  // bytes json_ietf_val = 11;
  if (has_json_ietf_val()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->json_ietf_val(), target);
  }

  // string ascii_val = 12;
  if (has_ascii_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ascii_val().data(), static_cast<int>(this->ascii_val().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.TypedValue.ascii_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->ascii_val(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.TypedValue)
  return target;
}

size_t TypedValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.TypedValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // string string_val = 1;
    case kStringVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_val());
      break;
    }
    // int64 int_val = 2;
    case kIntVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_val());
      break;
    }
    // uint64 uint_val = 3;
    case kUintVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint_val());
      break;
    }
    // bool bool_val = 4;
    case kBoolVal: {
      total_size += 1 + 1;
      break;
    }
    // bytes bytes_val = 5;
    case kBytesVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_val());
      break;
    }
    // float float_val = 6;
    case kFloatVal: {
      total_size += 1 + 4;
      break;
    }
    // .gnmi.Decimal64 decimal_val = 7;
    case kDecimalVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.decimal_val_);
      break;
    }
    // .gnmi.ScalarArray leaflist_val = 8;
    case kLeaflistVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.leaflist_val_);
      break;
    }
    // .google.protobuf.Any any_val = 9;
    case kAnyVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.any_val_);
      break;
    }
    // bytes json_val = 10;
    case kJsonVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->json_val());
      break;
    }
    // bytes json_ietf_val = 11;
    case kJsonIetfVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->json_ietf_val());
      break;
    }
    // string ascii_val = 12;
    case kAsciiVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ascii_val());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TypedValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.TypedValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TypedValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypedValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.TypedValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.TypedValue)
    MergeFrom(*source);
  }
}

void TypedValue::MergeFrom(const TypedValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.TypedValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kStringVal: {
      set_string_val(from.string_val());
      break;
    }
    case kIntVal: {
      set_int_val(from.int_val());
      break;
    }
    case kUintVal: {
      set_uint_val(from.uint_val());
      break;
    }
    case kBoolVal: {
      set_bool_val(from.bool_val());
      break;
    }
    case kBytesVal: {
      set_bytes_val(from.bytes_val());
      break;
    }
    case kFloatVal: {
      set_float_val(from.float_val());
      break;
    }
    case kDecimalVal: {
      mutable_decimal_val()->::gnmi::Decimal64::MergeFrom(from.decimal_val());
      break;
    }
    case kLeaflistVal: {
      mutable_leaflist_val()->::gnmi::ScalarArray::MergeFrom(from.leaflist_val());
      break;
    }
    case kAnyVal: {
      mutable_any_val()->::google::protobuf::Any::MergeFrom(from.any_val());
      break;
    }
    case kJsonVal: {
      set_json_val(from.json_val());
      break;
    }
    case kJsonIetfVal: {
      set_json_ietf_val(from.json_ietf_val());
      break;
    }
    case kAsciiVal: {
      set_ascii_val(from.ascii_val());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void TypedValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.TypedValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypedValue::CopyFrom(const TypedValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.TypedValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypedValue::IsInitialized() const {
  return true;
}

void TypedValue::Swap(TypedValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypedValue::InternalSwap(TypedValue* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TypedValue::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Path::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Path::kElementFieldNumber;
const int Path::kOriginFieldNumber;
const int Path::kElemFieldNumber;
const int Path::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Path::Path()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Path)
}
Path::Path(const Path& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      element_(from.element_),
      elem_(from.elem_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.origin().size() > 0) {
    origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
  }
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target().size() > 0) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.Path)
}

void Path::SharedCtor() {
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Path::~Path() {
  // @@protoc_insertion_point(destructor:gnmi.Path)
  SharedDtor();
}

void Path::SharedDtor() {
  origin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Path::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Path::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Path& Path::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_Path.base);
  return *internal_default_instance();
}


void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  elem_.Clear();
  origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Path)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string element = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_element()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->element(this->element_size() - 1).data(),
            static_cast<int>(this->element(this->element_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Path.element"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string origin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->origin().data(), static_cast<int>(this->origin().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Path.origin"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.PathElem elem = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_elem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Path.target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Path)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Path)
  return false;
#undef DO_
}

void Path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string element = 1 [deprecated = true];
  for (int i = 0, n = this->element_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element(i).data(), static_cast<int>(this->element(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Path.element");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->element(i), output);
  }

  // string origin = 2;
  if (this->origin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin().data(), static_cast<int>(this->origin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Path.origin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->origin(), output);
  }

  // repeated .gnmi.PathElem elem = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elem_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->elem(static_cast<int>(i)),
      output);
  }

  // string target = 4;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Path.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.Path)
}

::google::protobuf::uint8* Path::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string element = 1 [deprecated = true];
  for (int i = 0, n = this->element_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element(i).data(), static_cast<int>(this->element(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Path.element");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->element(i), target);
  }

  // string origin = 2;
  if (this->origin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin().data(), static_cast<int>(this->origin().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Path.origin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->origin(), target);
  }

  // repeated .gnmi.PathElem elem = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elem_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->elem(static_cast<int>(i)), deterministic, target);
  }

  // string target = 4;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Path.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Path)
  return target;
}

size_t Path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Path)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string element = 1 [deprecated = true];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->element_size());
  for (int i = 0, n = this->element_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->element(i));
  }

  // repeated .gnmi.PathElem elem = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->elem_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->elem(static_cast<int>(i)));
    }
  }

  // string origin = 2;
  if (this->origin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origin());
  }

  // string target = 4;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Path::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Path)
  GOOGLE_DCHECK_NE(&from, this);
  const Path* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Path>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Path)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Path)
    MergeFrom(*source);
  }
}

void Path::MergeFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Path)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  elem_.MergeFrom(from.elem_);
  if (from.origin().size() > 0) {

    origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
  }
  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
}

void Path::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path::IsInitialized() const {
  return true;
}

void Path::Swap(Path* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Path::InternalSwap(Path* other) {
  using std::swap;
  element_.InternalSwap(CastToBase(&other->element_));
  CastToBase(&elem_)->InternalSwap(CastToBase(&other->elem_));
  origin_.Swap(&other->origin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_.Swap(&other->target_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Path::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PathElem_KeyEntry_DoNotUse::PathElem_KeyEntry_DoNotUse() {}
PathElem_KeyEntry_DoNotUse::PathElem_KeyEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PathElem_KeyEntry_DoNotUse::MergeFrom(const PathElem_KeyEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PathElem_KeyEntry_DoNotUse::GetMetadata() const {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[4];
}
void PathElem_KeyEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PathElem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathElem::kNameFieldNumber;
const int PathElem::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathElem::PathElem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_PathElem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.PathElem)
}
PathElem::PathElem(const PathElem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.MergeFrom(from.key_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.PathElem)
}

void PathElem::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PathElem::~PathElem() {
  // @@protoc_insertion_point(destructor:gnmi.PathElem)
  SharedDtor();
}

void PathElem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PathElem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PathElem::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PathElem& PathElem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_PathElem.base);
  return *internal_default_instance();
}


void PathElem::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.PathElem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PathElem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.PathElem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.PathElem.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          PathElem_KeyEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PathElem_KeyEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&key_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.PathElem.KeyEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.PathElem.KeyEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.PathElem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.PathElem)
  return false;
#undef DO_
}

void PathElem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.PathElem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.PathElem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // map<string, string> key = 2;
  if (!this->key().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "gnmi.PathElem.KeyEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "gnmi.PathElem.KeyEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->key().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->key().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->key().begin();
          it != this->key().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PathElem_KeyEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(key_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PathElem_KeyEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->key().begin();
          it != this->key().end(); ++it) {
        entry.reset(key_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.PathElem)
}

::google::protobuf::uint8* PathElem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.PathElem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.PathElem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // map<string, string> key = 2;
  if (!this->key().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "gnmi.PathElem.KeyEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "gnmi.PathElem.KeyEntry.value");
      }
    };

    if (deterministic &&
        this->key().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->key().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->key().begin();
          it != this->key().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PathElem_KeyEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(key_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PathElem_KeyEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->key().begin();
          it != this->key().end(); ++it) {
        entry.reset(key_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.PathElem)
  return target;
}

size_t PathElem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.PathElem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> key = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->key_size());
  {
    ::std::unique_ptr<PathElem_KeyEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->key().begin();
        it != this->key().end(); ++it) {
      entry.reset(key_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathElem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.PathElem)
  GOOGLE_DCHECK_NE(&from, this);
  const PathElem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PathElem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.PathElem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.PathElem)
    MergeFrom(*source);
  }
}

void PathElem::MergeFrom(const PathElem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.PathElem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PathElem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.PathElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathElem::CopyFrom(const PathElem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.PathElem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathElem::IsInitialized() const {
  return true;
}

void PathElem::Swap(PathElem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathElem::InternalSwap(PathElem* other) {
  using std::swap;
  key_.Swap(&other->key_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PathElem::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Value::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value::kValueFieldNumber;
const int Value::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value::Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Value.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Value)
}
Value::Value(const Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:gnmi.Value)
}

void Value::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:gnmi.Value)
  SharedDtor();
}

void Value::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value& Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_Value.base);
  return *internal_default_instance();
}


void Value::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Encoding type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::gnmi::Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Value)
  return false;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // .gnmi.Encoding type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.Value)
}

::google::protobuf::uint8* Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  // .gnmi.Encoding type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Value)
  return target;
}

size_t Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .gnmi.Encoding type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Value)
    MergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {
  return true;
}

void Value::Swap(Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value::InternalSwap(Value* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error::InitAsDefaultInstance() {
  ::gnmi::_Error_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void Error::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kCodeFieldNumber;
const int Error::kMessageFieldNumber;
const int Error::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Error.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gnmi.Error)
}

void Error::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&data_)) + sizeof(code_));
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:gnmi.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_Error.base);
  return *internal_default_instance();
}


void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  code_ = 0u;
  _internal_metadata_.Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Error)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Error.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Error.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Error.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Decimal64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Decimal64::kDigitsFieldNumber;
const int Decimal64::kPrecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Decimal64::Decimal64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Decimal64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Decimal64)
}
Decimal64::Decimal64(const Decimal64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&digits_, &from.digits_,
    static_cast<size_t>(reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&digits_)) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:gnmi.Decimal64)
}

void Decimal64::SharedCtor() {
  ::memset(&digits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&digits_)) + sizeof(precision_));
}

Decimal64::~Decimal64() {
  // @@protoc_insertion_point(destructor:gnmi.Decimal64)
  SharedDtor();
}

void Decimal64::SharedDtor() {
}

void Decimal64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Decimal64::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Decimal64& Decimal64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_Decimal64.base);
  return *internal_default_instance();
}


void Decimal64::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Decimal64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&digits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&digits_)) + sizeof(precision_));
  _internal_metadata_.Clear();
}

bool Decimal64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Decimal64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 digits = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &digits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 precision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Decimal64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Decimal64)
  return false;
#undef DO_
}

void Decimal64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Decimal64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 digits = 1;
  if (this->digits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->digits(), output);
  }

  // uint32 precision = 2;
  if (this->precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->precision(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.Decimal64)
}

::google::protobuf::uint8* Decimal64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Decimal64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 digits = 1;
  if (this->digits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->digits(), target);
  }

  // uint32 precision = 2;
  if (this->precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->precision(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Decimal64)
  return target;
}

size_t Decimal64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Decimal64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 digits = 1;
  if (this->digits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->digits());
  }

  // uint32 precision = 2;
  if (this->precision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->precision());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Decimal64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Decimal64)
  GOOGLE_DCHECK_NE(&from, this);
  const Decimal64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Decimal64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Decimal64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Decimal64)
    MergeFrom(*source);
  }
}

void Decimal64::MergeFrom(const Decimal64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Decimal64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.digits() != 0) {
    set_digits(from.digits());
  }
  if (from.precision() != 0) {
    set_precision(from.precision());
  }
}

void Decimal64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Decimal64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Decimal64::CopyFrom(const Decimal64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Decimal64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Decimal64::IsInitialized() const {
  return true;
}

void Decimal64::Swap(Decimal64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Decimal64::InternalSwap(Decimal64* other) {
  using std::swap;
  swap(digits_, other->digits_);
  swap(precision_, other->precision_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Decimal64::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScalarArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScalarArray::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScalarArray::ScalarArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_ScalarArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.ScalarArray)
}
ScalarArray::ScalarArray(const ScalarArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      element_(from.element_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gnmi.ScalarArray)
}

void ScalarArray::SharedCtor() {
}

ScalarArray::~ScalarArray() {
  // @@protoc_insertion_point(destructor:gnmi.ScalarArray)
  SharedDtor();
}

void ScalarArray::SharedDtor() {
}

void ScalarArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScalarArray::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScalarArray& ScalarArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_ScalarArray.base);
  return *internal_default_instance();
}


void ScalarArray::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.ScalarArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  _internal_metadata_.Clear();
}

bool ScalarArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.ScalarArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gnmi.TypedValue element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.ScalarArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.ScalarArray)
  return false;
#undef DO_
}

void ScalarArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.ScalarArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.TypedValue element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->element(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.ScalarArray)
}

::google::protobuf::uint8* ScalarArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.ScalarArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.TypedValue element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->element(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.ScalarArray)
  return target;
}

size_t ScalarArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.ScalarArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gnmi.TypedValue element = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->element_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->element(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScalarArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.ScalarArray)
  GOOGLE_DCHECK_NE(&from, this);
  const ScalarArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScalarArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.ScalarArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.ScalarArray)
    MergeFrom(*source);
  }
}

void ScalarArray::MergeFrom(const ScalarArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.ScalarArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
}

void ScalarArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.ScalarArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScalarArray::CopyFrom(const ScalarArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.ScalarArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarArray::IsInitialized() const {
  return true;
}

void ScalarArray::Swap(ScalarArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScalarArray::InternalSwap(ScalarArray* other) {
  using std::swap;
  CastToBase(&element_)->InternalSwap(CastToBase(&other->element_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScalarArray::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeRequest::InitAsDefaultInstance() {
  ::gnmi::_SubscribeRequest_default_instance_.subscribe_ = const_cast< ::gnmi::SubscriptionList*>(
      ::gnmi::SubscriptionList::internal_default_instance());
  ::gnmi::_SubscribeRequest_default_instance_.poll_ = const_cast< ::gnmi::Poll*>(
      ::gnmi::Poll::internal_default_instance());
  ::gnmi::_SubscribeRequest_default_instance_.aliases_ = const_cast< ::gnmi::AliasList*>(
      ::gnmi::AliasList::internal_default_instance());
}
void SubscribeRequest::set_allocated_subscribe(::gnmi::SubscriptionList* subscribe) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (subscribe) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subscribe = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subscribe, submessage_arena);
    }
    set_has_subscribe();
    request_.subscribe_ = subscribe;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeRequest.subscribe)
}
void SubscribeRequest::set_allocated_poll(::gnmi::Poll* poll) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (poll) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      poll = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, poll, submessage_arena);
    }
    set_has_poll();
    request_.poll_ = poll;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeRequest.poll)
}
void SubscribeRequest::set_allocated_aliases(::gnmi::AliasList* aliases) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (aliases) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      aliases = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aliases, submessage_arena);
    }
    set_has_aliases();
    request_.aliases_ = aliases;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeRequest.aliases)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRequest::kSubscribeFieldNumber;
const int SubscribeRequest::kPollFieldNumber;
const int SubscribeRequest::kAliasesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_SubscribeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.SubscribeRequest)
}
SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_request();
  switch (from.request_case()) {
    case kSubscribe: {
      mutable_subscribe()->::gnmi::SubscriptionList::MergeFrom(from.subscribe());
      break;
    }
    case kPoll: {
      mutable_poll()->::gnmi::Poll::MergeFrom(from.poll());
      break;
    }
    case kAliases: {
      mutable_aliases()->::gnmi::AliasList::MergeFrom(from.aliases());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  clear_has_request();
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:gnmi.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  if (has_request()) {
    clear_request();
  }
}

void SubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_SubscribeRequest.base);
  return *internal_default_instance();
}


void SubscribeRequest::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:gnmi.SubscribeRequest)
  switch (request_case()) {
    case kSubscribe: {
      delete request_.subscribe_;
      break;
    }
    case kPoll: {
      delete request_.poll_;
      break;
    }
    case kAliases: {
      delete request_.aliases_;
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}


void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request();
  _internal_metadata_.Clear();
}

bool SubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.SubscribeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.SubscriptionList subscribe = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subscribe()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Poll poll = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_poll()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.AliasList aliases = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aliases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.SubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.SubscribeRequest)
  return false;
#undef DO_
}

void SubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.SubscriptionList subscribe = 1;
  if (has_subscribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_subscribe(), output);
  }

  // .gnmi.Poll poll = 3;
  if (has_poll()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_poll(), output);
  }

  // .gnmi.AliasList aliases = 4;
  if (has_aliases()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_aliases(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.SubscribeRequest)
}

::google::protobuf::uint8* SubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.SubscriptionList subscribe = 1;
  if (has_subscribe()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_subscribe(), deterministic, target);
  }

  // .gnmi.Poll poll = 3;
  if (has_poll()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_poll(), deterministic, target);
  }

  // .gnmi.AliasList aliases = 4;
  if (has_aliases()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_aliases(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.SubscribeRequest)
  return target;
}

size_t SubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.SubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (request_case()) {
    // .gnmi.SubscriptionList subscribe = 1;
    case kSubscribe: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.subscribe_);
      break;
    }
    // .gnmi.Poll poll = 3;
    case kPoll: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.poll_);
      break;
    }
    // .gnmi.AliasList aliases = 4;
    case kAliases: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.aliases_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.SubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.SubscribeRequest)
    MergeFrom(*source);
  }
}

void SubscribeRequest::MergeFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_case()) {
    case kSubscribe: {
      mutable_subscribe()->::gnmi::SubscriptionList::MergeFrom(from.subscribe());
      break;
    }
    case kPoll: {
      mutable_poll()->::gnmi::Poll::MergeFrom(from.poll());
      break;
    }
    case kAliases: {
      mutable_aliases()->::gnmi::AliasList::MergeFrom(from.aliases());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
}

void SubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRequest::IsInitialized() const {
  return true;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRequest::InternalSwap(SubscribeRequest* other) {
  using std::swap;
  swap(request_, other->request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Poll::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Poll::Poll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Poll.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Poll)
}
Poll::Poll(const Poll& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gnmi.Poll)
}

void Poll::SharedCtor() {
}

Poll::~Poll() {
  // @@protoc_insertion_point(destructor:gnmi.Poll)
  SharedDtor();
}

void Poll::SharedDtor() {
}

void Poll::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Poll::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Poll& Poll::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_Poll.base);
  return *internal_default_instance();
}


void Poll::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Poll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Poll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Poll)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Poll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Poll)
  return false;
#undef DO_
}

void Poll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Poll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.Poll)
}

::google::protobuf::uint8* Poll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Poll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Poll)
  return target;
}

size_t Poll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Poll)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Poll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Poll)
  GOOGLE_DCHECK_NE(&from, this);
  const Poll* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Poll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Poll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Poll)
    MergeFrom(*source);
  }
}

void Poll::MergeFrom(const Poll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Poll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Poll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Poll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Poll::CopyFrom(const Poll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Poll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Poll::IsInitialized() const {
  return true;
}

void Poll::Swap(Poll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Poll::InternalSwap(Poll* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Poll::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeResponse::InitAsDefaultInstance() {
  ::gnmi::_SubscribeResponse_default_instance_.update_ = const_cast< ::gnmi::Notification*>(
      ::gnmi::Notification::internal_default_instance());
  ::gnmi::_SubscribeResponse_default_instance_.sync_response_ = false;
  ::gnmi::_SubscribeResponse_default_instance_.error_ = const_cast< ::gnmi::Error*>(
      ::gnmi::Error::internal_default_instance());
}
void SubscribeResponse::set_allocated_update(::gnmi::Notification* update) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (update) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update, submessage_arena);
    }
    set_has_update();
    response_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeResponse.update)
}
void SubscribeResponse::set_allocated_error(::gnmi::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response();
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    response_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeResponse.error)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeResponse::kUpdateFieldNumber;
const int SubscribeResponse::kSyncResponseFieldNumber;
const int SubscribeResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeResponse::SubscribeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_SubscribeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.SubscribeResponse)
}
SubscribeResponse::SubscribeResponse(const SubscribeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_response();
  switch (from.response_case()) {
    case kUpdate: {
      mutable_update()->::gnmi::Notification::MergeFrom(from.update());
      break;
    }
    case kSyncResponse: {
      set_sync_response(from.sync_response());
      break;
    }
    case kError: {
      mutable_error()->::gnmi::Error::MergeFrom(from.error());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.SubscribeResponse)
}

void SubscribeResponse::SharedCtor() {
  clear_has_response();
}

SubscribeResponse::~SubscribeResponse() {
  // @@protoc_insertion_point(destructor:gnmi.SubscribeResponse)
  SharedDtor();
}

void SubscribeResponse::SharedDtor() {
  if (has_response()) {
    clear_response();
  }
}

void SubscribeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeResponse::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeResponse& SubscribeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_SubscribeResponse.base);
  return *internal_default_instance();
}


void SubscribeResponse::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:gnmi.SubscribeResponse)
  switch (response_case()) {
    case kUpdate: {
      delete response_.update_;
      break;
    }
    case kSyncResponse: {
      // No need to clear
      break;
    }
    case kError: {
      delete response_.error_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void SubscribeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.SubscribeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear();
}

bool SubscribeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.SubscribeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Notification update = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sync_response = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &response_.sync_response_)));
          set_has_sync_response();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Error error = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.SubscribeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.SubscribeResponse)
  return false;
#undef DO_
}

void SubscribeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.SubscribeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Notification update = 1;
  if (has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_update(), output);
  }

  // bool sync_response = 3;
  if (has_sync_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->sync_response(), output);
  }

  // .gnmi.Error error = 4 [deprecated = true];
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.SubscribeResponse)
}

::google::protobuf::uint8* SubscribeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.SubscribeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Notification update = 1;
  if (has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_update(), deterministic, target);
  }

  // bool sync_response = 3;
  if (has_sync_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->sync_response(), target);
  }

  // .gnmi.Error error = 4 [deprecated = true];
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.SubscribeResponse)
  return target;
}

size_t SubscribeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.SubscribeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (response_case()) {
    // .gnmi.Notification update = 1;
    case kUpdate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.update_);
      break;
    }
    // bool sync_response = 3;
    case kSyncResponse: {
      total_size += 1 + 1;
      break;
    }
    // .gnmi.Error error = 4 [deprecated = true];
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_.error_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.SubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.SubscribeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.SubscribeResponse)
    MergeFrom(*source);
  }
}

void SubscribeResponse::MergeFrom(const SubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.SubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_case()) {
    case kUpdate: {
      mutable_update()->::gnmi::Notification::MergeFrom(from.update());
      break;
    }
    case kSyncResponse: {
      set_sync_response(from.sync_response());
      break;
    }
    case kError: {
      mutable_error()->::gnmi::Error::MergeFrom(from.error());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void SubscribeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.SubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeResponse::CopyFrom(const SubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.SubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeResponse::IsInitialized() const {
  return true;
}

void SubscribeResponse::Swap(SubscribeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeResponse::InternalSwap(SubscribeResponse* other) {
  using std::swap;
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeResponse::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscriptionList::InitAsDefaultInstance() {
  ::gnmi::_SubscriptionList_default_instance_._instance.get_mutable()->prefix_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  ::gnmi::_SubscriptionList_default_instance_._instance.get_mutable()->qos_ = const_cast< ::gnmi::QOSMarking*>(
      ::gnmi::QOSMarking::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscriptionList::kPrefixFieldNumber;
const int SubscriptionList::kSubscriptionFieldNumber;
const int SubscriptionList::kUseAliasesFieldNumber;
const int SubscriptionList::kQosFieldNumber;
const int SubscriptionList::kModeFieldNumber;
const int SubscriptionList::kAllowAggregationFieldNumber;
const int SubscriptionList::kUseModelsFieldNumber;
const int SubscriptionList::kEncodingFieldNumber;
const int SubscriptionList::kUpdatesOnlyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscriptionList::SubscriptionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_SubscriptionList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.SubscriptionList)
}
SubscriptionList::SubscriptionList(const SubscriptionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subscription_(from.subscription_),
      use_models_(from.use_models_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prefix()) {
    prefix_ = new ::gnmi::Path(*from.prefix_);
  } else {
    prefix_ = NULL;
  }
  if (from.has_qos()) {
    qos_ = new ::gnmi::QOSMarking(*from.qos_);
  } else {
    qos_ = NULL;
  }
  ::memcpy(&mode_, &from.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&mode_)) + sizeof(encoding_));
  // @@protoc_insertion_point(copy_constructor:gnmi.SubscriptionList)
}

void SubscriptionList::SharedCtor() {
  ::memset(&prefix_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encoding_) -
      reinterpret_cast<char*>(&prefix_)) + sizeof(encoding_));
}

SubscriptionList::~SubscriptionList() {
  // @@protoc_insertion_point(destructor:gnmi.SubscriptionList)
  SharedDtor();
}

void SubscriptionList::SharedDtor() {
  if (this != internal_default_instance()) delete prefix_;
  if (this != internal_default_instance()) delete qos_;
}

void SubscriptionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscriptionList::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscriptionList& SubscriptionList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_SubscriptionList.base);
  return *internal_default_instance();
}


void SubscriptionList::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.SubscriptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscription_.Clear();
  use_models_.Clear();
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) {
    delete prefix_;
  }
  prefix_ = NULL;
  if (GetArenaNoVirtual() == NULL && qos_ != NULL) {
    delete qos_;
  }
  qos_ = NULL;
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encoding_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(encoding_));
  _internal_metadata_.Clear();
}

bool SubscriptionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.SubscriptionList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Subscription subscription = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subscription()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_aliases = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_aliases_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.QOSMarking qos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_qos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.SubscriptionList.Mode mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::gnmi::SubscriptionList_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allow_aggregation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_aggregation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.ModelData use_models = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_use_models()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Encoding encoding = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::gnmi::Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool updates_only = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &updates_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.SubscriptionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.SubscriptionList)
  return false;
#undef DO_
}

void SubscriptionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.SubscriptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_prefix(), output);
  }

  // repeated .gnmi.Subscription subscription = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscription_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->subscription(static_cast<int>(i)),
      output);
  }

  // bool use_aliases = 3;
  if (this->use_aliases() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->use_aliases(), output);
  }

  // .gnmi.QOSMarking qos = 4;
  if (this->has_qos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_qos(), output);
  }

  // .gnmi.SubscriptionList.Mode mode = 5;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->mode(), output);
  }

  // bool allow_aggregation = 6;
  if (this->allow_aggregation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->allow_aggregation(), output);
  }

  // repeated .gnmi.ModelData use_models = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->use_models_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->use_models(static_cast<int>(i)),
      output);
  }

  // .gnmi.Encoding encoding = 8;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->encoding(), output);
  }

  // bool updates_only = 9;
  if (this->updates_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->updates_only(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.SubscriptionList)
}

::google::protobuf::uint8* SubscriptionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.SubscriptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_prefix(), deterministic, target);
  }

  // repeated .gnmi.Subscription subscription = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscription_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->subscription(static_cast<int>(i)), deterministic, target);
  }

  // bool use_aliases = 3;
  if (this->use_aliases() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->use_aliases(), target);
  }

  // .gnmi.QOSMarking qos = 4;
  if (this->has_qos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_qos(), deterministic, target);
  }

  // .gnmi.SubscriptionList.Mode mode = 5;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->mode(), target);
  }

  // bool allow_aggregation = 6;
  if (this->allow_aggregation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->allow_aggregation(), target);
  }

  // repeated .gnmi.ModelData use_models = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->use_models_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->use_models(static_cast<int>(i)), deterministic, target);
  }

  // .gnmi.Encoding encoding = 8;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->encoding(), target);
  }

  // bool updates_only = 9;
  if (this->updates_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->updates_only(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.SubscriptionList)
  return target;
}

size_t SubscriptionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.SubscriptionList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gnmi.Subscription subscription = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->subscription_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subscription(static_cast<int>(i)));
    }
  }

  // repeated .gnmi.ModelData use_models = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->use_models_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->use_models(static_cast<int>(i)));
    }
  }

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prefix_);
  }

  // .gnmi.QOSMarking qos = 4;
  if (this->has_qos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *qos_);
  }

  // .gnmi.SubscriptionList.Mode mode = 5;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // bool use_aliases = 3;
  if (this->use_aliases() != 0) {
    total_size += 1 + 1;
  }

  // bool allow_aggregation = 6;
  if (this->allow_aggregation() != 0) {
    total_size += 1 + 1;
  }

  // bool updates_only = 9;
  if (this->updates_only() != 0) {
    total_size += 1 + 1;
  }

  // .gnmi.Encoding encoding = 8;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscriptionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.SubscriptionList)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscriptionList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscriptionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.SubscriptionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.SubscriptionList)
    MergeFrom(*source);
  }
}

void SubscriptionList::MergeFrom(const SubscriptionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.SubscriptionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscription_.MergeFrom(from.subscription_);
  use_models_.MergeFrom(from.use_models_);
  if (from.has_prefix()) {
    mutable_prefix()->::gnmi::Path::MergeFrom(from.prefix());
  }
  if (from.has_qos()) {
    mutable_qos()->::gnmi::QOSMarking::MergeFrom(from.qos());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.use_aliases() != 0) {
    set_use_aliases(from.use_aliases());
  }
  if (from.allow_aggregation() != 0) {
    set_allow_aggregation(from.allow_aggregation());
  }
  if (from.updates_only() != 0) {
    set_updates_only(from.updates_only());
  }
  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
}

void SubscriptionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.SubscriptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscriptionList::CopyFrom(const SubscriptionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.SubscriptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscriptionList::IsInitialized() const {
  return true;
}

void SubscriptionList::Swap(SubscriptionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscriptionList::InternalSwap(SubscriptionList* other) {
  using std::swap;
  CastToBase(&subscription_)->InternalSwap(CastToBase(&other->subscription_));
  CastToBase(&use_models_)->InternalSwap(CastToBase(&other->use_models_));
  swap(prefix_, other->prefix_);
  swap(qos_, other->qos_);
  swap(mode_, other->mode_);
  swap(use_aliases_, other->use_aliases_);
  swap(allow_aggregation_, other->allow_aggregation_);
  swap(updates_only_, other->updates_only_);
  swap(encoding_, other->encoding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscriptionList::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Subscription::InitAsDefaultInstance() {
  ::gnmi::_Subscription_default_instance_._instance.get_mutable()->path_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Subscription::kPathFieldNumber;
const int Subscription::kModeFieldNumber;
const int Subscription::kSampleIntervalFieldNumber;
const int Subscription::kSuppressRedundantFieldNumber;
const int Subscription::kHeartbeatIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Subscription::Subscription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Subscription.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Subscription)
}
Subscription::Subscription(const Subscription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_path()) {
    path_ = new ::gnmi::Path(*from.path_);
  } else {
    path_ = NULL;
  }
  ::memcpy(&sample_interval_, &from.sample_interval_,
    static_cast<size_t>(reinterpret_cast<char*>(&heartbeat_interval_) -
    reinterpret_cast<char*>(&sample_interval_)) + sizeof(heartbeat_interval_));
  // @@protoc_insertion_point(copy_constructor:gnmi.Subscription)
}

void Subscription::SharedCtor() {
  ::memset(&path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heartbeat_interval_) -
      reinterpret_cast<char*>(&path_)) + sizeof(heartbeat_interval_));
}

Subscription::~Subscription() {
  // @@protoc_insertion_point(destructor:gnmi.Subscription)
  SharedDtor();
}

void Subscription::SharedDtor() {
  if (this != internal_default_instance()) delete path_;
}

void Subscription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Subscription::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Subscription& Subscription::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_Subscription.base);
  return *internal_default_instance();
}


void Subscription::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Subscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  ::memset(&sample_interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heartbeat_interval_) -
      reinterpret_cast<char*>(&sample_interval_)) + sizeof(heartbeat_interval_));
  _internal_metadata_.Clear();
}

bool Subscription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Subscription)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.SubscriptionMode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::gnmi::SubscriptionMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sample_interval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sample_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool suppress_redundant = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &suppress_redundant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 heartbeat_interval = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &heartbeat_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Subscription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Subscription)
  return false;
#undef DO_
}

void Subscription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Subscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_path(), output);
  }

  // .gnmi.SubscriptionMode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // uint64 sample_interval = 3;
  if (this->sample_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sample_interval(), output);
  }

  // bool suppress_redundant = 4;
  if (this->suppress_redundant() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->suppress_redundant(), output);
  }

  // uint64 heartbeat_interval = 5;
  if (this->heartbeat_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->heartbeat_interval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.Subscription)
}

::google::protobuf::uint8* Subscription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Subscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_path(), deterministic, target);
  }

  // .gnmi.SubscriptionMode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // uint64 sample_interval = 3;
  if (this->sample_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sample_interval(), target);
  }

  // bool suppress_redundant = 4;
  if (this->suppress_redundant() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->suppress_redundant(), target);
  }

  // uint64 heartbeat_interval = 5;
  if (this->heartbeat_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->heartbeat_interval(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Subscription)
  return target;
}

size_t Subscription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Subscription)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gnmi.Path path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // uint64 sample_interval = 3;
  if (this->sample_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sample_interval());
  }

  // .gnmi.SubscriptionMode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // bool suppress_redundant = 4;
  if (this->suppress_redundant() != 0) {
    total_size += 1 + 1;
  }

  // uint64 heartbeat_interval = 5;
  if (this->heartbeat_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->heartbeat_interval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Subscription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Subscription)
  GOOGLE_DCHECK_NE(&from, this);
  const Subscription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Subscription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Subscription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Subscription)
    MergeFrom(*source);
  }
}

void Subscription::MergeFrom(const Subscription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Subscription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    mutable_path()->::gnmi::Path::MergeFrom(from.path());
  }
  if (from.sample_interval() != 0) {
    set_sample_interval(from.sample_interval());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.suppress_redundant() != 0) {
    set_suppress_redundant(from.suppress_redundant());
  }
  if (from.heartbeat_interval() != 0) {
    set_heartbeat_interval(from.heartbeat_interval());
  }
}

void Subscription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Subscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Subscription::CopyFrom(const Subscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Subscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Subscription::IsInitialized() const {
  return true;
}

void Subscription::Swap(Subscription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Subscription::InternalSwap(Subscription* other) {
  using std::swap;
  swap(path_, other->path_);
  swap(sample_interval_, other->sample_interval_);
  swap(mode_, other->mode_);
  swap(suppress_redundant_, other->suppress_redundant_);
  swap(heartbeat_interval_, other->heartbeat_interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Subscription::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QOSMarking::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QOSMarking::kMarkingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QOSMarking::QOSMarking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_QOSMarking.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.QOSMarking)
}
QOSMarking::QOSMarking(const QOSMarking& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  marking_ = from.marking_;
  // @@protoc_insertion_point(copy_constructor:gnmi.QOSMarking)
}

void QOSMarking::SharedCtor() {
  marking_ = 0u;
}

QOSMarking::~QOSMarking() {
  // @@protoc_insertion_point(destructor:gnmi.QOSMarking)
  SharedDtor();
}

void QOSMarking::SharedDtor() {
}

void QOSMarking::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QOSMarking::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QOSMarking& QOSMarking::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_QOSMarking.base);
  return *internal_default_instance();
}


void QOSMarking::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.QOSMarking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  marking_ = 0u;
  _internal_metadata_.Clear();
}

bool QOSMarking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.QOSMarking)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 marking = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &marking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.QOSMarking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.QOSMarking)
  return false;
#undef DO_
}

void QOSMarking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.QOSMarking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 marking = 1;
  if (this->marking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->marking(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.QOSMarking)
}

::google::protobuf::uint8* QOSMarking::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.QOSMarking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 marking = 1;
  if (this->marking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->marking(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.QOSMarking)
  return target;
}

size_t QOSMarking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.QOSMarking)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 marking = 1;
  if (this->marking() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->marking());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QOSMarking::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.QOSMarking)
  GOOGLE_DCHECK_NE(&from, this);
  const QOSMarking* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QOSMarking>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.QOSMarking)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.QOSMarking)
    MergeFrom(*source);
  }
}

void QOSMarking::MergeFrom(const QOSMarking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.QOSMarking)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.marking() != 0) {
    set_marking(from.marking());
  }
}

void QOSMarking::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.QOSMarking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QOSMarking::CopyFrom(const QOSMarking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.QOSMarking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QOSMarking::IsInitialized() const {
  return true;
}

void QOSMarking::Swap(QOSMarking* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QOSMarking::InternalSwap(QOSMarking* other) {
  using std::swap;
  swap(marking_, other->marking_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QOSMarking::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Alias::InitAsDefaultInstance() {
  ::gnmi::_Alias_default_instance_._instance.get_mutable()->path_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Alias::kPathFieldNumber;
const int Alias::kAliasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Alias::Alias()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_Alias.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Alias)
}
Alias::Alias(const Alias& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alias().size() > 0) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_path()) {
    path_ = new ::gnmi::Path(*from.path_);
  } else {
    path_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.Alias)
}

void Alias::SharedCtor() {
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_ = NULL;
}

Alias::~Alias() {
  // @@protoc_insertion_point(destructor:gnmi.Alias)
  SharedDtor();
}

void Alias::SharedDtor() {
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete path_;
}

void Alias::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Alias::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Alias& Alias::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_Alias.base);
  return *internal_default_instance();
}


void Alias::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Alias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  _internal_metadata_.Clear();
}

bool Alias::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Alias)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alias = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), static_cast<int>(this->alias().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Alias.alias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Alias)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Alias)
  return false;
#undef DO_
}

void Alias::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Alias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_path(), output);
  }

  // string alias = 2;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Alias.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alias(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.Alias)
}

::google::protobuf::uint8* Alias::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Alias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_path(), deterministic, target);
  }

  // string alias = 2;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), static_cast<int>(this->alias().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Alias.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alias(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Alias)
  return target;
}

size_t Alias::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Alias)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string alias = 2;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *path_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Alias::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Alias)
  GOOGLE_DCHECK_NE(&from, this);
  const Alias* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Alias>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Alias)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Alias)
    MergeFrom(*source);
  }
}

void Alias::MergeFrom(const Alias& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Alias)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_path()) {
    mutable_path()->::gnmi::Path::MergeFrom(from.path());
  }
}

void Alias::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Alias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Alias::CopyFrom(const Alias& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Alias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Alias::IsInitialized() const {
  return true;
}

void Alias::Swap(Alias* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Alias::InternalSwap(Alias* other) {
  using std::swap;
  alias_.Swap(&other->alias_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(path_, other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Alias::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AliasList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AliasList::kAliasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AliasList::AliasList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_AliasList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.AliasList)
}
AliasList::AliasList(const AliasList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      alias_(from.alias_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gnmi.AliasList)
}

void AliasList::SharedCtor() {
}

AliasList::~AliasList() {
  // @@protoc_insertion_point(destructor:gnmi.AliasList)
  SharedDtor();
}

void AliasList::SharedDtor() {
}

void AliasList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AliasList::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AliasList& AliasList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_AliasList.base);
  return *internal_default_instance();
}


void AliasList::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.AliasList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alias_.Clear();
  _internal_metadata_.Clear();
}

bool AliasList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.AliasList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gnmi.Alias alias = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_alias()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.AliasList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.AliasList)
  return false;
#undef DO_
}

void AliasList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.AliasList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.Alias alias = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alias_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->alias(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.AliasList)
}

::google::protobuf::uint8* AliasList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.AliasList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.Alias alias = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alias_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->alias(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.AliasList)
  return target;
}

size_t AliasList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.AliasList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gnmi.Alias alias = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->alias_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->alias(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AliasList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.AliasList)
  GOOGLE_DCHECK_NE(&from, this);
  const AliasList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AliasList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.AliasList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.AliasList)
    MergeFrom(*source);
  }
}

void AliasList::MergeFrom(const AliasList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.AliasList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alias_.MergeFrom(from.alias_);
}

void AliasList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.AliasList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AliasList::CopyFrom(const AliasList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.AliasList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AliasList::IsInitialized() const {
  return true;
}

void AliasList::Swap(AliasList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AliasList::InternalSwap(AliasList* other) {
  using std::swap;
  CastToBase(&alias_)->InternalSwap(CastToBase(&other->alias_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AliasList::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetRequest::InitAsDefaultInstance() {
  ::gnmi::_SetRequest_default_instance_._instance.get_mutable()->prefix_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetRequest::kPrefixFieldNumber;
const int SetRequest::kDeleteFieldNumber;
const int SetRequest::kReplaceFieldNumber;
const int SetRequest::kUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetRequest::SetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_SetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.SetRequest)
}
SetRequest::SetRequest(const SetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      delete__(from.delete__),
      replace_(from.replace_),
      update_(from.update_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prefix()) {
    prefix_ = new ::gnmi::Path(*from.prefix_);
  } else {
    prefix_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.SetRequest)
}

void SetRequest::SharedCtor() {
  prefix_ = NULL;
}

SetRequest::~SetRequest() {
  // @@protoc_insertion_point(destructor:gnmi.SetRequest)
  SharedDtor();
}

void SetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete prefix_;
}

void SetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetRequest::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetRequest& SetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_SetRequest.base);
  return *internal_default_instance();
}


void SetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.SetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delete__.Clear();
  replace_.Clear();
  update_.Clear();
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) {
    delete prefix_;
  }
  prefix_ = NULL;
  _internal_metadata_.Clear();
}

bool SetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.SetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Path delete = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_delete_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Update replace = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_replace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Update update = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.SetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.SetRequest)
  return false;
#undef DO_
}

void SetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.SetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_prefix(), output);
  }

  // repeated .gnmi.Path delete = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delete__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->delete_(static_cast<int>(i)),
      output);
  }

  // repeated .gnmi.Update replace = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replace_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->replace(static_cast<int>(i)),
      output);
  }

  // repeated .gnmi.Update update = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->update_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->update(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.SetRequest)
}

::google::protobuf::uint8* SetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.SetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_prefix(), deterministic, target);
  }

  // repeated .gnmi.Path delete = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delete__size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->delete_(static_cast<int>(i)), deterministic, target);
  }

  // repeated .gnmi.Update replace = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->replace_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->replace(static_cast<int>(i)), deterministic, target);
  }

  // repeated .gnmi.Update update = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->update_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->update(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.SetRequest)
  return target;
}

size_t SetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.SetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gnmi.Path delete = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->delete__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->delete_(static_cast<int>(i)));
    }
  }

  // repeated .gnmi.Update replace = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->replace_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->replace(static_cast<int>(i)));
    }
  }

  // repeated .gnmi.Update update = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->update_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->update(static_cast<int>(i)));
    }
  }

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prefix_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.SetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.SetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.SetRequest)
    MergeFrom(*source);
  }
}

void SetRequest::MergeFrom(const SetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.SetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  delete__.MergeFrom(from.delete__);
  replace_.MergeFrom(from.replace_);
  update_.MergeFrom(from.update_);
  if (from.has_prefix()) {
    mutable_prefix()->::gnmi::Path::MergeFrom(from.prefix());
  }
}

void SetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.SetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRequest::CopyFrom(const SetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.SetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRequest::IsInitialized() const {
  return true;
}

void SetRequest::Swap(SetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetRequest::InternalSwap(SetRequest* other) {
  using std::swap;
  CastToBase(&delete__)->InternalSwap(CastToBase(&other->delete__));
  CastToBase(&replace_)->InternalSwap(CastToBase(&other->replace_));
  CastToBase(&update_)->InternalSwap(CastToBase(&other->update_));
  swap(prefix_, other->prefix_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetRequest::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetResponse::InitAsDefaultInstance() {
  ::gnmi::_SetResponse_default_instance_._instance.get_mutable()->prefix_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  ::gnmi::_SetResponse_default_instance_._instance.get_mutable()->message_ = const_cast< ::gnmi::Error*>(
      ::gnmi::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetResponse::kPrefixFieldNumber;
const int SetResponse::kResponseFieldNumber;
const int SetResponse::kMessageFieldNumber;
const int SetResponse::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetResponse::SetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_SetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.SetResponse)
}
SetResponse::SetResponse(const SetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      response_(from.response_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prefix()) {
    prefix_ = new ::gnmi::Path(*from.prefix_);
  } else {
    prefix_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::gnmi::Error(*from.message_);
  } else {
    message_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:gnmi.SetResponse)
}

void SetResponse::SharedCtor() {
  ::memset(&prefix_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&prefix_)) + sizeof(timestamp_));
}

SetResponse::~SetResponse() {
  // @@protoc_insertion_point(destructor:gnmi.SetResponse)
  SharedDtor();
}

void SetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete prefix_;
  if (this != internal_default_instance()) delete message_;
}

void SetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetResponse::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetResponse& SetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_SetResponse.base);
  return *internal_default_instance();
}


void SetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.SetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_.Clear();
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) {
    delete prefix_;
  }
  prefix_ = NULL;
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool SetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.SetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.UpdateResult response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Error message = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.SetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.SetResponse)
  return false;
#undef DO_
}

void SetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.SetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_prefix(), output);
  }

  // repeated .gnmi.UpdateResult response = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->response_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->response(static_cast<int>(i)),
      output);
  }

  // .gnmi.Error message = 3 [deprecated = true];
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_message(), output);
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.SetResponse)
}

::google::protobuf::uint8* SetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.SetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_prefix(), deterministic, target);
  }

  // repeated .gnmi.UpdateResult response = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->response_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->response(static_cast<int>(i)), deterministic, target);
  }

  // .gnmi.Error message = 3 [deprecated = true];
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_message(), deterministic, target);
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.SetResponse)
  return target;
}

size_t SetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.SetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gnmi.UpdateResult response = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->response_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->response(static_cast<int>(i)));
    }
  }

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prefix_);
  }

  // .gnmi.Error message = 3 [deprecated = true];
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.SetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.SetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.SetResponse)
    MergeFrom(*source);
  }
}

void SetResponse::MergeFrom(const SetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.SetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  response_.MergeFrom(from.response_);
  if (from.has_prefix()) {
    mutable_prefix()->::gnmi::Path::MergeFrom(from.prefix());
  }
  if (from.has_message()) {
    mutable_message()->::gnmi::Error::MergeFrom(from.message());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void SetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.SetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResponse::CopyFrom(const SetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.SetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResponse::IsInitialized() const {
  return true;
}

void SetResponse::Swap(SetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetResponse::InternalSwap(SetResponse* other) {
  using std::swap;
  CastToBase(&response_)->InternalSwap(CastToBase(&other->response_));
  swap(prefix_, other->prefix_);
  swap(message_, other->message_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetResponse::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateResult::InitAsDefaultInstance() {
  ::gnmi::_UpdateResult_default_instance_._instance.get_mutable()->path_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  ::gnmi::_UpdateResult_default_instance_._instance.get_mutable()->message_ = const_cast< ::gnmi::Error*>(
      ::gnmi::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateResult::kTimestampFieldNumber;
const int UpdateResult::kPathFieldNumber;
const int UpdateResult::kMessageFieldNumber;
const int UpdateResult::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateResult::UpdateResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_UpdateResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.UpdateResult)
}
UpdateResult::UpdateResult(const UpdateResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_path()) {
    path_ = new ::gnmi::Path(*from.path_);
  } else {
    path_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::gnmi::Error(*from.message_);
  } else {
    message_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(op_));
  // @@protoc_insertion_point(copy_constructor:gnmi.UpdateResult)
}

void UpdateResult::SharedCtor() {
  ::memset(&path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&path_)) + sizeof(op_));
}

UpdateResult::~UpdateResult() {
  // @@protoc_insertion_point(destructor:gnmi.UpdateResult)
  SharedDtor();
}

void UpdateResult::SharedDtor() {
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete message_;
}

void UpdateResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateResult::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateResult& UpdateResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_UpdateResult.base);
  return *internal_default_instance();
}


void UpdateResult::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.UpdateResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(op_));
  _internal_metadata_.Clear();
}

bool UpdateResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.UpdateResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Path path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Error message = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.UpdateResult.Operation op = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::gnmi::UpdateResult_Operation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.UpdateResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.UpdateResult)
  return false;
#undef DO_
}

void UpdateResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.UpdateResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1 [deprecated = true];
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // .gnmi.Path path = 2;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_path(), output);
  }

  // .gnmi.Error message = 3 [deprecated = true];
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_message(), output);
  }

  // .gnmi.UpdateResult.Operation op = 4;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->op(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.UpdateResult)
}

::google::protobuf::uint8* UpdateResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.UpdateResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1 [deprecated = true];
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // .gnmi.Path path = 2;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_path(), deterministic, target);
  }

  // .gnmi.Error message = 3 [deprecated = true];
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_message(), deterministic, target);
  }

  // .gnmi.UpdateResult.Operation op = 4;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->op(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.UpdateResult)
  return target;
}

size_t UpdateResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.UpdateResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gnmi.Path path = 2;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .gnmi.Error message = 3 [deprecated = true];
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  // int64 timestamp = 1 [deprecated = true];
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // .gnmi.UpdateResult.Operation op = 4;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.UpdateResult)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.UpdateResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.UpdateResult)
    MergeFrom(*source);
  }
}

void UpdateResult::MergeFrom(const UpdateResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.UpdateResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    mutable_path()->::gnmi::Path::MergeFrom(from.path());
  }
  if (from.has_message()) {
    mutable_message()->::gnmi::Error::MergeFrom(from.message());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void UpdateResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.UpdateResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateResult::CopyFrom(const UpdateResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.UpdateResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateResult::IsInitialized() const {
  return true;
}

void UpdateResult::Swap(UpdateResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateResult::InternalSwap(UpdateResult* other) {
  using std::swap;
  swap(path_, other->path_);
  swap(message_, other->message_);
  swap(timestamp_, other->timestamp_);
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateResult::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRequest::InitAsDefaultInstance() {
  ::gnmi::_GetRequest_default_instance_._instance.get_mutable()->prefix_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kPrefixFieldNumber;
const int GetRequest::kPathFieldNumber;
const int GetRequest::kTypeFieldNumber;
const int GetRequest::kEncodingFieldNumber;
const int GetRequest::kUseModelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_GetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.GetRequest)
}
GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_(from.path_),
      use_models_(from.use_models_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prefix()) {
    prefix_ = new ::gnmi::Path(*from.prefix_);
  } else {
    prefix_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&type_)) + sizeof(encoding_));
  // @@protoc_insertion_point(copy_constructor:gnmi.GetRequest)
}

void GetRequest::SharedCtor() {
  ::memset(&prefix_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encoding_) -
      reinterpret_cast<char*>(&prefix_)) + sizeof(encoding_));
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:gnmi.GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete prefix_;
}

void GetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRequest::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRequest& GetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_GetRequest.base);
  return *internal_default_instance();
}


void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  use_models_.Clear();
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) {
    delete prefix_;
  }
  prefix_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encoding_) -
      reinterpret_cast<char*>(&type_)) + sizeof(encoding_));
  _internal_metadata_.Clear();
}

bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.GetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Path path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.GetRequest.DataType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::gnmi::GetRequest_DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Encoding encoding = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::gnmi::Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.ModelData use_models = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_use_models()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.GetRequest)
  return false;
#undef DO_
}

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_prefix(), output);
  }

  // repeated .gnmi.Path path = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->path(static_cast<int>(i)),
      output);
  }

  // .gnmi.GetRequest.DataType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // .gnmi.Encoding encoding = 5;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->encoding(), output);
  }

  // repeated .gnmi.ModelData use_models = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->use_models_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->use_models(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.GetRequest)
}

::google::protobuf::uint8* GetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_prefix(), deterministic, target);
  }

  // repeated .gnmi.Path path = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->path(static_cast<int>(i)), deterministic, target);
  }

  // .gnmi.GetRequest.DataType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // .gnmi.Encoding encoding = 5;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->encoding(), target);
  }

  // repeated .gnmi.ModelData use_models = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->use_models_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->use_models(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.GetRequest)
  return target;
}

size_t GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.GetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gnmi.Path path = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->path(static_cast<int>(i)));
    }
  }

  // repeated .gnmi.ModelData use_models = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->use_models_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->use_models(static_cast<int>(i)));
    }
  }

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prefix_);
  }

  // .gnmi.GetRequest.DataType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .gnmi.Encoding encoding = 5;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.GetRequest)
    MergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  use_models_.MergeFrom(from.use_models_);
  if (from.has_prefix()) {
    mutable_prefix()->::gnmi::Path::MergeFrom(from.prefix());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRequest::IsInitialized() const {
  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  using std::swap;
  CastToBase(&path_)->InternalSwap(CastToBase(&other->path_));
  CastToBase(&use_models_)->InternalSwap(CastToBase(&other->use_models_));
  swap(prefix_, other->prefix_);
  swap(type_, other->type_);
  swap(encoding_, other->encoding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetResponse::InitAsDefaultInstance() {
  ::gnmi::_GetResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::gnmi::Error*>(
      ::gnmi::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResponse::kNotificationFieldNumber;
const int GetResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResponse::GetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_GetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.GetResponse)
}
GetResponse::GetResponse(const GetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notification_(from.notification_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::gnmi::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.GetResponse)
}

void GetResponse::SharedCtor() {
  error_ = NULL;
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:gnmi.GetResponse)
  SharedDtor();
}

void GetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void GetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetResponse::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResponse& GetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_GetResponse.base);
  return *internal_default_instance();
}


void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notification_.Clear();
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool GetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.GetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gnmi.Notification notification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_notification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Error error = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.GetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.GetResponse)
  return false;
#undef DO_
}

void GetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.Notification notification = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notification_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->notification(static_cast<int>(i)),
      output);
  }

  // .gnmi.Error error = 2 [deprecated = true];
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.GetResponse)
}

::google::protobuf::uint8* GetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.Notification notification = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notification_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notification(static_cast<int>(i)), deterministic, target);
  }

  // .gnmi.Error error = 2 [deprecated = true];
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.GetResponse)
  return target;
}

size_t GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.GetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gnmi.Notification notification = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notification_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notification(static_cast<int>(i)));
    }
  }

  // .gnmi.Error error = 2 [deprecated = true];
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.GetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.GetResponse)
    MergeFrom(*source);
  }
}

void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notification_.MergeFrom(from.notification_);
  if (from.has_error()) {
    mutable_error()->::gnmi::Error::MergeFrom(from.error());
  }
}

void GetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponse::IsInitialized() const {
  return true;
}

void GetResponse::Swap(GetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResponse::InternalSwap(GetResponse* other) {
  using std::swap;
  CastToBase(&notification_)->InternalSwap(CastToBase(&other->notification_));
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetResponse::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CapabilityRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CapabilityRequest::CapabilityRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_CapabilityRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.CapabilityRequest)
}
CapabilityRequest::CapabilityRequest(const CapabilityRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gnmi.CapabilityRequest)
}

void CapabilityRequest::SharedCtor() {
}

CapabilityRequest::~CapabilityRequest() {
  // @@protoc_insertion_point(destructor:gnmi.CapabilityRequest)
  SharedDtor();
}

void CapabilityRequest::SharedDtor() {
}

void CapabilityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CapabilityRequest::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CapabilityRequest& CapabilityRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_CapabilityRequest.base);
  return *internal_default_instance();
}


void CapabilityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.CapabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CapabilityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.CapabilityRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.CapabilityRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.CapabilityRequest)
  return false;
#undef DO_
}

void CapabilityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.CapabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.CapabilityRequest)
}

::google::protobuf::uint8* CapabilityRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.CapabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.CapabilityRequest)
  return target;
}

size_t CapabilityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.CapabilityRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CapabilityRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.CapabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CapabilityRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CapabilityRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.CapabilityRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.CapabilityRequest)
    MergeFrom(*source);
  }
}

void CapabilityRequest::MergeFrom(const CapabilityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.CapabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CapabilityRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.CapabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CapabilityRequest::CopyFrom(const CapabilityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.CapabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapabilityRequest::IsInitialized() const {
  return true;
}

void CapabilityRequest::Swap(CapabilityRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CapabilityRequest::InternalSwap(CapabilityRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CapabilityRequest::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CapabilityResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CapabilityResponse::kSupportedModelsFieldNumber;
const int CapabilityResponse::kSupportedEncodingsFieldNumber;
const int CapabilityResponse::kGNMIVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CapabilityResponse::CapabilityResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_CapabilityResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.CapabilityResponse)
}
CapabilityResponse::CapabilityResponse(const CapabilityResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      supported_models_(from.supported_models_),
      supported_encodings_(from.supported_encodings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gnmi_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gnmi_version().size() > 0) {
    gnmi_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gnmi_version_);
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.CapabilityResponse)
}

void CapabilityResponse::SharedCtor() {
  gnmi_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CapabilityResponse::~CapabilityResponse() {
  // @@protoc_insertion_point(destructor:gnmi.CapabilityResponse)
  SharedDtor();
}

void CapabilityResponse::SharedDtor() {
  gnmi_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CapabilityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CapabilityResponse::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CapabilityResponse& CapabilityResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_CapabilityResponse.base);
  return *internal_default_instance();
}


void CapabilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.CapabilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supported_models_.Clear();
  supported_encodings_.Clear();
  gnmi_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CapabilityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.CapabilityResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gnmi.ModelData supported_models = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_supported_models()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Encoding supported_encodings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_supported_encodings(static_cast< ::gnmi::Encoding >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_supported_encodings(static_cast< ::gnmi::Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gNMI_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gnmi_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gnmi_version().data(), static_cast<int>(this->gnmi_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.CapabilityResponse.gNMI_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.CapabilityResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.CapabilityResponse)
  return false;
#undef DO_
}

void CapabilityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.CapabilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.ModelData supported_models = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supported_models_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->supported_models(static_cast<int>(i)),
      output);
  }

  // repeated .gnmi.Encoding supported_encodings = 2;
  if (this->supported_encodings_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_supported_encodings_cached_byte_size_));
  }
  for (int i = 0, n = this->supported_encodings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->supported_encodings(i), output);
  }

  // string gNMI_version = 3;
  if (this->gnmi_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gnmi_version().data(), static_cast<int>(this->gnmi_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.CapabilityResponse.gNMI_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gnmi_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.CapabilityResponse)
}

::google::protobuf::uint8* CapabilityResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.CapabilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.ModelData supported_models = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supported_models_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->supported_models(static_cast<int>(i)), deterministic, target);
  }

  // repeated .gnmi.Encoding supported_encodings = 2;
  if (this->supported_encodings_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _supported_encodings_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->supported_encodings_, target);
  }

  // string gNMI_version = 3;
  if (this->gnmi_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gnmi_version().data(), static_cast<int>(this->gnmi_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.CapabilityResponse.gNMI_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gnmi_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.CapabilityResponse)
  return target;
}

size_t CapabilityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.CapabilityResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gnmi.ModelData supported_models = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->supported_models_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->supported_models(static_cast<int>(i)));
    }
  }

  // repeated .gnmi.Encoding supported_encodings = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->supported_encodings_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->supported_encodings(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _supported_encodings_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string gNMI_version = 3;
  if (this->gnmi_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gnmi_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CapabilityResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.CapabilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CapabilityResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CapabilityResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.CapabilityResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.CapabilityResponse)
    MergeFrom(*source);
  }
}

void CapabilityResponse::MergeFrom(const CapabilityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.CapabilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  supported_models_.MergeFrom(from.supported_models_);
  supported_encodings_.MergeFrom(from.supported_encodings_);
  if (from.gnmi_version().size() > 0) {

    gnmi_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gnmi_version_);
  }
}

void CapabilityResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.CapabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CapabilityResponse::CopyFrom(const CapabilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.CapabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapabilityResponse::IsInitialized() const {
  return true;
}

void CapabilityResponse::Swap(CapabilityResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CapabilityResponse::InternalSwap(CapabilityResponse* other) {
  using std::swap;
  CastToBase(&supported_models_)->InternalSwap(CastToBase(&other->supported_models_));
  supported_encodings_.InternalSwap(&other->supported_encodings_);
  gnmi_version_.Swap(&other->gnmi_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CapabilityResponse::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelData::kNameFieldNumber;
const int ModelData::kOrganizationFieldNumber;
const int ModelData::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelData::ModelData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gnmi_2fgnmi_2eproto::scc_info_ModelData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.ModelData)
}
ModelData::ModelData(const ModelData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  organization_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.organization().size() > 0) {
    organization_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.organization_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.ModelData)
}

void ModelData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ModelData::~ModelData() {
  // @@protoc_insertion_point(destructor:gnmi.ModelData)
  SharedDtor();
}

void ModelData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModelData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelData::descriptor() {
  ::protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelData& ModelData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gnmi_2fgnmi_2eproto::scc_info_ModelData.base);
  return *internal_default_instance();
}


void ModelData::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.ModelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ModelData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.ModelData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.ModelData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string organization = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_organization()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->organization().data(), static_cast<int>(this->organization().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.ModelData.organization"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.ModelData.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.ModelData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.ModelData)
  return false;
#undef DO_
}

void ModelData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.ModelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string organization = 2;
  if (this->organization().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organization().data(), static_cast<int>(this->organization().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.organization");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->organization(), output);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gnmi.ModelData)
}

::google::protobuf::uint8* ModelData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.ModelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string organization = 2;
  if (this->organization().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organization().data(), static_cast<int>(this->organization().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.organization");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->organization(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnmi.ModelData)
  return target;
}

size_t ModelData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.ModelData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string organization = 2;
  if (this->organization().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->organization());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.ModelData)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.ModelData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.ModelData)
    MergeFrom(*source);
  }
}

void ModelData::MergeFrom(const ModelData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.ModelData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.organization().size() > 0) {

    organization_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.organization_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void ModelData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.ModelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelData::CopyFrom(const ModelData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.ModelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelData::IsInitialized() const {
  return true;
}

void ModelData::Swap(ModelData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelData::InternalSwap(ModelData* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  organization_.Swap(&other->organization_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelData::GetMetadata() const {
  protobuf_gnmi_2fgnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gnmi_2fgnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

const ::std::string gnmi_service_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  gnmi_service(kGnmiServiceFieldNumber, gnmi_service_default);

// @@protoc_insertion_point(namespace_scope)
}  // namespace gnmi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::Notification* Arena::CreateMaybeMessage< ::gnmi::Notification >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::Notification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::Update* Arena::CreateMaybeMessage< ::gnmi::Update >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::Update >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::TypedValue* Arena::CreateMaybeMessage< ::gnmi::TypedValue >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::TypedValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::Path* Arena::CreateMaybeMessage< ::gnmi::Path >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::Path >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::PathElem_KeyEntry_DoNotUse* Arena::CreateMaybeMessage< ::gnmi::PathElem_KeyEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::PathElem_KeyEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::PathElem* Arena::CreateMaybeMessage< ::gnmi::PathElem >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::PathElem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::Value* Arena::CreateMaybeMessage< ::gnmi::Value >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::Error* Arena::CreateMaybeMessage< ::gnmi::Error >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::Error >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::Decimal64* Arena::CreateMaybeMessage< ::gnmi::Decimal64 >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::Decimal64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::ScalarArray* Arena::CreateMaybeMessage< ::gnmi::ScalarArray >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::ScalarArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::SubscribeRequest* Arena::CreateMaybeMessage< ::gnmi::SubscribeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::SubscribeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::Poll* Arena::CreateMaybeMessage< ::gnmi::Poll >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::Poll >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::SubscribeResponse* Arena::CreateMaybeMessage< ::gnmi::SubscribeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::SubscribeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::SubscriptionList* Arena::CreateMaybeMessage< ::gnmi::SubscriptionList >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::SubscriptionList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::Subscription* Arena::CreateMaybeMessage< ::gnmi::Subscription >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::Subscription >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::QOSMarking* Arena::CreateMaybeMessage< ::gnmi::QOSMarking >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::QOSMarking >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::Alias* Arena::CreateMaybeMessage< ::gnmi::Alias >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::Alias >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::AliasList* Arena::CreateMaybeMessage< ::gnmi::AliasList >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::AliasList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::SetRequest* Arena::CreateMaybeMessage< ::gnmi::SetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::SetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::SetResponse* Arena::CreateMaybeMessage< ::gnmi::SetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::SetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::UpdateResult* Arena::CreateMaybeMessage< ::gnmi::UpdateResult >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::UpdateResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::GetRequest* Arena::CreateMaybeMessage< ::gnmi::GetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::GetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::GetResponse* Arena::CreateMaybeMessage< ::gnmi::GetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::GetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::CapabilityRequest* Arena::CreateMaybeMessage< ::gnmi::CapabilityRequest >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::CapabilityRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::CapabilityResponse* Arena::CreateMaybeMessage< ::gnmi::CapabilityResponse >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::CapabilityResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gnmi::ModelData* Arena::CreateMaybeMessage< ::gnmi::ModelData >(Arena* arena) {
  return Arena::CreateInternal< ::gnmi::ModelData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
