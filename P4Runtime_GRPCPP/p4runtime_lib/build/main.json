{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["do_l3_l2_0", 1, false],
        ["userMetadata.ip_proto", 8, false],
        ["userMetadata.icmp_type", 8, false],
        ["userMetadata.dst_ipv4", 32, false],
        ["userMetadata.is_multicast", 1, false],
        ["_padding_0", 6, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["bit_mcast", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["recirculate_flag", 32, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "cpu_out_header_t",
      "id" : 2,
      "fields" : [
        ["egress_port", 9, false],
        ["_pad", 7, false]
      ]
    },
    {
      "name" : "cpu_in_header_t",
      "id" : 3,
      "fields" : [
        ["ingress_port", 9, false],
        ["_pad", 7, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 4,
      "fields" : [
        ["dst_addr", 48, false],
        ["src_addr", 48, false],
        ["ether_type", 16, false]
      ]
    },
    {
      "name" : "mf_guid_t",
      "id" : 5,
      "fields" : [
        ["mf_type", 32, false],
        ["src_guid", 32, false],
        ["dest_guid", 32, false]
      ]
    },
    {
      "name" : "ndn_t",
      "id" : 6,
      "fields" : [
        ["pad0", 16, false],
        ["pad1", 128, false],
        ["pad2", 40, false],
        ["ndnDoman", 8, false]
      ]
    },
    {
      "name" : "gbc_t",
      "id" : 7,
      "fields" : [
        ["lat", 32, false],
        ["longg", 32, false],
        ["geoAreaPosLat", 32, false],
        ["geoAreaPosLon", 32, false]
      ]
    },
    {
      "name" : "geo_t",
      "id" : 8,
      "fields" : [
        ["nh", 4, false],
        ["ht", 4, false]
      ]
    },
    {
      "name" : "arp_t",
      "id" : 9,
      "fields" : [
        ["hw_type", 16, false],
        ["proto_type", 16, false],
        ["hw_addr_len", 8, false],
        ["proto_addr_len", 8, false],
        ["opcode", 16, false]
      ]
    },
    {
      "name" : "arp_ipv4_t",
      "id" : 10,
      "fields" : [
        ["src_hw_addr", 48, false],
        ["src_proto_addr", 32, false],
        ["dst_hw_addr", 48, false],
        ["dst_proto_addr", 32, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 11,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["dscp", 6, false],
        ["ecn", 2, false],
        ["total_len", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["frag_offset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdr_checksum", 16, false],
        ["src_addr", 32, false],
        ["dst_addr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 12,
      "fields" : [
        ["src_port", 16, false],
        ["dst_port", 16, false],
        ["seq_no", 32, false],
        ["ack_no", 32, false],
        ["data_offset", 4, false],
        ["res", 3, false],
        ["ecn", 3, false],
        ["ctrl", 6, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgent_ptr", 16, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 13,
      "fields" : [
        ["src_port", 16, false],
        ["dst_port", 16, false],
        ["len", 16, false],
        ["checksum", 16, false]
      ]
    },
    {
      "name" : "icmp_t",
      "id" : 14,
      "fields" : [
        ["type", 8, false],
        ["icmp_code", 8, false],
        ["checksum", 16, false],
        ["identifier", 16, false],
        ["sequence_number", 16, false],
        ["timestamp", 64, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "cpu_out",
      "id" : 2,
      "header_type" : "cpu_out_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "cpu_in",
      "id" : 3,
      "header_type" : "cpu_in_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 4,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "mf",
      "id" : 5,
      "header_type" : "mf_guid_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ndn",
      "id" : 6,
      "header_type" : "ndn_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "gbc",
      "id" : 7,
      "header_type" : "gbc_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "geo",
      "id" : 8,
      "header_type" : "geo_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "arp",
      "id" : 9,
      "header_type" : "arp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "arp_ipv4",
      "id" : 10,
      "header_type" : "arp_ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 11,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 12,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 13,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "icmp",
      "id" : 14,
      "header_type" : "icmp_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [
    {
      "id" : 1,
      "name" : "fl",
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 542,
        "column" : 34,
        "source_fragment" : "{ standard_metadata.ingress_port }"
      },
      "elements" : [
        {
          "type" : "field",
          "value" : ["standard_metadata", "ingress_port"]
        }
      ]
    }
  ],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x00ff",
              "mask" : null,
              "next_state" : "parse_packet_out"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ]
        },
        {
          "name" : "parse_packet_out",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "cpu_out"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ethernet",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x0806",
              "mask" : null,
              "next_state" : "parse_arp"
            },
            {
              "type" : "hexstr",
              "value" : "0x27c0",
              "mask" : null,
              "next_state" : "parse_mf"
            },
            {
              "type" : "hexstr",
              "value" : "0x8947",
              "mask" : null,
              "next_state" : "parse_geo"
            },
            {
              "type" : "hexstr",
              "value" : "0x8624",
              "mask" : null,
              "next_state" : "parse_ndn"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "ether_type"]
            }
          ]
        },
        {
          "name" : "parse_mf",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "mf"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ndn",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ndn"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_geo",
          "id" : 5,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "geo"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x04",
              "mask" : null,
              "next_state" : "parse_gbc"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["geo", "ht"]
            }
          ]
        },
        {
          "name" : "parse_gbc",
          "id" : 6,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "gbc"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_arp",
          "id" : 7,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "arp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x00010800",
              "mask" : null,
              "next_state" : "parse_arp_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["arp", "hw_type"]
            },
            {
              "type" : "field",
              "value" : ["arp", "proto_type"]
            }
          ]
        },
        {
          "name" : "parse_arp_ipv4",
          "id" : 8,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "arp_ipv4"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata.dst_ipv4"]
                },
                {
                  "type" : "field",
                  "value" : ["arp_ipv4", "dst_proto_addr"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ipv4",
          "id" : 9,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata.ip_proto"]
                },
                {
                  "type" : "field",
                  "value" : ["ipv4", "protocol"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "type" : "hexstr",
              "value" : "0x01",
              "mask" : null,
              "next_state" : "parse_icmp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 10,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_udp",
          "id" : 11,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_icmp",
          "id" : 12,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "icmp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata.icmp_type"]
                },
                {
                  "type" : "field",
                  "value" : ["icmp", "type"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 640,
        "column" : 8,
        "source_fragment" : "DeparserImpl"
      },
      "order" : ["cpu_in", "ethernet", "mf", "geo", "gbc", "ndn", "arp", "arp_ipv4", "ipv4", "tcp", "udp", "icmp"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [
    {
      "name" : "arp_reply_table_counter",
      "id" : 0,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 357,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "IngressPipeImpl.arp_reply_table"
    },
    {
      "name" : "l2_exact_table_counter",
      "id" : 1,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 331,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "IngressPipeImpl.l2_exact_table"
    },
    {
      "name" : "mf_conversion_table_counter",
      "id" : 2,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 478,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "IngressPipeImpl.mf_conversion_table"
    },
    {
      "name" : "mf_forward_table_counter",
      "id" : 3,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 493,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "IngressPipeImpl.mf_forward_table"
    },
    {
      "name" : "geo_conversion_table_counter",
      "id" : 4,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 516,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "IngressPipeImpl.geo_conversion_table"
    },
    {
      "name" : "geo_forward_table_counter",
      "id" : 5,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 532,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "IngressPipeImpl.geo_forward_table"
    },
    {
      "name" : "ipv4_decrypt_table_counter",
      "id" : 6,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 416,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "IngressPipeImpl.ipv4_decrypt_table"
    },
    {
      "name" : "ipv4_encrypt_table_counter",
      "id" : 7,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 399,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "IngressPipeImpl.ipv4_encrypt_table"
    },
    {
      "name" : "ip_forward_table_counter",
      "id" : 8,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 381,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "IngressPipeImpl.ipv4_forward_table"
    },
    {
      "name" : "acl_table_counter",
      "id" : 9,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 560,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "IngressPipeImpl.acl_table"
    }
  ],
  "register_arrays" : [],
  "calculations" : [],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "IngressPipeImpl.drop",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 306,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.drop",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 306,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.drop",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 306,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.drop",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 306,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.drop",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 306,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.drop",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 306,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.drop",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 306,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.drop",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 306,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.set_egress_port",
      "id" : 11,
      "runtime_data" : [
        {
          "name" : "port_num",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 312,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port_num"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.set_egress_port",
      "id" : 12,
      "runtime_data" : [
        {
          "name" : "port_num",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 312,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port_num"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.set_egress_port",
      "id" : 13,
      "runtime_data" : [
        {
          "name" : "port_num",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 312,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port_num"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.set_egress_port",
      "id" : 14,
      "runtime_data" : [
        {
          "name" : "port_num",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 312,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port_num"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.set_multicast_group",
      "id" : 15,
      "runtime_data" : [
        {
          "name" : "gid",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 316,
            "column" : 8,
            "source_fragment" : "standard_metadata.mcast_grp = gid"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.is_multicast"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 317,
            "column" : 8,
            "source_fragment" : "meta.is_multicast = true"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.send_arp_reply",
      "id" : 16,
      "runtime_data" : [
        {
          "name" : "target_mac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dst_addr"]
            },
            {
              "type" : "field",
              "value" : ["arp_ipv4", "src_hw_addr"]
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 337,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dst_addr = hdr.arp_ipv4.src_hw_addr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "src_addr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 338,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.src_addr = target_mac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["arp", "opcode"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0002"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 64,
            "column" : 12,
            "source_fragment" : "2 ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["arp_ipv4", "dst_hw_addr"]
            },
            {
              "type" : "field",
              "value" : ["arp_ipv4", "src_hw_addr"]
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 340,
            "column" : 8,
            "source_fragment" : "hdr.arp_ipv4.dst_hw_addr = hdr.arp_ipv4.src_hw_addr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["arp_ipv4", "dst_proto_addr"]
            },
            {
              "type" : "field",
              "value" : ["arp_ipv4", "src_proto_addr"]
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 341,
            "column" : 8,
            "source_fragment" : "hdr.arp_ipv4.dst_proto_addr = hdr.arp_ipv4.src_proto_addr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["arp_ipv4", "src_hw_addr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 342,
            "column" : 8,
            "source_fragment" : "hdr.arp_ipv4.src_hw_addr = target_mac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["arp_ipv4", "src_proto_addr"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.dst_ipv4"]
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 343,
            "column" : 8,
            "source_fragment" : "hdr.arp_ipv4.src_proto_addr = meta.dst_ipv4"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 344,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.set_egress_port_and_mac",
      "id" : 17,
      "runtime_data" : [
        {
          "name" : "port_num",
          "bitwidth" : 9
        },
        {
          "name" : "target_mac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 312,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port_num; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dst_addr"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 363,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dst_addr = target_mac; ..."
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.ipv4_encrypt",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            },
            {
              "type" : "hexstr",
              "value" : "0x32"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 388,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.protocol=50"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.ipv4_decrypt",
      "id" : 19,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "recirculate_flag"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 405,
            "column" : 8,
            "source_fragment" : "standard_metadata.recirculate_flag = 1"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.mf_to_ip",
      "id" : 20,
      "runtime_data" : [
        {
          "name" : "port_num",
          "bitwidth" : 9
        },
        {
          "name" : "target_mac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "ether_type"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0800"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 49,
            "column" : 11,
            "source_fragment" : "0x0800, ..."
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mf"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 462,
            "column" : 8,
            "source_fragment" : "hdr.mf.setInvalid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 312,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port_num; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dst_addr"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 363,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dst_addr = target_mac; ..."
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.geo_to_ip",
      "id" : 21,
      "runtime_data" : [
        {
          "name" : "port_num",
          "bitwidth" : 9
        },
        {
          "name" : "target_mac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "ether_type"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0800"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 49,
            "column" : 11,
            "source_fragment" : "0x0800, ..."
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "geo"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 500,
            "column" : 8,
            "source_fragment" : "hdr.geo.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "gbc"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 501,
            "column" : 8,
            "source_fragment" : "hdr.gbc.setInvalid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 312,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port_num; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dst_addr"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 363,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dst_addr = target_mac; ..."
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.send_to_cpu",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00ff"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 538,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = 255"
          }
        }
      ]
    },
    {
      "name" : "IngressPipeImpl.clone_to_cpu",
      "id" : 23,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "clone_ingress_pkt_to_egress",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x00000063"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 542,
            "column" : 8,
            "source_fragment" : "clone3(CloneType.I2E, 99, { standard_metadata.ingress_port })"
          }
        }
      ]
    },
    {
      "name" : "main566",
      "id" : 24,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["cpu_out", "egress_port"]
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 566,
            "column" : 12,
            "source_fragment" : "standard_metadata.egress_spec = hdr.cpu_out.egress_port"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "cpu_out"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 567,
            "column" : 12,
            "source_fragment" : "hdr.cpu_out.setInvalid()"
          }
        },
        {
          "op" : "exit",
          "parameters" : [],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 568,
            "column" : 12,
            "source_fragment" : "exit"
          }
        }
      ]
    },
    {
      "name" : "main576",
      "id" : 25,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "do_l3_l2_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 576,
            "column" : 16,
            "source_fragment" : "do_l3_l2 = false"
          }
        }
      ]
    },
    {
      "name" : "main571",
      "id" : 26,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "do_l3_l2_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 571,
            "column" : 8,
            "source_fragment" : "bool do_l3_l2 = true;"
          }
        }
      ]
    },
    {
      "name" : "main619",
      "id" : 27,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "cpu_in"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 619,
            "column" : 12,
            "source_fragment" : "hdr.cpu_in.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cpu_in", "ingress_port"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 620,
            "column" : 12,
            "source_fragment" : "hdr.cpu_in.ingress_port = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "exit",
          "parameters" : [],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 621,
            "column" : 12,
            "source_fragment" : "exit"
          }
        }
      ]
    },
    {
      "name" : "main626",
      "id" : 28,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 626,
            "column" : 12,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 300,
        "column" : 8,
        "source_fragment" : "IngressPipeImpl"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "tbl_main566",
          "id" : 0,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 566,
            "column" : 42,
            "source_fragment" : "= hdr.cpu_out.egress_port; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [24],
          "actions" : ["main566"],
          "base_default_next" : "tbl_main571",
          "next_tables" : {
            "main566" : "tbl_main571"
          },
          "default_entry" : {
            "action_id" : 24,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_main571",
          "id" : 1,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 571,
            "column" : 8,
            "source_fragment" : "bool do_l3_l2 = true;"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [26],
          "actions" : ["main571"],
          "base_default_next" : "node_5",
          "next_tables" : {
            "main571" : "node_5"
          },
          "default_entry" : {
            "action_id" : 26,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressPipeImpl.arp_reply_table",
          "id" : 2,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 347,
            "column" : 7,
            "source_fragment" : "arp_reply_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.dst_ipv4",
              "target" : ["scalars", "userMetadata.dst_ipv4"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16, 4],
          "actions" : ["IngressPipeImpl.send_arp_reply", "IngressPipeImpl.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : "tbl_main576",
            "__MISS__" : "node_8"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_main576",
          "id" : 3,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 576,
            "column" : 25,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [25],
          "actions" : ["main576"],
          "base_default_next" : "node_8",
          "next_tables" : {
            "main576" : "node_8"
          },
          "default_entry" : {
            "action_id" : 25,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressPipeImpl.l2_exact_table",
          "id" : 4,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 320,
            "column" : 10,
            "source_fragment" : "l2_exact_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ethernet.dst_addr",
              "target" : ["ethernet", "dst_addr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11, 15, 3],
          "actions" : ["IngressPipeImpl.set_egress_port", "IngressPipeImpl.set_multicast_group", "IngressPipeImpl.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "__MISS__" : "node_10",
            "__HIT__" : "IngressPipeImpl.acl_table"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressPipeImpl.mf_conversion_table",
          "id" : 5,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 467,
            "column" : 10,
            "source_fragment" : "mf_conversion_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.mf.src_guid",
              "target" : ["mf", "src_guid"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.mf.dest_guid",
              "target" : ["mf", "dest_guid"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [20, 6],
          "actions" : ["IngressPipeImpl.mf_to_ip", "IngressPipeImpl.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "__MISS__" : "IngressPipeImpl.mf_forward_table",
            "__HIT__" : "IngressPipeImpl.acl_table"
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressPipeImpl.mf_forward_table",
          "id" : 6,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 483,
            "column" : 10,
            "source_fragment" : "mf_forward_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.mf.dest_guid",
              "target" : ["mf", "dest_guid"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13, 7],
          "actions" : ["IngressPipeImpl.set_egress_port", "IngressPipeImpl.drop"],
          "base_default_next" : "IngressPipeImpl.acl_table",
          "next_tables" : {
            "IngressPipeImpl.set_egress_port" : "IngressPipeImpl.acl_table",
            "IngressPipeImpl.drop" : "IngressPipeImpl.acl_table"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressPipeImpl.geo_conversion_table",
          "id" : 7,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 505,
            "column" : 10,
            "source_fragment" : "geo_conversion_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.gbc.geoAreaPosLat",
              "target" : ["gbc", "geoAreaPosLat"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.gbc.geoAreaPosLon",
              "target" : ["gbc", "geoAreaPosLon"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [21, 8],
          "actions" : ["IngressPipeImpl.geo_to_ip", "IngressPipeImpl.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "__MISS__" : "IngressPipeImpl.geo_forward_table",
            "__HIT__" : "IngressPipeImpl.acl_table"
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressPipeImpl.geo_forward_table",
          "id" : 8,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 521,
            "column" : 10,
            "source_fragment" : "geo_forward_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.gbc.geoAreaPosLat",
              "target" : ["gbc", "geoAreaPosLat"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.gbc.geoAreaPosLon",
              "target" : ["gbc", "geoAreaPosLon"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14, 9],
          "actions" : ["IngressPipeImpl.set_egress_port", "IngressPipeImpl.drop"],
          "base_default_next" : "IngressPipeImpl.acl_table",
          "next_tables" : {
            "IngressPipeImpl.set_egress_port" : "IngressPipeImpl.acl_table",
            "IngressPipeImpl.drop" : "IngressPipeImpl.acl_table"
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressPipeImpl.ipv4_decrypt_table",
          "id" : 9,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 408,
            "column" : 10,
            "source_fragment" : "ipv4_decrypt_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dst_addr",
              "target" : ["ipv4", "dst_addr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [19, 1],
          "actions" : ["IngressPipeImpl.ipv4_decrypt", "NoAction"],
          "base_default_next" : "IngressPipeImpl.ipv4_forward_table",
          "next_tables" : {
            "IngressPipeImpl.ipv4_decrypt" : "IngressPipeImpl.ipv4_forward_table",
            "NoAction" : "IngressPipeImpl.ipv4_forward_table"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "IngressPipeImpl.ipv4_encrypt_table",
          "id" : 10,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 391,
            "column" : 10,
            "source_fragment" : "ipv4_encrypt_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.src_addr",
              "target" : ["ipv4", "src_addr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18, 0],
          "actions" : ["IngressPipeImpl.ipv4_encrypt", "NoAction"],
          "base_default_next" : "IngressPipeImpl.ipv4_forward_table",
          "next_tables" : {
            "IngressPipeImpl.ipv4_encrypt" : "IngressPipeImpl.ipv4_forward_table",
            "NoAction" : "IngressPipeImpl.ipv4_forward_table"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "IngressPipeImpl.ipv4_forward_table",
          "id" : 11,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 370,
            "column" : 10,
            "source_fragment" : "ipv4_forward_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dst_addr",
              "target" : ["ipv4", "dst_addr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12, 17, 5],
          "actions" : ["IngressPipeImpl.set_egress_port", "IngressPipeImpl.set_egress_port_and_mac", "IngressPipeImpl.drop"],
          "base_default_next" : "IngressPipeImpl.acl_table",
          "next_tables" : {
            "IngressPipeImpl.set_egress_port" : "IngressPipeImpl.acl_table",
            "IngressPipeImpl.set_egress_port_and_mac" : "IngressPipeImpl.acl_table",
            "IngressPipeImpl.drop" : "IngressPipeImpl.acl_table"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "IngressPipeImpl.acl_table",
          "id" : 12,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 545,
            "column" : 10,
            "source_fragment" : "acl_table"
          },
          "key" : [
            {
              "match_type" : "ternary",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.dst_addr",
              "target" : ["ethernet", "dst_addr"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.src_addr",
              "target" : ["ethernet", "src_addr"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.ether_type",
              "target" : ["ethernet", "ether_type"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "meta.ip_proto",
              "target" : ["scalars", "userMetadata.ip_proto"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "meta.icmp_type",
              "target" : ["scalars", "userMetadata.icmp_type"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [22, 23, 10, 2],
          "actions" : ["IngressPipeImpl.send_to_cpu", "IngressPipeImpl.clone_to_cpu", "IngressPipeImpl.drop", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "IngressPipeImpl.send_to_cpu" : null,
            "IngressPipeImpl.clone_to_cpu" : null,
            "IngressPipeImpl.drop" : null,
            "NoAction" : null
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 565,
            "column" : 12,
            "source_fragment" : "hdr.cpu_out.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["cpu_out", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_main566",
          "false_next" : "tbl_main571"
        },
        {
          "name" : "node_5",
          "id" : 1,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 574,
            "column" : 5,
            "source_fragment" : "hdr.arp.isValid() && hdr.arp_ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["arp", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["arp_ipv4", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "IngressPipeImpl.arp_reply_table",
          "false_next" : "node_8"
        },
        {
          "name" : "node_8",
          "id" : 2,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 580,
            "column" : 12,
            "source_fragment" : "do_l3_l2"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["scalars", "do_l3_l2_0"]
              }
            }
          },
          "true_next" : "IngressPipeImpl.l2_exact_table",
          "false_next" : "IngressPipeImpl.acl_table"
        },
        {
          "name" : "node_10",
          "id" : 3,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 588,
            "column" : 19,
            "source_fragment" : "hdr.mf.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["mf", "$valid$"]
              }
            }
          },
          "true_next" : "IngressPipeImpl.mf_conversion_table",
          "false_next" : "node_13"
        },
        {
          "name" : "node_13",
          "id" : 4,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 592,
            "column" : 25,
            "source_fragment" : "hdr.gbc.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["gbc", "$valid$"]
              }
            }
          },
          "true_next" : "IngressPipeImpl.geo_conversion_table",
          "false_next" : "node_16"
        },
        {
          "name" : "node_16",
          "id" : 5,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 596,
            "column" : 26,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "true_next" : "node_17",
          "false_next" : "IngressPipeImpl.acl_table"
        },
        {
          "name" : "node_17",
          "id" : 6,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 597,
            "column" : 23,
            "source_fragment" : "hdr.ipv4.protocol==50"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["ipv4", "protocol"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x32"
              }
            }
          },
          "true_next" : "IngressPipeImpl.ipv4_decrypt_table",
          "false_next" : "IngressPipeImpl.ipv4_encrypt_table"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "../../../ppk/examples/main.p4",
        "line" : 612,
        "column" : 8,
        "source_fragment" : "EgressPipeImpl"
      },
      "init_table" : "node_24",
      "tables" : [
        {
          "name" : "tbl_main619",
          "id" : 13,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 619,
            "column" : 12,
            "source_fragment" : "hdr.cpu_in.setValid(); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [27],
          "actions" : ["main619"],
          "base_default_next" : "node_26",
          "next_tables" : {
            "main619" : "node_26"
          },
          "default_entry" : {
            "action_id" : 27,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_main626",
          "id" : 14,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 626,
            "column" : 12,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [28],
          "actions" : ["main626"],
          "base_default_next" : null,
          "next_tables" : {
            "main626" : null
          },
          "default_entry" : {
            "action_id" : 28,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_24",
          "id" : 7,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 617,
            "column" : 12,
            "source_fragment" : "standard_metadata.egress_port == 255"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "egress_port"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00ff"
              }
            }
          },
          "true_next" : "tbl_main619",
          "false_next" : "node_26"
        },
        {
          "name" : "node_26",
          "id" : 8,
          "source_info" : {
            "filename" : "../../../ppk/examples/main.p4",
            "line" : 624,
            "column" : 12,
            "source_fragment" : "meta.is_multicast == true && ..."
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.is_multicast"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_main626"
        }
      ]
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.recirculate_flag",
      ["standard_metadata", "recirculate_flag"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "./main.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}